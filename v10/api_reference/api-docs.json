{
  "openapi": "3.0.1",
  "info": { "title": "UTMStack API", "version": "10.5.19" },
  "servers": [{ "url": "/", "description": "Default Server URL" }],
  "security": [{ "bearerAuth": [], "ApiKeyAuth": [] }],
  "paths": {
    "/management/logs": {
      "get": {
        "tags": ["logs-resource"],
        "operationId": "getList",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/LoggerVM" }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["logs-resource"],
        "operationId": "changeLevel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoggerVM" }
            }
          },
          "required": true
        },
        "responses": { "204": { "description": "No Content" } }
      }
    },
    "/api/utm-visualizations": {
      "get": {
        "tags": ["utm-visualization-resource"],
        "operationId": "getAllUtmVisualizations",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UtmVisualizationCriteria"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UtmVisualization" }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["utm-visualization-resource"],
        "operationId": "updateUtmVisualization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmVisualization" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmVisualization" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["utm-visualization-resource"],
        "operationId": "createUtmVisualization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmVisualization" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmVisualization" }
              }
            }
          }
        }
      }
    },
    "/api/utm-servers": {
      "get": {
        "tags": ["utm-server-resource"],
        "operationId": "getAllUtmServers",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UtmServerCriteria" }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UtmServer" }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["utm-server-resource"],
        "operationId": "updateUtmServer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmServer" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/UtmServer" } }
            }
          }
        }
      },
      "post": {
        "tags": ["utm-server-resource"],
        "operationId": "createUtmServer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmServer" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/UtmServer" } }
            }
          }
        }
      }
    },
    "/api/utm-server-modules": {
      "get": {
        "tags": ["utm-server-module-resource"],
        "operationId": "getAllUtmServerModules",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UtmServerModuleCriteria" }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UtmServerModule" }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["utm-server-module-resource"],
        "operationId": "updateUtmServerModule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmServerModule" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmServerModule" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["utm-server-module-resource"],
        "operationId": "createUtmServerModule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmServerModule" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmServerModule" }
              }
            }
          }
        }
      }
    },
    "/api/utm-schedules": {
      "get": {
        "tags": ["utm-schedule-resource"],
        "operationId": "getAllUtmSchedules",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UtmSchedule" }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["utm-schedule-resource"],
        "operationId": "updateUtmSchedule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmSchedule" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmSchedule" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["utm-schedule-resource"],
        "operationId": "createUtmSchedule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmSchedule" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmSchedule" }
              }
            }
          }
        }
      }
    },
    "/api/utm-reports": {
      "get": {
        "tags": ["utm-report-resource"],
        "operationId": "getAllUtmReports",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UtmReportCriteria" }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UtmReport" }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["utm-report-resource"],
        "operationId": "updateUtmReports",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmReport" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/UtmReport" } }
            }
          }
        }
      },
      "post": {
        "tags": ["utm-report-resource"],
        "operationId": "createUtmReports",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmReport" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/UtmReport" } }
            }
          }
        }
      }
    },
    "/api/utm-report-sections": {
      "get": {
        "tags": ["utm-report-section-resource"],
        "operationId": "getAllUtmReportSections",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UtmReportSectionCriteria"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UtmReportSection" }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["utm-report-section-resource"],
        "operationId": "updateUtmReportSection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmReportSection" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmReportSection" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["utm-report-section-resource"],
        "operationId": "createUtmReportSection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmReportSection" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmReportSection" }
              }
            }
          }
        }
      }
    },
    "/api/utm-open-ports": {
      "get": {
        "tags": ["utm-ports-resource"],
        "operationId": "getAllUtmOpenPorts",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UtmPortsCriteria" }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UtmPorts" }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["utm-ports-resource"],
        "operationId": "updateUtmOpenPort",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmPorts" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/UtmPorts" } }
            }
          }
        }
      },
      "post": {
        "tags": ["utm-ports-resource"],
        "operationId": "createUtmOpenPort",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmPorts" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/UtmPorts" } }
            }
          }
        }
      }
    },
    "/api/utm-network-scans": {
      "get": {
        "tags": ["utm-network-scan-resource"],
        "operationId": "getAllUtmNetworkScans",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UtmNetworkScanCriteria" }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UtmNetworkScan" }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["utm-network-scan-resource"],
        "operationId": "updateUtmNetworkScan",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmNetworkScan" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmNetworkScan" }
              }
            }
          }
        }
      }
    },
    "/api/utm-network-scans/updateType": {
      "put": {
        "tags": ["utm-network-scan-resource"],
        "operationId": "updateType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateTypeRequestBody" }
            }
          },
          "required": true
        },
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/utm-network-scans/updateGroup": {
      "put": {
        "tags": ["utm-network-scan-resource"],
        "operationId": "updateGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGroupRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/utm-modules/activateDeactivate": {
      "put": {
        "tags": ["utm-module-resource"],
        "operationId": "activateDeactivate",
        "parameters": [
          {
            "name": "serverId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "nameShort",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "FILE_INTEGRITY",
                "NETFLOW",
                "WINDOWS_AGENT",
                "SYSLOG",
                "LINUX_LOGS",
                "VMWARE",
                "AWS_TRAFFIC_MIRROR",
                "AWS_IAM_USER",
                "AWS_CLOUDTRAIL",
                "AIX",
                "AWS_SQL_SERVER",
                "AWS_POSTGRESQL",
                "AWS_BEANSTALK",
                "AWS_FARGATE",
                "AWS_LAMBDA",
                "AD_AUDIT",
                "SOPHOS",
                "AZURE",
                "O365",
                "IIS",
                "GCP",
                "JSON",
                "MACOS_AGENT",
                "LINUX_AGENT",
                "APACHE",
                "APACHE2",
                "AUDITD",
                "ELASTICSEARCH",
                "HAPROXY",
                "KAFKA",
                "KIBANA",
                "LOGSTASH",
                "MONGODB",
                "MYSQL",
                "NATS",
                "NGINX",
                "OSQUERY",
                "POSTGRESQL",
                "REDIS",
                "TRAEFIK",
                "CISCO",
                "MERAKI",
                "ESET",
                "KASPERSKY",
                "SENTINEL_ONE",
                "FORTIGATE",
                "FORTIWEB",
                "SOPHOS_XG",
                "FIRE_POWER",
                "UFW",
                "MACOS",
                "MIKROTIK",
                "PALO_ALTO",
                "CISCO_SWITCH",
                "SONIC_WALL",
                "DECEPTIVE_BYTES",
                "GITHUB",
                "AS_400",
                "SALESFORCE",
                "BITDEFENDER",
                "SOC_AI",
                "PFSENSE"
              ]
            }
          },
          {
            "name": "activationStatus",
            "in": "query",
            "required": true,
            "schema": { "type": "boolean" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/UtmModule" } }
            }
          }
        }
      }
    },
    "/api/utm-menu-authorities": {
      "get": {
        "tags": ["utm-menu-authority-resource"],
        "operationId": "getAllUtmMenuAuthorities",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UtmMenuAuthority" }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["utm-menu-authority-resource"],
        "operationId": "updateUtmMenuAuthority",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmMenuAuthority" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmMenuAuthority" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["utm-menu-authority-resource"],
        "operationId": "createUtmMenuAuthority",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmMenuAuthority" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmMenuAuthority" }
              }
            }
          }
        }
      }
    },
    "/api/utm-logstash-filter-groups": {
      "get": {
        "tags": ["utm-logstash-filter-group-resource"],
        "operationId": "getAllUtmLogstashFilterGroups",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UtmLogstashFilterGroupCriteria"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UtmLogstashFilterGroup"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["utm-logstash-filter-group-resource"],
        "operationId": "updateUtmLogstashFilterGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UtmLogstashFilterGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UtmLogstashFilterGroup"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["utm-logstash-filter-group-resource"],
        "operationId": "createUtmLogstashFilterGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UtmLogstashFilterGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UtmLogstashFilterGroup"
                }
              }
            }
          }
        }
      }
    },
    "/api/utm-integrations": {
      "get": {
        "tags": ["utm-integration-resource"],
        "operationId": "getAllUtmIntegrations",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UtmIntegrationCriteria" }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UtmIntegration" }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["utm-integration-resource"],
        "operationId": "updateUtmIntegration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmIntegration" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmIntegration" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["utm-integration-resource"],
        "operationId": "createUtmIntegration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmIntegration" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmIntegration" }
              }
            }
          }
        }
      }
    },
    "/api/utm-integration-confs": {
      "get": {
        "tags": ["utm-integration-conf-resource"],
        "operationId": "getAllUtmIntegrationConfs",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UtmIntegrationConfCriteria"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UtmIntegrationConf" }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["utm-integration-conf-resource"],
        "operationId": "updateUtmIntegrationConf",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmIntegrationConf" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmIntegrationConf" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["utm-integration-conf-resource"],
        "operationId": "createUtmIntegrationConf",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmIntegrationConf" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmIntegrationConf" }
              }
            }
          }
        }
      }
    },
    "/api/utm-index-patterns": {
      "get": {
        "tags": ["utm-index-pattern-resource"],
        "operationId": "getAllUtmIndexPatterns",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UtmIndexPatternCriteria" }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UtmIndexPattern" }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["utm-index-pattern-resource"],
        "operationId": "updateUtmIndexPattern",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmIndexPattern" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmIndexPattern" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["utm-index-pattern-resource"],
        "operationId": "createUtmIndexPattern",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmIndexPattern" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmIndexPattern" }
              }
            }
          }
        }
      }
    },
    "/api/utm-incidents/change-status": {
      "put": {
        "tags": ["utm-incident-resource"],
        "operationId": "updateUtmIncident",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmIncident" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmIncident" }
              }
            }
          }
        }
      }
    },
    "/api/utm-incident-variables": {
      "get": {
        "tags": ["utm-incident-variable-resource"],
        "operationId": "getAllUtmIncidentVariables",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UtmIncidentVariableCriteria"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UtmIncidentVariable"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["utm-incident-variable-resource"],
        "operationId": "updateUtmIncidentVariable",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmIncidentVariable" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmIncidentVariable" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["utm-incident-variable-resource"],
        "operationId": "createUtmIncidentVariable",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmIncidentVariable" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmIncidentVariable" }
              }
            }
          }
        }
      }
    },
    "/api/utm-incident-alerts": {
      "get": {
        "tags": ["utm-incident-alert-resource"],
        "operationId": "getAllUtmIncidentAlerts",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UtmIncidentAlertCriteria"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UtmIncidentAlert" }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["utm-incident-alert-resource"],
        "operationId": "updateUtmIncidentAlert",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmIncidentAlert" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmIncidentAlert" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["utm-incident-alert-resource"],
        "operationId": "createUtmIncidentAlert",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmIncidentAlert" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmIncidentAlert" }
              }
            }
          }
        }
      }
    },
    "/api/utm-incident-actions": {
      "get": {
        "tags": ["utm-incident-action-resource"],
        "operationId": "getAllUtmIncidentActions",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UtmIncidentActionCriteria"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UtmIncidentAction" }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["utm-incident-action-resource"],
        "operationId": "updateUtmIncidentAction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmIncidentAction" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmIncidentAction" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["utm-incident-action-resource"],
        "operationId": "createUtmIncidentAction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmIncidentAction" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmIncidentAction" }
              }
            }
          }
        }
      }
    },
    "/api/utm-datasource-configs": {
      "get": {
        "tags": ["utm-data-source-config-resource"],
        "operationId": "getAllDataSourceConfigs",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": { "minimum": 0, "type": "integer", "default": 0 }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": { "minimum": 1, "type": "integer", "default": 20 }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UtmDataSourceConfigDTO"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["utm-data-source-config-resource"],
        "operationId": "update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UtmDataSourceConfigDTO"
                }
              }
            }
          },
          "required": true
        },
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/utm-data-input-statuses": {
      "get": {
        "tags": ["utm-data-input-status-resource"],
        "operationId": "getAllUtmDataInputStatuses",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UtmDataInputStatus" }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["utm-data-input-status-resource"],
        "operationId": "updateUtmDataInputStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmDataInputStatus" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmDataInputStatus" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["utm-data-input-status-resource"],
        "operationId": "createUtmDataInputStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmDataInputStatus" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmDataInputStatus" }
              }
            }
          }
        }
      }
    },
    "/api/utm-dashboards": {
      "get": {
        "tags": ["utm-dashboard-resource"],
        "operationId": "getAllUtmDashboards",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UtmDashboardCriteria" }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UtmDashboard" }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["utm-dashboard-resource"],
        "operationId": "updateUtmDashboard",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmDashboard" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmDashboard" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["utm-dashboard-resource"],
        "operationId": "createUtmDashboard",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmDashboard" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmDashboard" }
              }
            }
          }
        }
      }
    },
    "/api/utm-dashboard-visualizations": {
      "get": {
        "tags": ["utm-dashboard-visualization-resource"],
        "operationId": "getAllUtmDashboardVisualizations",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UtmDashboardVisualizationCriteria"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UtmDashboardVisualization"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["utm-dashboard-visualization-resource"],
        "operationId": "updateUtmDashboardVisualization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UtmDashboardVisualization"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UtmDashboardVisualization"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["utm-dashboard-visualization-resource"],
        "operationId": "createUtmDashboardVisualization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UtmDashboardVisualization"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UtmDashboardVisualization"
                }
              }
            }
          }
        }
      }
    },
    "/api/utm-dashboard-authorities": {
      "get": {
        "tags": ["utm-dashboard-authority-resource"],
        "operationId": "getAllUtmDashboardAuthorities",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UtmDashboardAuthority"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["utm-dashboard-authority-resource"],
        "operationId": "updateUtmDashboardAuthority",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmDashboardAuthority" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UtmDashboardAuthority"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["utm-dashboard-authority-resource"],
        "operationId": "createUtmDashboardAuthority",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmDashboardAuthority" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UtmDashboardAuthority"
                }
              }
            }
          }
        }
      }
    },
    "/api/utm-configuration-parameters": {
      "get": {
        "tags": ["utm-configuration-parameter-resource"],
        "operationId": "getAllUtmConfigurationParameters",
        "parameters": [
          {
            "name": "id.greaterThan",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "id.lessThan",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "id.greaterThanOrEqual",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "id.lessThanOrEqual",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "id.equals",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "id.notEquals",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "id.specified",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "name": "id.in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "integer", "format": "int64" }
            }
          },
          {
            "name": "id.notIn",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "integer", "format": "int64" }
            }
          },
          {
            "name": "sectionId.greaterThan",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "sectionId.lessThan",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "sectionId.greaterThanOrEqual",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "sectionId.lessThanOrEqual",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "sectionId.equals",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "sectionId.notEquals",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "sectionId.specified",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "name": "sectionId.in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "integer", "format": "int64" }
            }
          },
          {
            "name": "sectionId.notIn",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "integer", "format": "int64" }
            }
          },
          {
            "name": "confParamShort.contains",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "confParamShort.doesNotContain",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "confParamShort.equals",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "confParamShort.notEquals",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "confParamShort.specified",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "name": "confParamShort.in",
            "in": "query",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "confParamShort.notIn",
            "in": "query",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "confParamLarge.contains",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "confParamLarge.doesNotContain",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "confParamLarge.equals",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "confParamLarge.notEquals",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "confParamLarge.specified",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "name": "confParamLarge.in",
            "in": "query",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "confParamLarge.notIn",
            "in": "query",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "confParamDescription.contains",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "confParamDescription.doesNotContain",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "confParamDescription.equals",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "confParamDescription.notEquals",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "confParamDescription.specified",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "name": "confParamDescription.in",
            "in": "query",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "confParamDescription.notIn",
            "in": "query",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "confParamValue.contains",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "confParamValue.doesNotContain",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "confParamValue.equals",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "confParamValue.notEquals",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "confParamValue.specified",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "name": "confParamValue.in",
            "in": "query",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "confParamValue.notIn",
            "in": "query",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "confParamDatatype.contains",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "confParamDatatype.doesNotContain",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "confParamDatatype.equals",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "confParamDatatype.notEquals",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "confParamDatatype.specified",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "name": "confParamDatatype.in",
            "in": "query",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "confParamDatatype.notIn",
            "in": "query",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "confParamRequired.equals",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "name": "confParamRequired.notEquals",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "name": "confParamRequired.specified",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "name": "confParamRequired.in",
            "in": "query",
            "required": false,
            "schema": { "type": "array", "items": { "type": "boolean" } }
          },
          {
            "name": "confParamRequired.notIn",
            "in": "query",
            "required": false,
            "schema": { "type": "array", "items": { "type": "boolean" } }
          },
          {
            "name": "modificationTime.greaterThan",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "format": "date-time" }
          },
          {
            "name": "modificationTime.lessThan",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "format": "date-time" }
          },
          {
            "name": "modificationTime.greaterThanOrEqual",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "format": "date-time" }
          },
          {
            "name": "modificationTime.lessThanOrEqual",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "format": "date-time" }
          },
          {
            "name": "modificationTime.equals",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "format": "date-time" }
          },
          {
            "name": "modificationTime.notEquals",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "format": "date-time" }
          },
          {
            "name": "modificationTime.specified",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "name": "modificationTime.in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "string", "format": "date-time" }
            }
          },
          {
            "name": "modificationTime.notIn",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "string", "format": "date-time" }
            }
          },
          {
            "name": "modificationUser.contains",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "modificationUser.doesNotContain",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "modificationUser.equals",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "modificationUser.notEquals",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "modificationUser.specified",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "name": "modificationUser.in",
            "in": "query",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "modificationUser.notIn",
            "in": "query",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": { "minimum": 0, "type": "integer", "default": 0 }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": { "minimum": 1, "type": "integer", "default": 20 }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UtmConfigurationParameter"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["utm-configuration-parameter-resource"],
        "operationId": "updateConfigurationParameters",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UtmConfigurationParameter"
                }
              }
            }
          },
          "required": true
        },
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/utm-configuration-groups": {
      "put": {
        "tags": ["utm-module-group-resource"],
        "operationId": "updateUtmConfigurationGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmModuleGroup" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmModuleGroup" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["utm-module-group-resource"],
        "operationId": "createConfigurationGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ModuleGroupVM" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmModuleGroup" }
              }
            }
          }
        }
      }
    },
    "/api/utm-asset-metrics": {
      "get": {
        "tags": ["utm-asset-metrics-resource"],
        "operationId": "getAllUtmAssetMetrics",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UtmAssetMetrics" }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["utm-asset-metrics-resource"],
        "operationId": "updateUtmAssetMetrics",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmAssetMetrics" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmAssetMetrics" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["utm-asset-metrics-resource"],
        "operationId": "createUtmAssetMetrics",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmAssetMetrics" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmAssetMetrics" }
              }
            }
          }
        }
      }
    },
    "/api/utm-asset-groups": {
      "put": {
        "tags": ["utm-asset-group-resource"],
        "operationId": "updateUtmAssetGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmAssetGroup" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmAssetGroup" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["utm-asset-group-resource"],
        "operationId": "createUtmAssetGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmAssetGroup" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmAssetGroup" }
              }
            }
          }
        }
      }
    },
    "/api/utm-alert-tags": {
      "get": {
        "tags": ["utm-alert-tag-resource"],
        "operationId": "getAllUtmAlertCategories",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UtmAlertTagCriteria" }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UtmAlertTag" }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["utm-alert-tag-resource"],
        "operationId": "updateUtmAlertTag",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmAlertTag" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmAlertTag" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["utm-alert-tag-resource"],
        "operationId": "createUtmAlertTag",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmAlertTag" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmAlertTag" }
              }
            }
          }
        }
      }
    },
    "/api/utm-alert-response-rules": {
      "get": {
        "tags": ["utm-alert-response-rule-resource"],
        "operationId": "getAllAlertResponseRules",
        "parameters": [
          {
            "name": "id.greaterThan",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "id.lessThan",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "id.greaterThanOrEqual",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "id.lessThanOrEqual",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "id.equals",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "id.notEquals",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "id.specified",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "name": "id.in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "integer", "format": "int64" }
            }
          },
          {
            "name": "id.notIn",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "integer", "format": "int64" }
            }
          },
          {
            "name": "name.contains",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "name.doesNotContain",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "name.equals",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "name.notEquals",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "name.specified",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "name": "name.in",
            "in": "query",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "name.notIn",
            "in": "query",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "active.equals",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "name": "active.notEquals",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "name": "active.specified",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "name": "active.in",
            "in": "query",
            "required": false,
            "schema": { "type": "array", "items": { "type": "boolean" } }
          },
          {
            "name": "active.notIn",
            "in": "query",
            "required": false,
            "schema": { "type": "array", "items": { "type": "boolean" } }
          },
          {
            "name": "agentPlatform.contains",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "agentPlatform.doesNotContain",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "agentPlatform.equals",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "agentPlatform.notEquals",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "agentPlatform.specified",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "name": "agentPlatform.in",
            "in": "query",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "agentPlatform.notIn",
            "in": "query",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "createdBy.contains",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "createdBy.doesNotContain",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "createdBy.equals",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "createdBy.notEquals",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "createdBy.specified",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "name": "createdBy.in",
            "in": "query",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "createdBy.notIn",
            "in": "query",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "lastModifiedBy.contains",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "lastModifiedBy.doesNotContain",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "lastModifiedBy.equals",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "lastModifiedBy.notEquals",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "lastModifiedBy.specified",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "name": "lastModifiedBy.in",
            "in": "query",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "lastModifiedBy.notIn",
            "in": "query",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "createdDate.greaterThan",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "format": "date-time" }
          },
          {
            "name": "createdDate.lessThan",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "format": "date-time" }
          },
          {
            "name": "createdDate.greaterThanOrEqual",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "format": "date-time" }
          },
          {
            "name": "createdDate.lessThanOrEqual",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "format": "date-time" }
          },
          {
            "name": "createdDate.equals",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "format": "date-time" }
          },
          {
            "name": "createdDate.notEquals",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "format": "date-time" }
          },
          {
            "name": "createdDate.specified",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "name": "createdDate.in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "string", "format": "date-time" }
            }
          },
          {
            "name": "createdDate.notIn",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "string", "format": "date-time" }
            }
          },
          {
            "name": "lastModifiedDate.greaterThan",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "format": "date-time" }
          },
          {
            "name": "lastModifiedDate.lessThan",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "format": "date-time" }
          },
          {
            "name": "lastModifiedDate.greaterThanOrEqual",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "format": "date-time" }
          },
          {
            "name": "lastModifiedDate.lessThanOrEqual",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "format": "date-time" }
          },
          {
            "name": "lastModifiedDate.equals",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "format": "date-time" }
          },
          {
            "name": "lastModifiedDate.notEquals",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "format": "date-time" }
          },
          {
            "name": "lastModifiedDate.specified",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "name": "lastModifiedDate.in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "string", "format": "date-time" }
            }
          },
          {
            "name": "lastModifiedDate.notIn",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "string", "format": "date-time" }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": { "minimum": 0, "type": "integer", "default": 0 }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": { "minimum": 1, "type": "integer", "default": 20 }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UtmAlertResponseRuleDTO"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["utm-alert-response-rule-resource"],
        "operationId": "updateAlertResponseRule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UtmAlertResponseRuleDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UtmAlertResponseRuleDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["utm-alert-response-rule-resource"],
        "operationId": "createAlertResponseRule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UtmAlertResponseRuleDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UtmAlertResponseRuleDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/utm-alert-logs": {
      "get": {
        "tags": ["utm-alert-log-resource"],
        "operationId": "getAllUtmAlertLogs",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UtmAlertLogCriteria" }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UtmAlertLog" }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["utm-alert-log-resource"],
        "operationId": "updateUtmAlertLog",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmAlertLog" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmAlertLog" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["utm-alert-log-resource"],
        "operationId": "createUtmAlertLog",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmAlertLog" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmAlertLog" }
              }
            }
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "tags": ["user-resource"],
        "operationId": "getAllUsers",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          },
          {
            "name": "login",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UserDTO" }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["user-resource"],
        "operationId": "updateUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserDTO" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/UserDTO" } }
            }
          }
        }
      },
      "post": {
        "tags": ["user-resource"],
        "operationId": "createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserDTO" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/User" } }
            }
          }
        }
      }
    },
    "/api/updateGroup": {
      "put": {
        "tags": ["utm-collector-resource"],
        "operationId": "updateGroup_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGroupRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/module-group-configurations/update": {
      "put": {
        "tags": ["utm-module-group-configuration-resource"],
        "operationId": "updateConfiguration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateConfigurationKeysBody"
              }
            }
          },
          "required": true
        },
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/menu": {
      "get": {
        "tags": ["utm-menu-resource"],
        "operationId": "getAllUtmMenu",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UtmMenuCriteria" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UtmMenu" }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["utm-menu-resource"],
        "operationId": "updateUtmMenu",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmMenu" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": { "*/*": { "schema": { "type": "object" } } }
          }
        }
      },
      "post": {
        "tags": ["utm-menu-resource"],
        "operationId": "createUtmMenu",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmMenu" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": { "*/*": { "schema": { "type": "object" } } }
          }
        }
      }
    },
    "/api/logstash-pipelines": {
      "get": {
        "tags": ["utm-logstash-pipeline-resource"],
        "operationId": "getAllActivePipelines",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": { "minimum": 0, "type": "integer", "default": 0 }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": { "minimum": 1, "type": "integer", "default": 20 }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UtmLogstashPipelineDTO"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["utm-logstash-pipeline-resource"],
        "operationId": "update_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmLogstashPipelineVM" }
            }
          },
          "required": true
        },
        "responses": { "200": { "description": "OK" } }
      },
      "post": {
        "tags": ["utm-logstash-pipeline-resource"],
        "operationId": "createUtmLogstashPipeline",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmLogstashPipelineVM" }
            }
          },
          "required": true
        },
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/logstash-inputs": {
      "put": {
        "tags": ["utm-logstash-input-resource"],
        "operationId": "update_2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmLogstashInput" }
            }
          },
          "required": true
        },
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/logstash-filters": {
      "get": {
        "tags": ["utm-logstash-filter-resource"],
        "operationId": "getAllLogstashFilters",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UtmLogstashFilterCriteria"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UtmLogstashFilter" }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["utm-logstash-filter-resource"],
        "operationId": "updateLogstashFilter",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmLogstashFilter" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmLogstashFilter" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["utm-logstash-filter-resource"],
        "operationId": "createLogstashFilter",
        "parameters": [
          {
            "name": "pipelineId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmLogstashFilter" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmLogstashFilter" }
              }
            }
          }
        }
      }
    },
    "/api/log-analyzer/queries": {
      "get": {
        "tags": ["log-analyzer-resource"],
        "operationId": "getAllLogAnalyzerQueries",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/LogAnalyzerQueryCriteria"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/LogAnalyzerQuery" }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["log-analyzer-resource"],
        "operationId": "updateLogAnalyzerQuery",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LogAnalyzerQuery" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/LogAnalyzerQuery" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["log-analyzer-resource"],
        "operationId": "createLogAnalyzerQuery",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LogAnalyzerQuery" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/LogAnalyzerQuery" }
              }
            }
          }
        }
      }
    },
    "/api/index-policy/policy": {
      "get": {
        "tags": ["index-policy-resource"],
        "operationId": "getPolicy",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/PolicySettings" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["index-policy-resource"],
        "operationId": "updateIndexPolicy",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PolicySettings" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateManagedIndexPolicyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/incident-action-commands": {
      "get": {
        "tags": ["utm-incident-action-command-resource"],
        "operationId": "getAllIncidentActionCommands",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UtmIncidentActionCommandCriteria"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UtmIncidentActionCommand"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["utm-incident-action-command-resource"],
        "operationId": "updateIncidentActionCommand",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UtmIncidentActionCommand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UtmIncidentActionCommand"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["utm-incident-action-command-resource"],
        "operationId": "createIncidentActionCommand",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UtmIncidentActionCommand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UtmIncidentActionCommand"
                }
              }
            }
          }
        }
      }
    },
    "/api/images": {
      "put": {
        "tags": ["utm-images-resource"],
        "operationId": "updateImage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmImages" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/UtmImages" } }
            }
          }
        }
      }
    },
    "/api/compliance/standard": {
      "get": {
        "tags": ["utm-compliance-standard-resource"],
        "operationId": "getAllComplianceStandard",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UtmComplianceStandardCriteria"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UtmComplianceStandard"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["utm-compliance-standard-resource"],
        "operationId": "updateComplianceStandard",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmComplianceStandard" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UtmComplianceStandard"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["utm-compliance-standard-resource"],
        "operationId": "createComplianceStandard",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmComplianceStandard" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UtmComplianceStandard"
                }
              }
            }
          }
        }
      }
    },
    "/api/compliance/standard-section": {
      "get": {
        "tags": ["utm-compliance-standard-section-resource"],
        "operationId": "getAllComplianceStandardSection",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UtmComplianceStandardSectionCriteria"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UtmComplianceStandardSection"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["utm-compliance-standard-section-resource"],
        "operationId": "updateComplianceStandardSection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UtmComplianceStandardSection"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UtmComplianceStandardSection"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["utm-compliance-standard-section-resource"],
        "operationId": "createComplianceStandardSection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UtmComplianceStandardSection"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UtmComplianceStandardSection"
                }
              }
            }
          }
        }
      }
    },
    "/api/compliance/report-config": {
      "get": {
        "tags": ["utm-compliance-report-config-resource"],
        "operationId": "getAllComplianceReportConfig",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UtmComplianceReportConfigCriteria"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UtmComplianceReportConfig"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["utm-compliance-report-config-resource"],
        "operationId": "updateComplianceReportConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UtmComplianceReportConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UtmComplianceReportConfig"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["utm-compliance-report-config-resource"],
        "operationId": "createComplianceReportConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UtmComplianceReportConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UtmComplianceReportConfig"
                }
              }
            }
          }
        }
      }
    },
    "/api/compliance-report-schedules": {
      "put": {
        "tags": ["utm-compliance-report-schedule-resource"],
        "operationId": "updateUtmComplianceReportSchedule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UtmComplianceReportSchedule"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UtmComplianceReportSchedule"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["utm-compliance-report-schedule-resource"],
        "operationId": "createUtmComplianceReportSchedule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UtmComplianceReportSchedule"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UtmComplianceReportSchedule"
                }
              }
            }
          }
        }
      }
    },
    "/api/authority": {
      "get": {
        "tags": ["authority-resource"],
        "operationId": "getAllAuthority",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Authority" }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["authority-resource"],
        "operationId": "updateAuthority",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Authority" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Authority" } }
            }
          }
        }
      },
      "post": {
        "tags": ["authority-resource"],
        "operationId": "createAuthority",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Authority" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Authority" } }
            }
          }
        }
      }
    },
    "/api/alert-tag-rules": {
      "get": {
        "tags": ["utm-alert-tag-rule-resource"],
        "operationId": "getAlertTagRulesByFilter",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/AlertTagRuleFilterVM" }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/AlertTagRuleVM" }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["utm-alert-tag-rule-resource"],
        "operationId": "updateAlertTagRule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AlertTagRuleVM" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/AlertTagRuleVM" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["utm-alert-tag-rule-resource"],
        "operationId": "createAlertTagRule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AlertTagRuleVM" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/AlertTagRuleVM" }
              }
            }
          }
        }
      }
    },
    "/api/agent-manager-group": {
      "put": {
        "tags": ["agent-manager-group-resource"],
        "operationId": "updateAgentGroupDTO",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AgentGroupVM" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/AgentGroupDTO" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["agent-manager-group-resource"],
        "operationId": "createAgentGroupDTO",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AgentGroupVM" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/AgentGroupDTO" }
              }
            }
          }
        }
      }
    },
    "/api/utm-visualizations/run": {
      "post": {
        "tags": ["utm-visualization-resource"],
        "operationId": "run",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "top",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32", "default": 200 }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmVisualization" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "type": "array", "items": { "type": "object" } }
              }
            }
          }
        }
      }
    },
    "/api/utm-visualizations/batch": {
      "post": {
        "tags": ["utm-visualization-resource"],
        "operationId": "createBatchUtmVisualization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBatchVisualizationBody"
              }
            }
          },
          "required": true
        },
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/utm-network-scans/saveOrUpdateCustomAsset": {
      "post": {
        "tags": ["utm-network-scan-resource"],
        "operationId": "saveOrUpdateCustomAsset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/NetworkScanDTO" }
            }
          },
          "required": true
        },
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/utm-incidents": {
      "get": {
        "tags": ["utm-incident-resource"],
        "operationId": "getAllUtmIncidents",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UtmIncidentCriteria" }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UtmIncident" }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["utm-incident-resource"],
        "operationId": "createUtmIncident",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/NewIncidentDTO" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmIncident" }
              }
            }
          }
        }
      }
    },
    "/api/utm-incidents/add-alerts": {
      "post": {
        "tags": ["utm-incident-resource"],
        "operationId": "addAlertsToUtmIncident",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AddToIncidentDTO" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmIncident" }
              }
            }
          }
        }
      }
    },
    "/api/utm-incident-notes": {
      "get": {
        "tags": ["utm-incident-note-resource"],
        "operationId": "getAllUtmIncidentNotes",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UtmIncidentNoteCriteria" }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UtmIncidentNote" }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["utm-incident-note-resource"],
        "operationId": "createUtmIncidentNote",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/NewIncidentNoteDTO" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmIncidentNote" }
              }
            }
          }
        }
      }
    },
    "/api/utm-incident-jobs": {
      "get": {
        "tags": ["utm-incident-job-resource"],
        "operationId": "getAllUtmIncidentJobs",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UtmIncidentJobCriteria" }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UtmIncidentJob" }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["utm-incident-job-resource"],
        "operationId": "createIncidentJob",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UtmIncidentJob" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmIncidentJob" }
              }
            }
          }
        }
      }
    },
    "/api/utm-incident-alerts/update-status": {
      "post": {
        "tags": ["utm-incident-alert-resource"],
        "operationId": "updateIncidentAlertStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlertIncidentStatusChangeDTO"
              }
            }
          },
          "required": true
        },
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/utm-getting-started/init": {
      "post": {
        "tags": ["utm-getting-started-resource"],
        "operationId": "initSteps",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/GettingStartedInit" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": { "*/*": { "schema": { "type": "string" } } }
          }
        }
      }
    },
    "/api/utm-dashboards/import": {
      "post": {
        "tags": ["utm-dashboard-resource"],
        "operationId": "importDashboards",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ImportDashboardsBody" }
            }
          },
          "required": true
        },
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/utm-alerts/tags": {
      "post": {
        "tags": ["utm-alert-resource"],
        "operationId": "updateAlertTags",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAlertTagsRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/utm-alerts/status": {
      "post": {
        "tags": ["utm-alert-resource"],
        "operationId": "updateAlertStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAlertStatusRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/utm-alerts/notes": {
      "post": {
        "tags": ["utm-alert-resource"],
        "operationId": "updateAlertNotes",
        "parameters": [
          {
            "name": "alertId",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "type": "string" } } }
        },
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/utm-alerts/convert-to-incident": {
      "post": {
        "tags": ["utm-alert-resource"],
        "operationId": "convertToIncident",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConvertToIncidentRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/soc-ai/alerts": {
      "post": {
        "tags": ["utm-soc-ai-resource"],
        "operationId": "sendData",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "type": "array", "items": { "type": "string" } }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": { "*/*": { "schema": { "type": "object" } } }
          }
        }
      }
    },
    "/api/menu/save-menu-structure": {
      "post": {
        "tags": ["utm-menu-resource"],
        "operationId": "saveMenuStructure",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/MenuType" }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": { "*/*": { "schema": { "type": "boolean" } } }
          }
        }
      }
    },
    "/api/logstash-pipelines/validate": {
      "post": {
        "tags": ["utm-logstash-pipeline-resource"],
        "operationId": "validatePipelines",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pipeline": {
                    "$ref": "#/components/schemas/UtmLogstashPipelineVM"
                  },
                  "mode": { "type": "string" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/PipelineErrors" }
              }
            }
          }
        }
      }
    },
    "/api/log-analyzer/top-x-values/{indexPattern}/{field}/{top}": {
      "post": {
        "tags": ["log-analyzer-resource"],
        "operationId": "getTopXValues",
        "parameters": [
          {
            "name": "indexPattern",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "field",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "top",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/FilterType" }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/TopValuesResult" }
              }
            }
          }
        }
      }
    },
    "/api/log-analyzer/chart-view": {
      "post": {
        "tags": ["log-analyzer-resource"],
        "operationId": "getChartViewData",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ChartViewRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/ChartView" } }
            }
          }
        }
      }
    },
    "/api/encrypt": {
      "post": {
        "tags": ["utm-stack-resource"],
        "operationId": "encrypt",
        "requestBody": {
          "content": { "application/json": { "schema": { "type": "string" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": { "*/*": { "schema": { "type": "string" } } }
          }
        }
      }
    },
    "/api/elasticsearch/search": {
      "post": {
        "tags": ["elasticsearch-resource"],
        "operationId": "search",
        "parameters": [
          {
            "name": "top",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "indexPattern",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/FilterType" }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": { "type": "object" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/elasticsearch/search/csv": {
      "post": {
        "tags": ["elasticsearch-resource"],
        "operationId": "searchToCsv",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CsvExportingParams" }
            }
          },
          "required": true
        },
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/elasticsearch/property/values-with-count": {
      "post": {
        "tags": ["elasticsearch-resource"],
        "operationId": "getFieldValuesWithCount",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PropertyValuesWithCountRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/elasticsearch/index/delete-index": {
      "post": {
        "tags": ["elasticsearch-resource"],
        "operationId": "deleteIndex",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "type": "array", "items": { "type": "string" } }
            }
          },
          "required": true
        },
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/elasticsearch/generic-search": {
      "post": {
        "tags": ["elasticsearch-resource"],
        "operationId": "genericSearch",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/GenericSearchBody" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": { "type": "object" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/compliance/report-config/import": {
      "post": {
        "tags": ["utm-compliance-report-config-resource"],
        "operationId": "importReports",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ImportReportsBody" }
            }
          },
          "required": true
        },
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/collector-config": {
      "post": {
        "tags": ["utm-collector-resource"],
        "operationId": "upsertCollectorConfig",
        "parameters": [
          {
            "name": "collectorDTO",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/CollectorDTO" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateConfigurationKeysBody"
              }
            }
          },
          "required": true
        },
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/checkEmailConfiguration": {
      "post": {
        "tags": ["utm-configuration-parameter-resource"],
        "operationId": "checkEmailConfiguration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UtmConfigurationParameter"
                }
              }
            }
          },
          "required": true
        },
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/authenticate": {
      "get": {
        "tags": ["account-resource"],
        "operationId": "isAuthenticated",
        "responses": {
          "200": {
            "description": "OK",
            "content": { "*/*": { "schema": { "type": "string" } } }
          }
        }
      },
      "post": {
        "tags": ["user-jwt-controller"],
        "operationId": "authorize",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoginVM" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/JWTToken" } }
            }
          }
        }
      }
    },
    "/api/authenticateFederationServiceManager": {
      "post": {
        "tags": ["user-jwt-controller"],
        "operationId": "authorizeFederationServiceManager",
        "requestBody": {
          "content": { "application/json": { "schema": { "type": "string" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/JWTToken" } }
            }
          }
        }
      }
    },
    "/api/account": {
      "get": {
        "tags": ["account-resource"],
        "operationId": "getAccount",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/UserDTO" } }
            }
          }
        }
      },
      "post": {
        "tags": ["account-resource"],
        "operationId": "saveAccount",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserDTO" }
            }
          },
          "required": true
        },
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/account/reset-password/init": {
      "post": {
        "tags": ["account-resource"],
        "operationId": "requestPasswordReset",
        "requestBody": {
          "content": { "application/json": { "schema": { "type": "string" } } },
          "required": true
        },
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/account/reset-password/finish": {
      "post": {
        "tags": ["account-resource"],
        "operationId": "finishPasswordReset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/KeyAndPasswordVM" }
            }
          },
          "required": true
        },
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/account/change-password": {
      "post": {
        "tags": ["account-resource"],
        "operationId": "changePassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PasswordChangeDTO" }
            }
          },
          "required": true
        },
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/management/audits": {
      "get": {
        "tags": ["audit-resource"],
        "operationId": "getAll_1",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "format": "date" }
          },
          {
            "name": "toDate",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "format": "date" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/AuditEvent" }
                }
              }
            }
          }
        }
      }
    },
    "/management/audits/{id}": {
      "get": {
        "tags": ["audit-resource"],
        "operationId": "get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/AuditEvent" } }
            }
          }
        }
      }
    },
    "/api/winlogbeat-info-by-filter": {
      "get": {
        "tags": ["utm-auditor-users-resource"],
        "operationId": "getUtmAuditorUsers",
        "parameters": [
          {
            "name": "sid",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "from",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "to",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "indexPattern",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "sort",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "size",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": { "type": "object" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/utm-visualizations/{id}": {
      "get": {
        "tags": ["utm-visualization-resource"],
        "operationId": "getUtmVisualization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmVisualization" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["utm-visualization-resource"],
        "operationId": "deleteUtmVisualization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/utm-servers/{id}": {
      "get": {
        "tags": ["utm-server-resource"],
        "operationId": "getUtmServer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/UtmServer" } }
            }
          }
        }
      },
      "delete": {
        "tags": ["utm-server-resource"],
        "operationId": "deleteUtmServer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/utm-servers/count": {
      "get": {
        "tags": ["utm-server-resource"],
        "operationId": "countUtmServers",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UtmServerCriteria" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "integer", "format": "int64" } }
            }
          }
        }
      }
    },
    "/api/utm-server-modules/{id}": {
      "get": {
        "tags": ["utm-server-module-resource"],
        "operationId": "getUtmServerModule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmServerModule" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["utm-server-module-resource"],
        "operationId": "deleteUtmServerModule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/utm-server-modules/modules-with-integrations": {
      "get": {
        "tags": ["utm-server-module-resource"],
        "operationId": "getModulesWithIntegrations",
        "parameters": [
          {
            "name": "serverId",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "prettyName",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UtmServerModule" }
                }
              }
            }
          }
        }
      }
    },
    "/api/utm-server-modules/count": {
      "get": {
        "tags": ["utm-server-module-resource"],
        "operationId": "countUtmServerModules",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UtmServerModuleCriteria" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "integer", "format": "int64" } }
            }
          }
        }
      }
    },
    "/api/utm-schedules/{id}": {
      "get": {
        "tags": ["utm-schedule-resource"],
        "operationId": "getUtmSchedule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmSchedule" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["utm-schedule-resource"],
        "operationId": "deleteUtmSchedule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/utm-reports/{id}": {
      "get": {
        "tags": ["utm-report-resource"],
        "operationId": "getUtmReports",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/UtmReport" } }
            }
          }
        }
      },
      "delete": {
        "tags": ["utm-report-resource"],
        "operationId": "deleteUtmReports",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/utm-reports/count": {
      "get": {
        "tags": ["utm-report-resource"],
        "operationId": "countUtmReports",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UtmReportCriteria" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "integer", "format": "int64" } }
            }
          }
        }
      }
    },
    "/api/utm-report-sections/{id}": {
      "get": {
        "tags": ["utm-report-section-resource"],
        "operationId": "getUtmReportSection",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmReportSection" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["utm-report-section-resource"],
        "operationId": "deleteUtmReportSection",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/utm-report-sections/count": {
      "get": {
        "tags": ["utm-report-section-resource"],
        "operationId": "countUtmReportSections",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UtmReportSectionCriteria"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "integer", "format": "int64" } }
            }
          }
        }
      }
    },
    "/api/utm-open-ports/{id}": {
      "get": {
        "tags": ["utm-ports-resource"],
        "operationId": "getUtmOpenPort",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/UtmPorts" } }
            }
          }
        }
      },
      "delete": {
        "tags": ["utm-ports-resource"],
        "operationId": "deleteUtmOpenPort",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/utm-open-ports/count": {
      "get": {
        "tags": ["utm-ports-resource"],
        "operationId": "countUtmOpenPorts",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UtmPortsCriteria" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "integer", "format": "int64" } }
            }
          }
        }
      }
    },
    "/api/utm-network-scans/{id}": {
      "get": {
        "tags": ["utm-network-scan-resource"],
        "operationId": "getUtmNetworkScan",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/NetworkScanDTO" }
              }
            }
          }
        }
      }
    },
    "/api/utm-network-scans/searchPropertyValues": {
      "get": {
        "tags": ["utm-network-scan-resource"],
        "operationId": "searchPropertyValues",
        "parameters": [
          {
            "name": "prop",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "IP",
                "MAC",
                "ALIAS",
                "NAME",
                "OS",
                "ALIVE",
                "STATUS",
                "PROBE",
                "TYPE",
                "SEVERITY",
                "PORTS",
                "GROUP",
                "COLLECTOR_IP",
                "COLLECTOR_GROUP"
              ]
            }
          },
          {
            "name": "value",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "forGroups",
            "in": "query",
            "required": true,
            "schema": { "type": "boolean" }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "type": "array", "items": { "type": "object" } }
              }
            }
          }
        }
      }
    },
    "/api/utm-network-scans/search-by-filters": {
      "get": {
        "tags": ["utm-network-scan-resource"],
        "operationId": "searchByFilters",
        "parameters": [
          {
            "name": "assetIpMacName",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "os",
            "in": "query",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "alive",
            "in": "query",
            "required": false,
            "schema": { "type": "array", "items": { "type": "boolean" } }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "string", "enum": ["NEW", "CHECK", "MISSING"] }
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "alias",
            "in": "query",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "probe",
            "in": "query",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "openPorts",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "integer", "format": "int32" }
            }
          },
          {
            "name": "groups",
            "in": "query",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "discoveredInitDate",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "format": "date-time" }
          },
          {
            "name": "discoveredEndDate",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "format": "date-time" }
          },
          {
            "name": "registeredMode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["CUSTOM", "DISCOVERED", "DYNAMIC"]
            }
          },
          {
            "name": "agent",
            "in": "query",
            "required": false,
            "schema": { "type": "array", "items": { "type": "boolean" } }
          },
          {
            "name": "osPlatform",
            "in": "query",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": { "minimum": 0, "type": "integer", "default": 0 }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": { "minimum": 1, "type": "integer", "default": 20 }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/NetworkScanDTO" }
                }
              }
            }
          }
        }
      }
    },
    "/api/utm-network-scans/getNetworkScanReport": {
      "get": {
        "tags": ["utm-network-scan-resource"],
        "operationId": "getNetworkScanReport",
        "parameters": [
          {
            "name": "f",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/NetworkScanFilter" }
          },
          {
            "name": "p",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "string", "format": "binary" } }
            }
          }
        }
      }
    },
    "/api/utm-network-scans/count": {
      "get": {
        "tags": ["utm-network-scan-resource"],
        "operationId": "countUtmNetworkScans",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UtmNetworkScanCriteria" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "integer", "format": "int64" } }
            }
          }
        }
      }
    },
    "/api/utm-network-scans/countNewAssets": {
      "get": {
        "tags": ["utm-network-scan-resource"],
        "operationId": "countNewAssets",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "integer", "format": "int32" } }
            }
          }
        }
      }
    },
    "/api/utm-network-scans/can-run-command": {
      "get": {
        "tags": ["utm-network-scan-resource"],
        "operationId": "canRunCommand",
        "parameters": [
          {
            "name": "assetName",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": { "*/*": { "schema": { "type": "boolean" } } }
          }
        }
      }
    },
    "/api/utm-network-scans/agent-os-platform": {
      "get": {
        "tags": ["utm-network-scan-resource"],
        "operationId": "getAgentsOsPlatform",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "type": "array", "items": { "type": "string" } }
              }
            }
          }
        }
      }
    },
    "/api/utm-modules": {
      "get": {
        "tags": ["utm-module-resource"],
        "operationId": "getAllUtmModules",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UtmModuleCriteria" }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UtmModule" }
                }
              }
            }
          }
        }
      }
    },
    "/api/utm-modules/moduleDetails": {
      "get": {
        "tags": ["utm-module-resource"],
        "operationId": "getModuleDetails",
        "parameters": [
          {
            "name": "serverId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "nameShort",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "FILE_INTEGRITY",
                "NETFLOW",
                "WINDOWS_AGENT",
                "SYSLOG",
                "LINUX_LOGS",
                "VMWARE",
                "AWS_TRAFFIC_MIRROR",
                "AWS_IAM_USER",
                "AWS_CLOUDTRAIL",
                "AIX",
                "AWS_SQL_SERVER",
                "AWS_POSTGRESQL",
                "AWS_BEANSTALK",
                "AWS_FARGATE",
                "AWS_LAMBDA",
                "AD_AUDIT",
                "SOPHOS",
                "AZURE",
                "O365",
                "IIS",
                "GCP",
                "JSON",
                "MACOS_AGENT",
                "LINUX_AGENT",
                "APACHE",
                "APACHE2",
                "AUDITD",
                "ELASTICSEARCH",
                "HAPROXY",
                "KAFKA",
                "KIBANA",
                "LOGSTASH",
                "MONGODB",
                "MYSQL",
                "NATS",
                "NGINX",
                "OSQUERY",
                "POSTGRESQL",
                "REDIS",
                "TRAEFIK",
                "CISCO",
                "MERAKI",
                "ESET",
                "KASPERSKY",
                "SENTINEL_ONE",
                "FORTIGATE",
                "FORTIWEB",
                "SOPHOS_XG",
                "FIRE_POWER",
                "UFW",
                "MACOS",
                "MIKROTIK",
                "PALO_ALTO",
                "CISCO_SWITCH",
                "SONIC_WALL",
                "DECEPTIVE_BYTES",
                "GITHUB",
                "AS_400",
                "SALESFORCE",
                "BITDEFENDER",
                "SOC_AI",
                "PFSENSE"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/UtmModule" } }
            }
          }
        }
      }
    },
    "/api/utm-modules/moduleCategories": {
      "get": {
        "tags": ["utm-module-resource"],
        "operationId": "getModuleCategories",
        "parameters": [
          {
            "name": "serverId",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "type": "array", "items": { "type": "string" } }
              }
            }
          }
        }
      }
    },
    "/api/utm-modules/module-details-decrypted": {
      "get": {
        "tags": ["utm-module-resource"],
        "operationId": "getModuleDetailsDecrypted",
        "parameters": [
          {
            "name": "nameShort",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "FILE_INTEGRITY",
                "NETFLOW",
                "WINDOWS_AGENT",
                "SYSLOG",
                "LINUX_LOGS",
                "VMWARE",
                "AWS_TRAFFIC_MIRROR",
                "AWS_IAM_USER",
                "AWS_CLOUDTRAIL",
                "AIX",
                "AWS_SQL_SERVER",
                "AWS_POSTGRESQL",
                "AWS_BEANSTALK",
                "AWS_FARGATE",
                "AWS_LAMBDA",
                "AD_AUDIT",
                "SOPHOS",
                "AZURE",
                "O365",
                "IIS",
                "GCP",
                "JSON",
                "MACOS_AGENT",
                "LINUX_AGENT",
                "APACHE",
                "APACHE2",
                "AUDITD",
                "ELASTICSEARCH",
                "HAPROXY",
                "KAFKA",
                "KIBANA",
                "LOGSTASH",
                "MONGODB",
                "MYSQL",
                "NATS",
                "NGINX",
                "OSQUERY",
                "POSTGRESQL",
                "REDIS",
                "TRAEFIK",
                "CISCO",
                "MERAKI",
                "ESET",
                "KASPERSKY",
                "SENTINEL_ONE",
                "FORTIGATE",
                "FORTIWEB",
                "SOPHOS_XG",
                "FIRE_POWER",
                "UFW",
                "MACOS",
                "MIKROTIK",
                "PALO_ALTO",
                "CISCO_SWITCH",
                "SONIC_WALL",
                "DECEPTIVE_BYTES",
                "GITHUB",
                "AS_400",
                "SALESFORCE",
                "BITDEFENDER",
                "SOC_AI",
                "PFSENSE"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/UtmModule" } }
            }
          }
        }
      }
    },
    "/api/utm-modules/is-active": {
      "get": {
        "tags": ["utm-module-resource"],
        "operationId": "isActive",
        "parameters": [
          {
            "name": "moduleName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "FILE_INTEGRITY",
                "NETFLOW",
                "WINDOWS_AGENT",
                "SYSLOG",
                "LINUX_LOGS",
                "VMWARE",
                "AWS_TRAFFIC_MIRROR",
                "AWS_IAM_USER",
                "AWS_CLOUDTRAIL",
                "AIX",
                "AWS_SQL_SERVER",
                "AWS_POSTGRESQL",
                "AWS_BEANSTALK",
                "AWS_FARGATE",
                "AWS_LAMBDA",
                "AD_AUDIT",
                "SOPHOS",
                "AZURE",
                "O365",
                "IIS",
                "GCP",
                "JSON",
                "MACOS_AGENT",
                "LINUX_AGENT",
                "APACHE",
                "APACHE2",
                "AUDITD",
                "ELASTICSEARCH",
                "HAPROXY",
                "KAFKA",
                "KIBANA",
                "LOGSTASH",
                "MONGODB",
                "MYSQL",
                "NATS",
                "NGINX",
                "OSQUERY",
                "POSTGRESQL",
                "REDIS",
                "TRAEFIK",
                "CISCO",
                "MERAKI",
                "ESET",
                "KASPERSKY",
                "SENTINEL_ONE",
                "FORTIGATE",
                "FORTIWEB",
                "SOPHOS_XG",
                "FIRE_POWER",
                "UFW",
                "MACOS",
                "MIKROTIK",
                "PALO_ALTO",
                "CISCO_SWITCH",
                "SONIC_WALL",
                "DECEPTIVE_BYTES",
                "GITHUB",
                "AS_400",
                "SALESFORCE",
                "BITDEFENDER",
                "SOC_AI",
                "PFSENSE"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": { "*/*": { "schema": { "type": "boolean" } } }
          }
        }
      }
    },
    "/api/utm-modules/checkRequirements": {
      "get": {
        "tags": ["utm-module-resource"],
        "operationId": "checkRequirements",
        "parameters": [
          {
            "name": "serverId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "nameShort",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "FILE_INTEGRITY",
                "NETFLOW",
                "WINDOWS_AGENT",
                "SYSLOG",
                "LINUX_LOGS",
                "VMWARE",
                "AWS_TRAFFIC_MIRROR",
                "AWS_IAM_USER",
                "AWS_CLOUDTRAIL",
                "AIX",
                "AWS_SQL_SERVER",
                "AWS_POSTGRESQL",
                "AWS_BEANSTALK",
                "AWS_FARGATE",
                "AWS_LAMBDA",
                "AD_AUDIT",
                "SOPHOS",
                "AZURE",
                "O365",
                "IIS",
                "GCP",
                "JSON",
                "MACOS_AGENT",
                "LINUX_AGENT",
                "APACHE",
                "APACHE2",
                "AUDITD",
                "ELASTICSEARCH",
                "HAPROXY",
                "KAFKA",
                "KIBANA",
                "LOGSTASH",
                "MONGODB",
                "MYSQL",
                "NATS",
                "NGINX",
                "OSQUERY",
                "POSTGRESQL",
                "REDIS",
                "TRAEFIK",
                "CISCO",
                "MERAKI",
                "ESET",
                "KASPERSKY",
                "SENTINEL_ONE",
                "FORTIGATE",
                "FORTIWEB",
                "SOPHOS_XG",
                "FIRE_POWER",
                "UFW",
                "MACOS",
                "MIKROTIK",
                "PALO_ALTO",
                "CISCO_SWITCH",
                "SONIC_WALL",
                "DECEPTIVE_BYTES",
                "GITHUB",
                "AS_400",
                "SALESFORCE",
                "BITDEFENDER",
                "SOC_AI",
                "PFSENSE"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CheckRequirementsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/utm-menu-authorities/{id}": {
      "get": {
        "tags": ["utm-menu-authority-resource"],
        "operationId": "getUtmMenuAuthority",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmMenuAuthority" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["utm-menu-authority-resource"],
        "operationId": "deleteUtmMenuAuthority",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/utm-logstash-filter-groups/{id}": {
      "get": {
        "tags": ["utm-logstash-filter-group-resource"],
        "operationId": "getUtmLogstashFilterGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UtmLogstashFilterGroup"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["utm-logstash-filter-group-resource"],
        "operationId": "deleteUtmLogstashFilterGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/utm-logstash-filter-groups/count": {
      "get": {
        "tags": ["utm-logstash-filter-group-resource"],
        "operationId": "countUtmLogstashFilterGroups",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UtmLogstashFilterGroupCriteria"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "integer", "format": "int64" } }
            }
          }
        }
      }
    },
    "/api/utm-integrations/{id}": {
      "get": {
        "tags": ["utm-integration-resource"],
        "operationId": "getUtmIntegration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmIntegration" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["utm-integration-resource"],
        "operationId": "deleteUtmIntegration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/utm-integrations/count": {
      "get": {
        "tags": ["utm-integration-resource"],
        "operationId": "countUtmIntegrations",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UtmIntegrationCriteria" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "integer", "format": "int64" } }
            }
          }
        }
      }
    },
    "/api/utm-integration-confs/{id}": {
      "get": {
        "tags": ["utm-integration-conf-resource"],
        "operationId": "getUtmIntegrationConf",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmIntegrationConf" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["utm-integration-conf-resource"],
        "operationId": "deleteUtmIntegrationConf",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/utm-integration-confs/count": {
      "get": {
        "tags": ["utm-integration-conf-resource"],
        "operationId": "countUtmIntegrationConfs",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UtmIntegrationConfCriteria"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "integer", "format": "int64" } }
            }
          }
        }
      }
    },
    "/api/utm-index-patterns/{id}": {
      "get": {
        "tags": ["utm-index-pattern-resource"],
        "operationId": "getUtmIndexPattern",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmIndexPattern" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["utm-index-pattern-resource"],
        "operationId": "deleteUtmIndexPattern",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/utm-index-patterns/fields": {
      "get": {
        "tags": ["utm-index-pattern-resource"],
        "operationId": "getAllUtmIndexPatternsWithFields",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UtmIndexPatternCriteria" }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UtmIndexPatternField"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/utm-incidents/{id}": {
      "get": {
        "tags": ["utm-incident-resource"],
        "operationId": "getUtmIncident",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmIncident" }
              }
            }
          }
        }
      }
    },
    "/api/utm-incidents/users-assigned": {
      "get": {
        "tags": ["utm-incident-resource"],
        "operationId": "getAllUserAssigned",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IncidentUserAssignedDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/utm-incident-jobs/{id}": {
      "get": {
        "tags": ["utm-incident-job-resource"],
        "operationId": "getUtmIncidentJob",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmIncidentJob" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["utm-incident-job-resource"],
        "operationId": "deleteUtmIncidentJob",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/utm-incident-jobs/count": {
      "get": {
        "tags": ["utm-incident-job-resource"],
        "operationId": "countUtmIncidentJobs",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UtmIncidentJobCriteria" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "integer", "format": "int64" } }
            }
          }
        }
      }
    },
    "/api/utm-incident-histories": {
      "get": {
        "tags": ["utm-incident-history-resource"],
        "operationId": "getAllUtmIncidentHistories",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UtmIncidentHistoryCriteria"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UtmIncidentHistory" }
                }
              }
            }
          }
        }
      }
    },
    "/api/utm-incident-histories/{id}": {
      "get": {
        "tags": ["utm-incident-history-resource"],
        "operationId": "getUtmIncidentHistory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmIncidentHistory" }
              }
            }
          }
        }
      }
    },
    "/api/utm-incident-histories/count": {
      "get": {
        "tags": ["utm-incident-history-resource"],
        "operationId": "countUtmIncidentHistories",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UtmIncidentHistoryCriteria"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "integer", "format": "int64" } }
            }
          }
        }
      }
    },
    "/api/utm-incident-actions/{id}": {
      "get": {
        "tags": ["utm-incident-action-resource"],
        "operationId": "getUtmIncidentAction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmIncidentAction" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["utm-incident-action-resource"],
        "operationId": "deleteUtmIncidentAction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/utm-incident-actions/count": {
      "get": {
        "tags": ["utm-incident-action-resource"],
        "operationId": "countUtmIncidentActions",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UtmIncidentActionCriteria"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "integer", "format": "int64" } }
            }
          }
        }
      }
    },
    "/api/utm-getting-started": {
      "get": {
        "tags": ["utm-getting-started-resource"],
        "operationId": "getSteps",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UtmGettingStarted" }
                }
              }
            }
          }
        }
      }
    },
    "/api/utm-getting-started/complete": {
      "get": {
        "tags": ["utm-getting-started-resource"],
        "operationId": "completeStep",
        "parameters": [
          {
            "name": "step",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": { "*/*": { "schema": { "type": "string" } } }
          }
        }
      }
    },
    "/api/utm-data-input-statuses/{id}": {
      "get": {
        "tags": ["utm-data-input-status-resource"],
        "operationId": "getUtmDataInputStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmDataInputStatus" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["utm-data-input-status-resource"],
        "operationId": "deleteUtmDataInputStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/utm-data-input-statuses/count": {
      "get": {
        "tags": ["utm-data-input-status-resource"],
        "operationId": "countUtmDataInputStatuses",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UtmDataInputStatusCriteria"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "integer", "format": "int64" } }
            }
          }
        }
      }
    },
    "/api/utm-dashboards/{id}": {
      "get": {
        "tags": ["utm-dashboard-resource"],
        "operationId": "getUtmDashboard",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmDashboard" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["utm-dashboard-resource"],
        "operationId": "deleteUtmDashboard",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/utm-dashboard-visualizations/{id}": {
      "get": {
        "tags": ["utm-dashboard-visualization-resource"],
        "operationId": "getUtmDashboardVisualization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UtmDashboardVisualization"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["utm-dashboard-visualization-resource"],
        "operationId": "deleteUtmDashboardVisualization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/utm-dashboard-authorities/{id}": {
      "get": {
        "tags": ["utm-dashboard-authority-resource"],
        "operationId": "getUtmDashboardAuthority",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UtmDashboardAuthority"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["utm-dashboard-authority-resource"],
        "operationId": "deleteUtmDashboardAuthority",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/utm-configuration-sections": {
      "get": {
        "tags": ["utm-configuration-section-resource"],
        "operationId": "getConfigurationSections",
        "parameters": [
          {
            "name": "id.greaterThan",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "id.lessThan",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "id.greaterThanOrEqual",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "id.lessThanOrEqual",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "id.equals",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "id.notEquals",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "id.specified",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "name": "id.in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "integer", "format": "int64" }
            }
          },
          {
            "name": "id.notIn",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "integer", "format": "int64" }
            }
          },
          {
            "name": "section.contains",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "section.doesNotContain",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "section.equals",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "section.notEquals",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "section.specified",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "name": "section.in",
            "in": "query",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "section.notIn",
            "in": "query",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "shortName.equals",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["SMS", "EMAIL", "TFA", "ALERTS", "DATE_SETTINGS"]
            }
          },
          {
            "name": "shortName.notEquals",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["SMS", "EMAIL", "TFA", "ALERTS", "DATE_SETTINGS"]
            }
          },
          {
            "name": "shortName.specified",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "name": "shortName.in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["SMS", "EMAIL", "TFA", "ALERTS", "DATE_SETTINGS"]
              }
            }
          },
          {
            "name": "shortName.notIn",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["SMS", "EMAIL", "TFA", "ALERTS", "DATE_SETTINGS"]
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": { "minimum": 0, "type": "integer", "default": 0 }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": { "minimum": 1, "type": "integer", "default": 20 }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UtmConfigurationSection"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/utm-configuration-parameters/{id}": {
      "get": {
        "tags": ["utm-configuration-parameter-resource"],
        "operationId": "getUtmConfigurationParameter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UtmConfigurationParameter"
                }
              }
            }
          }
        }
      }
    },
    "/api/utm-configuration-groups/{groupId}": {
      "get": {
        "tags": ["utm-module-group-resource"],
        "operationId": "getConfigurationGroup",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmModuleGroup" }
              }
            }
          }
        }
      }
    },
    "/api/utm-configuration-groups/module-groups": {
      "get": {
        "tags": ["utm-module-group-resource"],
        "operationId": "getModuleGroups",
        "parameters": [
          {
            "name": "moduleId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UtmModuleGroup" }
                }
              }
            }
          }
        }
      }
    },
    "/api/utm-clients": {
      "get": {
        "tags": ["utm-client-resource"],
        "operationId": "getAllUtmClients",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UtmClient" }
                }
              }
            }
          }
        }
      }
    },
    "/api/utm-clients/{id}": {
      "get": {
        "tags": ["utm-client-resource"],
        "operationId": "getUtmClient",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/UtmClient" } }
            }
          }
        }
      }
    },
    "/api/utm-auditor-users-by-src": {
      "get": {
        "tags": ["utm-auditor-users-resource"],
        "operationId": "getAllUtmAuditorUsers",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          },
          {
            "name": "sourceId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UtmAuditorUsersDTO" }
                }
              }
            }
          }
        }
      }
    },
    "/api/utm-asset-types/all": {
      "get": {
        "tags": ["utm-asset-types-resource"],
        "operationId": "getAssetTypes",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UtmAssetTypes" }
                }
              }
            }
          }
        }
      }
    },
    "/api/utm-asset-metrics/{id}": {
      "get": {
        "tags": ["utm-asset-metrics-resource"],
        "operationId": "getUtmAssetMetrics",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmAssetMetrics" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["utm-asset-metrics-resource"],
        "operationId": "deleteUtmAssetMetrics",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/utm-asset-groups/{id}": {
      "get": {
        "tags": ["utm-asset-group-resource"],
        "operationId": "getUtmAssetGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmAssetGroup" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["utm-asset-group-resource"],
        "operationId": "deleteUtmAssetGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/utm-asset-groups/searchGroupsByFilter": {
      "get": {
        "tags": ["utm-asset-group-resource"],
        "operationId": "searchGroupsByFilter",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/AssetGroupFilter" }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/AssetGroupDTO" }
                }
              }
            }
          }
        }
      }
    },
    "/api/utm-alerts/count-open-alerts": {
      "get": {
        "tags": ["utm-alert-resource"],
        "operationId": "countOpenAlerts",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "integer", "format": "int64" } }
            }
          }
        }
      }
    },
    "/api/utm-alert-tags/{id}": {
      "get": {
        "tags": ["utm-alert-tag-resource"],
        "operationId": "getUtmAlertTag",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmAlertTag" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["utm-alert-tag-resource"],
        "operationId": "deleteUtmAlertTag",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/utm-alert-response-rules/{id}": {
      "get": {
        "tags": ["utm-alert-response-rule-resource"],
        "operationId": "getAlertResponseRule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UtmAlertResponseRuleDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/utm-alert-response-rules/resolve-filter-values": {
      "get": {
        "tags": ["utm-alert-response-rule-resource"],
        "operationId": "resolveFilterValues",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/utm-alert-response-rule-histories": {
      "get": {
        "tags": ["utm-alert-response-rule-history-resource"],
        "operationId": "getAllAlertResponseRuleHistories",
        "parameters": [
          {
            "name": "id.greaterThan",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "id.lessThan",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "id.greaterThanOrEqual",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "id.lessThanOrEqual",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "id.equals",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "id.notEquals",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "id.specified",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "name": "id.in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "integer", "format": "int64" }
            }
          },
          {
            "name": "id.notIn",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "integer", "format": "int64" }
            }
          },
          {
            "name": "ruleId.greaterThan",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "ruleId.lessThan",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "ruleId.greaterThanOrEqual",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "ruleId.lessThanOrEqual",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "ruleId.equals",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "ruleId.notEquals",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "ruleId.specified",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "name": "ruleId.in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "integer", "format": "int64" }
            }
          },
          {
            "name": "ruleId.notIn",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "integer", "format": "int64" }
            }
          },
          {
            "name": "createdDate.greaterThan",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "format": "date-time" }
          },
          {
            "name": "createdDate.lessThan",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "format": "date-time" }
          },
          {
            "name": "createdDate.greaterThanOrEqual",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "format": "date-time" }
          },
          {
            "name": "createdDate.lessThanOrEqual",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "format": "date-time" }
          },
          {
            "name": "createdDate.equals",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "format": "date-time" }
          },
          {
            "name": "createdDate.notEquals",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "format": "date-time" }
          },
          {
            "name": "createdDate.specified",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "name": "createdDate.in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "string", "format": "date-time" }
            }
          },
          {
            "name": "createdDate.notIn",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "string", "format": "date-time" }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": { "minimum": 0, "type": "integer", "default": 0 }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": { "minimum": 1, "type": "integer", "default": 20 }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UtmAlertResponseRuleHistoryDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/utm-alert-response-rule-executions": {
      "get": {
        "tags": ["utm-alert-response-rule-execution-resource"],
        "operationId": "getAllAlertResponseRuleExecutions",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UtmAlertResponseRuleExecutionCriteria"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UtmAlertResponseRuleExecution"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/utm-alert-logs/{id}": {
      "get": {
        "tags": ["utm-alert-log-resource"],
        "operationId": "getUtmAlertLog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmAlertLog" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["utm-alert-log-resource"],
        "operationId": "deleteUtmAlertLog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/utm-alert-logs/count": {
      "get": {
        "tags": ["utm-alert-log-resource"],
        "operationId": "countUtmAlertLogs",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/UtmAlertLogCriteria" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "integer", "format": "int64" } }
            }
          }
        }
      }
    },
    "/api/users/{login}": {
      "get": {
        "tags": ["user-resource"],
        "operationId": "getUser",
        "parameters": [
          {
            "name": "login",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/UserDTO" } }
            }
          }
        }
      },
      "delete": {
        "tags": ["user-resource"],
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "login",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/users/filter/{login}": {
      "get": {
        "tags": ["user-resource"],
        "operationId": "getUsersByLogin",
        "parameters": [
          {
            "name": "login",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UserDTO" }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/authorities": {
      "get": {
        "tags": ["user-resource"],
        "operationId": "getAuthorities",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "type": "array", "items": { "type": "string" } }
              }
            }
          }
        }
      }
    },
    "/api/tfa/verifyCode": {
      "get": {
        "tags": ["user-jwt-controller"],
        "operationId": "verifyCode",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/JWTToken" } }
            }
          }
        }
      }
    },
    "/api/searchGroupsByFilter": {
      "get": {
        "tags": ["utm-collector-resource"],
        "operationId": "searchGroupsByFilter_1",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/AssetGroupFilter" }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/AssetGroupDTO" }
                }
              }
            }
          }
        }
      }
    },
    "/api/search-by-filters": {
      "get": {
        "tags": ["utm-collector-resource"],
        "operationId": "searchByFilters_1",
        "parameters": [
          {
            "name": "assetIpMacName",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "os",
            "in": "query",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "alive",
            "in": "query",
            "required": false,
            "schema": { "type": "array", "items": { "type": "boolean" } }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "string", "enum": ["NEW", "CHECK", "MISSING"] }
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "alias",
            "in": "query",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "probe",
            "in": "query",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "openPorts",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "integer", "format": "int32" }
            }
          },
          {
            "name": "groups",
            "in": "query",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "discoveredInitDate",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "format": "date-time" }
          },
          {
            "name": "discoveredEndDate",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "format": "date-time" }
          },
          {
            "name": "registeredMode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["CUSTOM", "DISCOVERED", "DYNAMIC"]
            }
          },
          {
            "name": "agent",
            "in": "query",
            "required": false,
            "schema": { "type": "array", "items": { "type": "boolean" } }
          },
          {
            "name": "osPlatform",
            "in": "query",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": { "minimum": 0, "type": "integer", "default": 0 }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": { "minimum": 1, "type": "integer", "default": 20 }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/CollectorDTO" }
                }
              }
            }
          }
        }
      }
    },
    "/api/ping": {
      "get": {
        "tags": ["utm-stack-resource"],
        "operationId": "ping",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "100 CONTINUE",
                    "101 SWITCHING_PROTOCOLS",
                    "102 PROCESSING",
                    "103 CHECKPOINT",
                    "200 OK",
                    "201 CREATED",
                    "202 ACCEPTED",
                    "203 NON_AUTHORITATIVE_INFORMATION",
                    "204 NO_CONTENT",
                    "205 RESET_CONTENT",
                    "206 PARTIAL_CONTENT",
                    "207 MULTI_STATUS",
                    "208 ALREADY_REPORTED",
                    "226 IM_USED",
                    "300 MULTIPLE_CHOICES",
                    "301 MOVED_PERMANENTLY",
                    "302 FOUND",
                    "302 MOVED_TEMPORARILY",
                    "303 SEE_OTHER",
                    "304 NOT_MODIFIED",
                    "305 USE_PROXY",
                    "307 TEMPORARY_REDIRECT",
                    "308 PERMANENT_REDIRECT",
                    "400 BAD_REQUEST",
                    "401 UNAUTHORIZED",
                    "402 PAYMENT_REQUIRED",
                    "403 FORBIDDEN",
                    "404 NOT_FOUND",
                    "405 METHOD_NOT_ALLOWED",
                    "406 NOT_ACCEPTABLE",
                    "407 PROXY_AUTHENTICATION_REQUIRED",
                    "408 REQUEST_TIMEOUT",
                    "409 CONFLICT",
                    "410 GONE",
                    "411 LENGTH_REQUIRED",
                    "412 PRECONDITION_FAILED",
                    "413 PAYLOAD_TOO_LARGE",
                    "413 REQUEST_ENTITY_TOO_LARGE",
                    "414 URI_TOO_LONG",
                    "414 REQUEST_URI_TOO_LONG",
                    "415 UNSUPPORTED_MEDIA_TYPE",
                    "416 REQUESTED_RANGE_NOT_SATISFIABLE",
                    "417 EXPECTATION_FAILED",
                    "418 I_AM_A_TEAPOT",
                    "419 INSUFFICIENT_SPACE_ON_RESOURCE",
                    "420 METHOD_FAILURE",
                    "421 DESTINATION_LOCKED",
                    "422 UNPROCESSABLE_ENTITY",
                    "423 LOCKED",
                    "424 FAILED_DEPENDENCY",
                    "425 TOO_EARLY",
                    "426 UPGRADE_REQUIRED",
                    "428 PRECONDITION_REQUIRED",
                    "429 TOO_MANY_REQUESTS",
                    "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
                    "451 UNAVAILABLE_FOR_LEGAL_REASONS",
                    "500 INTERNAL_SERVER_ERROR",
                    "501 NOT_IMPLEMENTED",
                    "502 BAD_GATEWAY",
                    "503 SERVICE_UNAVAILABLE",
                    "504 GATEWAY_TIMEOUT",
                    "505 HTTP_VERSION_NOT_SUPPORTED",
                    "506 VARIANT_ALSO_NEGOTIATES",
                    "507 INSUFFICIENT_STORAGE",
                    "508 LOOP_DETECTED",
                    "509 BANDWIDTH_LIMIT_EXCEEDED",
                    "510 NOT_EXTENDED",
                    "511 NETWORK_AUTHENTICATION_REQUIRED"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/overview/top-windows-events": {
      "get": {
        "tags": ["overview-resource"],
        "operationId": "topWindowsEvents",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "to",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "top",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/TableType" } }
            }
          }
        }
      }
    },
    "/api/overview/top-alerts": {
      "get": {
        "tags": ["overview-resource"],
        "operationId": "topAlerts",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "to",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "top",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/TableType" } }
            }
          }
        }
      }
    },
    "/api/overview/top-alerts-by-category": {
      "get": {
        "tags": ["overview-resource"],
        "operationId": "topAlertsByCategory",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "to",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "top",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/BarType" } }
            }
          }
        }
      }
    },
    "/api/overview/events-in-time": {
      "get": {
        "tags": ["overview-resource"],
        "operationId": "eventsInTime",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "to",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "interval",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "Second",
                "Minute",
                "Hour",
                "Day",
                "Week",
                "Month",
                "Quarter",
                "Year"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EventsByObjectsInTimeType"
                }
              }
            }
          }
        }
      }
    },
    "/api/overview/count-events-by-type": {
      "get": {
        "tags": ["overview-resource"],
        "operationId": "countEventsByType",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "to",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "top",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/PieType" } }
            }
          }
        }
      }
    },
    "/api/overview/count-alerts-today-and-last-week": {
      "get": {
        "tags": ["overview-resource"],
        "operationId": "countAlertsTodayAndLastWeek",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/CardType" }
                }
              }
            }
          }
        }
      }
    },
    "/api/overview/count-alerts-by-status": {
      "get": {
        "tags": ["overview-resource"],
        "operationId": "countAlertsByStatus",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "to",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/CardType" }
                }
              }
            }
          }
        }
      }
    },
    "/api/overview/count-alerts-by-severity": {
      "get": {
        "tags": ["overview-resource"],
        "operationId": "countAlertsBySeverity",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "to",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "top",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/PieType" } }
            }
          }
        }
      }
    },
    "/api/module-group-configurations/by-group-id": {
      "get": {
        "tags": ["utm-module-group-configuration-resource"],
        "operationId": "getConfigurationByGroupId",
        "parameters": [
          {
            "name": "groupId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UtmModuleGroupConfiguration"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/module-group-configurations/by-group-and-key": {
      "get": {
        "tags": ["utm-module-group-configuration-resource"],
        "operationId": "getConfigurationByGroupIdAndConfKey",
        "parameters": [
          {
            "name": "groupId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "confKey",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UtmModuleGroupConfiguration"
                }
              }
            }
          }
        }
      }
    },
    "/api/menu/get-menu-by-authorities": {
      "get": {
        "tags": ["utm-menu-resource"],
        "operationId": "getMenusByAuthorities",
        "parameters": [
          {
            "name": "parentId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "authorities",
            "in": "query",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UtmMenu" }
                }
              }
            }
          }
        }
      }
    },
    "/api/menu/all": {
      "get": {
        "tags": ["utm-menu-resource"],
        "operationId": "getMenus",
        "parameters": [
          {
            "name": "includeModulesMenus",
            "in": "query",
            "required": true,
            "schema": { "type": "boolean" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/MenuType" }
                }
              }
            }
          }
        }
      }
    },
    "/api/logstash-pipelines/{id}": {
      "get": {
        "tags": ["utm-logstash-pipeline-resource"],
        "operationId": "getUtmLogstashPipeline",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UtmLogstashPipelineVM"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["utm-logstash-pipeline-resource"],
        "operationId": "deleteUtmLogstashPipeline",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/logstash-pipelines/stats": {
      "get": {
        "tags": ["utm-logstash-pipeline-resource"],
        "operationId": "getLogstashStats",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/LogstashApiStatsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/logstash-pipelines/port": {
      "get": {
        "tags": ["utm-logstash-pipeline-resource"],
        "operationId": "getAllActivePipelinesPort",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": { "minimum": 0, "type": "integer", "default": 0 }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": { "minimum": 1, "type": "integer", "default": 20 }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "isInternal",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PipelinePortConfiguration"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/logstash-inputs/types": {
      "get": {
        "tags": ["utm-logstash-input-resource"],
        "operationId": "getAllowedInputTypes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "type": "array", "items": { "type": "string" } }
              }
            }
          }
        }
      }
    },
    "/api/logstash-inputs/config": {
      "get": {
        "tags": ["utm-logstash-input-resource"],
        "operationId": "getInputDefinitionByType",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/InputConfiguration" }
              }
            }
          }
        }
      }
    },
    "/api/logstash-inputs/available-value": {
      "get": {
        "tags": ["utm-logstash-input-resource"],
        "operationId": "getAvailableConfigValueByType",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "type": "array", "items": { "type": "string" } }
              }
            }
          }
        }
      }
    },
    "/api/logstash-filters/{id}": {
      "get": {
        "tags": ["utm-logstash-filter-resource"],
        "operationId": "getLogstashFilter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UtmLogstashFilter" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["utm-logstash-filter-resource"],
        "operationId": "deleteLogstashFilter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/logstash-filters/by-pipelineid": {
      "get": {
        "tags": ["utm-logstash-filter-resource"],
        "operationId": "filtersByPipelineId",
        "parameters": [
          {
            "name": "pipelineId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UtmLogstashFilter" }
                }
              }
            }
          }
        }
      }
    },
    "/api/log-analyzer/queries/{id}": {
      "get": {
        "tags": ["log-analyzer-resource"],
        "operationId": "getLogAnalyzerQuery",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/LogAnalyzerQuery" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["log-analyzer-resource"],
        "operationId": "deleteLogAnalyzerQuery",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/isInDevelop": {
      "get": {
        "tags": ["utm-stack-resource"],
        "operationId": "isInDevelop",
        "responses": {
          "200": {
            "description": "OK",
            "content": { "*/*": { "schema": { "type": "boolean" } } }
          }
        }
      }
    },
    "/api/images/{shortName}": {
      "get": {
        "tags": ["utm-images-resource"],
        "operationId": "getImage",
        "parameters": [
          {
            "name": "shortName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["LOGIN", "HEADER", "REPORT", "REPORT_COVER"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/UtmImages" } }
            }
          }
        }
      }
    },
    "/api/images/reset": {
      "get": {
        "tags": ["utm-images-resource"],
        "operationId": "reset",
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/images/all": {
      "get": {
        "tags": ["utm-images-resource"],
        "operationId": "getAllImages",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UtmImages" }
                }
              }
            }
          }
        }
      }
    },
    "/api/healthcheck": {
      "get": {
        "tags": ["utm-stack-resource"],
        "operationId": "healthCheck",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "100 CONTINUE",
                    "101 SWITCHING_PROTOCOLS",
                    "102 PROCESSING",
                    "103 CHECKPOINT",
                    "200 OK",
                    "201 CREATED",
                    "202 ACCEPTED",
                    "203 NON_AUTHORITATIVE_INFORMATION",
                    "204 NO_CONTENT",
                    "205 RESET_CONTENT",
                    "206 PARTIAL_CONTENT",
                    "207 MULTI_STATUS",
                    "208 ALREADY_REPORTED",
                    "226 IM_USED",
                    "300 MULTIPLE_CHOICES",
                    "301 MOVED_PERMANENTLY",
                    "302 FOUND",
                    "302 MOVED_TEMPORARILY",
                    "303 SEE_OTHER",
                    "304 NOT_MODIFIED",
                    "305 USE_PROXY",
                    "307 TEMPORARY_REDIRECT",
                    "308 PERMANENT_REDIRECT",
                    "400 BAD_REQUEST",
                    "401 UNAUTHORIZED",
                    "402 PAYMENT_REQUIRED",
                    "403 FORBIDDEN",
                    "404 NOT_FOUND",
                    "405 METHOD_NOT_ALLOWED",
                    "406 NOT_ACCEPTABLE",
                    "407 PROXY_AUTHENTICATION_REQUIRED",
                    "408 REQUEST_TIMEOUT",
                    "409 CONFLICT",
                    "410 GONE",
                    "411 LENGTH_REQUIRED",
                    "412 PRECONDITION_FAILED",
                    "413 PAYLOAD_TOO_LARGE",
                    "413 REQUEST_ENTITY_TOO_LARGE",
                    "414 URI_TOO_LONG",
                    "414 REQUEST_URI_TOO_LONG",
                    "415 UNSUPPORTED_MEDIA_TYPE",
                    "416 REQUESTED_RANGE_NOT_SATISFIABLE",
                    "417 EXPECTATION_FAILED",
                    "418 I_AM_A_TEAPOT",
                    "419 INSUFFICIENT_SPACE_ON_RESOURCE",
                    "420 METHOD_FAILURE",
                    "421 DESTINATION_LOCKED",
                    "422 UNPROCESSABLE_ENTITY",
                    "423 LOCKED",
                    "424 FAILED_DEPENDENCY",
                    "425 TOO_EARLY",
                    "426 UPGRADE_REQUIRED",
                    "428 PRECONDITION_REQUIRED",
                    "429 TOO_MANY_REQUESTS",
                    "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
                    "451 UNAVAILABLE_FOR_LEGAL_REASONS",
                    "500 INTERNAL_SERVER_ERROR",
                    "501 NOT_IMPLEMENTED",
                    "502 BAD_GATEWAY",
                    "503 SERVICE_UNAVAILABLE",
                    "504 GATEWAY_TIMEOUT",
                    "505 HTTP_VERSION_NOT_SUPPORTED",
                    "506 VARIANT_ALSO_NEGOTIATES",
                    "507 INSUFFICIENT_STORAGE",
                    "508 LOOP_DETECTED",
                    "509 BANDWIDTH_LIMIT_EXCEEDED",
                    "510 NOT_EXTENDED",
                    "511 NETWORK_AUTHENTICATION_REQUIRED"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/groups-by-collectors/{collectorId}": {
      "get": {
        "tags": ["utm-collector-resource"],
        "operationId": "getModuleGroups_1",
        "parameters": [
          {
            "name": "collectorId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UtmModuleGroup" }
                }
              }
            }
          }
        }
      }
    },
    "/api/generate-pdf-report": {
      "get": {
        "tags": ["pdf-generator-resource"],
        "operationId": "getPdfReportInBytes",
        "parameters": [
          {
            "name": "url",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "accessType",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["PDF_TYPE_INTERNAL", "PDF_TYPE_TOKEN"]
            }
          },
          {
            "name": "filename",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": { "application/pdf": { "schema": { "type": "string" } } }
          }
        }
      }
    },
    "/api/federation-service/token": {
      "get": {
        "tags": ["utm-federation-service-client-resource"],
        "operationId": "getFederationServiceManagerToken",
        "responses": {
          "200": {
            "description": "OK",
            "content": { "*/*": { "schema": { "type": "string" } } }
          }
        }
      }
    },
    "/api/federation-service/generateApiToken": {
      "get": {
        "tags": ["utm-federation-service-client-resource"],
        "operationId": "generateApiToken",
        "responses": {
          "200": {
            "description": "OK",
            "content": { "*/*": { "schema": { "type": "string" } } }
          }
        }
      }
    },
    "/api/elasticsearch/property/values": {
      "get": {
        "tags": ["elasticsearch-resource"],
        "operationId": "getFieldValues",
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "indexPattern",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "type": "array", "items": { "type": "string" } }
              }
            }
          }
        }
      }
    },
    "/api/elasticsearch/index/properties": {
      "get": {
        "tags": ["elasticsearch-resource"],
        "operationId": "getIndexProperties",
        "parameters": [
          {
            "name": "indexPattern",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/IndexPropertyType" }
                }
              }
            }
          }
        }
      }
    },
    "/api/elasticsearch/index/all": {
      "get": {
        "tags": ["elasticsearch-resource"],
        "operationId": "getAllIndexes",
        "parameters": [
          {
            "name": "includeSystemIndex",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "name": "pattern",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/IndexType" }
                }
              }
            }
          }
        }
      }
    },
    "/api/elasticsearch/cluster/status": {
      "get": {
        "tags": ["elasticsearch-resource"],
        "operationId": "getClusterStatus",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ElasticCluster" }
              }
            }
          }
        }
      }
    },
    "/api/date-format": {
      "get": {
        "tags": ["utm-stack-resource"],
        "operationId": "dateFormat",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { "type": "string" }
                }
              }
            }
          }
        }
      }
    },
    "/api/custom-reports/buildThreatActivityForIncidents": {
      "get": {
        "tags": ["custom-reports-resource"],
        "operationId": "buildThreatActivityForIncidents",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "format": "date-time" }
          },
          {
            "name": "to",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "format": "date-time" }
          },
          {
            "name": "top",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "string", "format": "binary" } }
            }
          }
        }
      }
    },
    "/api/custom-reports/buildThreatActivityForAlerts": {
      "get": {
        "tags": ["custom-reports-resource"],
        "operationId": "buildThreatActivityForAlerts",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "format": "date-time" }
          },
          {
            "name": "to",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "format": "date-time" }
          },
          {
            "name": "top",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "string", "format": "binary" } }
            }
          }
        }
      }
    },
    "/api/custom-reports/buildAssetManagement": {
      "get": {
        "tags": ["custom-reports-resource"],
        "operationId": "buildAssetManagement",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "format": "date-time" }
          },
          {
            "name": "to",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "format": "date-time" }
          },
          {
            "name": "top",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "type": "string", "format": "binary" } }
            }
          }
        }
      }
    },
    "/api/compliance/standard/{id}": {
      "get": {
        "tags": ["utm-compliance-standard-resource"],
        "operationId": "getComplianceStandard",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UtmComplianceStandard"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["utm-compliance-standard-resource"],
        "operationId": "deleteComplianceStandard",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/compliance/standard-section/{id}": {
      "get": {
        "tags": ["utm-compliance-standard-section-resource"],
        "operationId": "getComplianceStandardSection",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UtmComplianceStandardSection"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["utm-compliance-standard-section-resource"],
        "operationId": "deleteComplianceStandardSection",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/compliance/standard-section/sections-with-reports": {
      "get": {
        "tags": ["utm-compliance-standard-section-resource"],
        "operationId": "getSectionsWithReports",
        "parameters": [
          {
            "name": "standardId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UtmComplianceStandardSection"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/compliance/report-config/{id}": {
      "get": {
        "tags": ["utm-compliance-report-config-resource"],
        "operationId": "getComplianceReportConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "expandDashboard",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UtmComplianceReportConfig"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["utm-compliance-report-config-resource"],
        "operationId": "deleteComplianceReportConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/compliance/report-config/get-by-filters": {
      "get": {
        "tags": ["utm-compliance-report-config-resource"],
        "operationId": "getReportsByFilters",
        "parameters": [
          {
            "name": "standardId",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "solution",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "sectionId",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "setStatus",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "name": "expandDashboard",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UtmComplianceReportConfig"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/compliance-report-schedules-by-user": {
      "get": {
        "tags": ["utm-compliance-report-schedule-resource"],
        "operationId": "getAllUtmComplianceReportSchedules",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UtmComplianceReportScheduleCriteria"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/Pageable" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UtmComplianceReportSchedule"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/compliance-report-schedules-by-id/{id}": {
      "get": {
        "tags": ["utm-compliance-report-schedule-resource"],
        "operationId": "getUtmComplianceReportScheduleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UtmComplianceReportSchedule"
                }
              }
            }
          }
        }
      }
    },
    "/api/collectors-list": {
      "get": {
        "tags": ["utm-collector-resource"],
        "operationId": "listCollectorsByModule",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "module",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "enum": ["AS_400"] }
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ListCollectorsResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/collector-hostnames": {
      "get": {
        "tags": ["utm-collector-resource"],
        "operationId": "listCollectorHostNames",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "module",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "enum": ["AS_400"] }
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/CollectorHostnames" }
              }
            }
          }
        }
      }
    },
    "/api/collector-by-hostname-and-module": {
      "get": {
        "tags": ["utm-collector-resource"],
        "operationId": "listCollectorByHostNameAndModule",
        "parameters": [
          {
            "name": "hostname",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "module",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "enum": ["AS_400"] }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ListCollectorsResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/check-credentials": {
      "get": {
        "tags": ["user-jwt-controller"],
        "operationId": "checkPassword",
        "parameters": [
          {
            "name": "password",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "checkUUID",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": { "*/*": { "schema": { "type": "string" } } }
          }
        }
      }
    },
    "/api/alert-tag-rules/{id}": {
      "get": {
        "tags": ["utm-alert-tag-rule-resource"],
        "operationId": "getAlertTagRule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/AlertTagRuleVM" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["utm-alert-tag-rule-resource"],
        "operationId": "deleteAlertTagRule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/alert-tag-rules/get-by-ids": {
      "get": {
        "tags": ["utm-alert-tag-rule-resource"],
        "operationId": "getAlertTagRulesByIds",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": { "type": "integer", "format": "int64" }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/AlertTagRuleVM" }
                }
              }
            }
          }
        }
      }
    },
    "/api/agent-manager/can-run-command": {
      "get": {
        "tags": ["agent-manager-resource"],
        "operationId": "canRunCommand_1",
        "parameters": [
          {
            "name": "hostname",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": { "*/*": { "schema": { "type": "boolean" } } }
          }
        }
      }
    },
    "/api/agent-manager/agents": {
      "get": {
        "tags": ["agent-manager-resource"],
        "operationId": "listAgents",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "searchQuery",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/AgentDTO" }
                }
              }
            }
          }
        }
      }
    },
    "/api/agent-manager/agents-with-commands": {
      "get": {
        "tags": ["agent-manager-resource"],
        "operationId": "listAgentsWithCommands",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/AgentDTO" }
                }
              }
            }
          }
        }
      }
    },
    "/api/agent-manager/agent-commands": {
      "get": {
        "tags": ["agent-manager-resource"],
        "operationId": "listAgentCommands",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "searchQuery",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/AgentCommandDTO" }
                }
              }
            }
          }
        }
      }
    },
    "/api/agent-manager/agent-by-hostname": {
      "get": {
        "tags": ["agent-manager-resource"],
        "operationId": "getAgentByHostname",
        "parameters": [
          {
            "name": "hostname",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/AgentDTO" } }
            }
          }
        }
      }
    },
    "/api/agent-manager-group/get-by-filter": {
      "get": {
        "tags": ["agent-manager-group-resource"],
        "operationId": "listAgentGroups",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "searchQuery",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/AgentGroupDTO" }
                }
              }
            }
          }
        }
      }
    },
    "/api/utm-visualizations/bulk-delete": {
      "delete": {
        "tags": ["utm-visualization-resource"],
        "operationId": "bulkDelete",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": { "type": "integer", "format": "int64" }
            }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/utm-network-scans/deleteCustomAsset/{id}": {
      "delete": {
        "tags": ["utm-network-scan-resource"],
        "operationId": "deleteCustomAsset",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/utm-incident-variables/{id}": {
      "delete": {
        "tags": ["utm-incident-variable-resource"],
        "operationId": "deleteUtmIncidentVariable",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/utm-incident-alerts/{id}": {
      "delete": {
        "tags": ["utm-incident-alert-resource"],
        "operationId": "deleteUtmIncidentAlert",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/utm-configuration-groups/delete-single-module-group": {
      "delete": {
        "tags": ["utm-module-group-resource"],
        "operationId": "deleteSingleModuleGroup",
        "parameters": [
          {
            "name": "groupId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/utm-configuration-groups/delete-all-module-groups": {
      "delete": {
        "tags": ["utm-module-group-resource"],
        "operationId": "deleteAllModuleGroups",
        "parameters": [
          {
            "name": "moduleId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/menu/{id}": {
      "delete": {
        "tags": ["utm-menu-resource"],
        "operationId": "deleteUtmMenu",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/logstash-inputs/{id}": {
      "delete": {
        "tags": ["utm-logstash-input-resource"],
        "operationId": "deleteUtmLogstashInput",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/incident-action-commands/{id}": {
      "delete": {
        "tags": ["utm-incident-action-command-resource"],
        "operationId": "deleteIncidentActionCommand",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/compliance-report-schedules/{id}": {
      "delete": {
        "tags": ["utm-compliance-report-schedule-resource"],
        "operationId": "deleteUtmComplianceReportSchedule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/collectors/{id}": {
      "delete": {
        "tags": ["utm-collector-resource"],
        "operationId": "deleteCollector",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/authority/{name}": {
      "delete": {
        "tags": ["authority-resource"],
        "operationId": "deleteAuthority",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/agent-manager-group/{id}": {
      "delete": {
        "tags": ["agent-manager-group-resource"],
        "operationId": "deleteAgentGroupDTO",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    }
  },
  "components": {
    "schemas": {
      "LoggerVM": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "level": { "type": "string" }
        }
      },
      "AggregationType": {
        "type": "object",
        "properties": {
          "metrics": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Metric" }
          },
          "bucket": { "$ref": "#/components/schemas/Bucket" }
        }
      },
      "Bucket": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "aggregation": {
            "type": "string",
            "enum": [
              "TERMS",
              "RANGE",
              "DATE_HISTOGRAM",
              "DATE_RANGE",
              "FILTERS"
            ]
          },
          "type": { "type": "string", "enum": ["AXIS", "BUCKET"] },
          "field": { "type": "string" },
          "customLabel": { "type": "string" },
          "subBucket": { "$ref": "#/components/schemas/Bucket" },
          "terms": { "$ref": "#/components/schemas/TermsBucket" },
          "dateHistogram": {
            "$ref": "#/components/schemas/DateHistogramBucket"
          },
          "ranges": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/RangeBucket" }
          }
        }
      },
      "DateHistogramBucket": {
        "type": "object",
        "properties": { "interval": { "type": "string" } }
      },
      "FilterType": {
        "type": "object",
        "properties": {
          "operator": {
            "type": "string",
            "enum": [
              "IS",
              "IS_NOT",
              "CONTAIN",
              "CONTAIN_ONE_OF",
              "DOES_NOT_CONTAIN_ONE_OF",
              "DOES_NOT_CONTAIN",
              "IS_ONE_OF",
              "IS_NOT_ONE_OF",
              "IS_ONE_OF_TERMS",
              "EXIST",
              "DOES_NOT_EXIST",
              "IS_BETWEEN",
              "IS_NOT_BETWEEN",
              "IS_IN_FIELDS",
              "IS_NOT_IN_FIELDS",
              "ENDS_WITH",
              "NOT_ENDS_WITH",
              "START_WITH",
              "NOT_START_WITH",
              "IS_GREATER_THAN",
              "IS_LESS_THAN_OR_EQUALS"
            ]
          },
          "field": { "type": "string" },
          "value": { "type": "object" }
        }
      },
      "Metric": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "aggregation": {
            "type": "string",
            "enum": ["COUNT", "AVERAGE", "MAX", "MIN", "MEDIAN", "SUM"]
          },
          "field": { "type": "string" },
          "customLabel": { "type": "string" }
        }
      },
      "RangeBucket": {
        "type": "object",
        "properties": {
          "from": { "type": "number", "format": "double" },
          "to": { "type": "number", "format": "double" }
        }
      },
      "TermsBucket": {
        "type": "object",
        "properties": {
          "sortBy": { "type": "string" },
          "asc": { "type": "boolean" },
          "size": { "type": "integer", "format": "int32" }
        }
      },
      "UtmIndexPattern": {
        "required": ["pattern"],
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "pattern": { "maxLength": 100, "minLength": 0, "type": "string" },
          "patternModule": { "type": "string" },
          "patternSystem": { "type": "boolean" },
          "active": { "type": "boolean" }
        }
      },
      "UtmVisualization": {
        "required": ["idPattern", "name"],
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "name": { "maxLength": 100, "minLength": 0, "type": "string" },
          "description": { "maxLength": 255, "minLength": 0, "type": "string" },
          "eventType": { "type": "string" },
          "createdDate": { "type": "string", "format": "date-time" },
          "modifiedDate": { "type": "string", "format": "date-time" },
          "userCreated": { "type": "string" },
          "userModified": { "type": "string" },
          "chartConfig": { "type": "string" },
          "chartAction": { "type": "string" },
          "systemOwner": { "type": "boolean" },
          "idPattern": { "type": "integer", "format": "int64" },
          "chartType": {
            "type": "string",
            "enum": [
              "METRIC_CHART",
              "PIE_CHART",
              "GAUGE_CHART",
              "GOAL_CHART",
              "TABLE_CHART",
              "TAG_CLOUD_CHART",
              "HORIZONTAL_BAR_CHART",
              "VERTICAL_BAR_CHART",
              "LINE_CHART",
              "AREA_CHART",
              "HEATMAP_CHART",
              "COORDINATE_MAP_CHART",
              "LIST_CHART",
              "TEXT_CHART"
            ]
          },
          "filterType": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/FilterType" }
          },
          "aggregationType": { "$ref": "#/components/schemas/AggregationType" },
          "pattern": { "$ref": "#/components/schemas/UtmIndexPattern" }
        }
      },
      "UtmModule": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "serverId": { "type": "integer", "format": "int64" },
          "prettyName": { "type": "string" },
          "moduleName": {
            "type": "string",
            "enum": [
              "FILE_INTEGRITY",
              "NETFLOW",
              "WINDOWS_AGENT",
              "SYSLOG",
              "LINUX_LOGS",
              "VMWARE",
              "AWS_TRAFFIC_MIRROR",
              "AWS_IAM_USER",
              "AWS_CLOUDTRAIL",
              "AIX",
              "AWS_SQL_SERVER",
              "AWS_POSTGRESQL",
              "AWS_BEANSTALK",
              "AWS_FARGATE",
              "AWS_LAMBDA",
              "AD_AUDIT",
              "SOPHOS",
              "AZURE",
              "O365",
              "IIS",
              "GCP",
              "JSON",
              "MACOS_AGENT",
              "LINUX_AGENT",
              "APACHE",
              "APACHE2",
              "AUDITD",
              "ELASTICSEARCH",
              "HAPROXY",
              "KAFKA",
              "KIBANA",
              "LOGSTASH",
              "MONGODB",
              "MYSQL",
              "NATS",
              "NGINX",
              "OSQUERY",
              "POSTGRESQL",
              "REDIS",
              "TRAEFIK",
              "CISCO",
              "MERAKI",
              "ESET",
              "KASPERSKY",
              "SENTINEL_ONE",
              "FORTIGATE",
              "FORTIWEB",
              "SOPHOS_XG",
              "FIRE_POWER",
              "UFW",
              "MACOS",
              "MIKROTIK",
              "PALO_ALTO",
              "CISCO_SWITCH",
              "SONIC_WALL",
              "DECEPTIVE_BYTES",
              "GITHUB",
              "AS_400",
              "SALESFORCE",
              "BITDEFENDER",
              "SOC_AI",
              "PFSENSE"
            ]
          },
          "moduleDescription": { "type": "string" },
          "moduleActive": { "type": "boolean" },
          "moduleIcon": { "type": "string" },
          "moduleCategory": { "type": "string" },
          "liteVersion": { "type": "boolean" },
          "needsRestart": { "type": "boolean" },
          "moduleGroups": {
            "uniqueItems": true,
            "type": "array",
            "items": { "$ref": "#/components/schemas/UtmModuleGroup" }
          },
          "activatable": { "type": "boolean" }
        }
      },
      "UtmModuleGroup": {
        "required": ["groupName", "moduleId"],
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "moduleId": { "type": "integer", "format": "int64" },
          "groupName": { "type": "string" },
          "groupDescription": { "type": "string" },
          "moduleGroupConfigurations": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UtmModuleGroupConfiguration"
            }
          },
          "collector": { "type": "string" }
        }
      },
      "UtmModuleGroupConfiguration": {
        "required": ["confDataType", "confKey", "confRequired", "groupId"],
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "groupId": { "type": "integer", "format": "int64" },
          "confKey": { "type": "string" },
          "confValue": { "type": "string" },
          "confName": { "type": "string" },
          "confDescription": { "type": "string" },
          "confDataType": { "type": "string" },
          "confRequired": { "type": "boolean" }
        }
      },
      "UtmServer": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "serverName": { "type": "string" },
          "serverType": { "type": "string" },
          "modules": {
            "uniqueItems": true,
            "type": "array",
            "items": { "$ref": "#/components/schemas/UtmModule" }
          }
        }
      },
      "UtmServerModule": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "serverId": { "type": "integer", "format": "int64" },
          "moduleName": { "type": "string" },
          "needsRestart": { "type": "boolean" },
          "prettyName": { "type": "string" },
          "server": { "$ref": "#/components/schemas/UtmServer" }
        }
      },
      "UtmSchedule": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "name": { "maxLength": 100, "minLength": 0, "type": "string" },
          "comment": { "maxLength": 255, "minLength": 0, "type": "string" },
          "firstTime": { "type": "integer", "format": "int64" },
          "period": { "type": "integer", "format": "int64" },
          "periodMonth": { "type": "integer", "format": "int64" },
          "duration": { "type": "integer", "format": "int64" },
          "timezone": { "type": "string" },
          "initialOffset": { "type": "integer", "format": "int64" },
          "creationTime": { "type": "integer", "format": "int64" },
          "modificationTime": { "type": "integer", "format": "int64" }
        }
      },
      "UtmReport": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "repName": { "maxLength": 255, "minLength": 0, "type": "string" },
          "repDescription": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "reportSectionId": { "type": "integer", "format": "int64" },
          "dashboardId": { "type": "integer", "format": "int64" },
          "creationUser": { "type": "string" },
          "creationDate": { "type": "string", "format": "date-time" },
          "modificationUser": { "type": "string" },
          "modificationDate": { "type": "string", "format": "date-time" },
          "repUrl": { "type": "string" },
          "repType": {
            "type": "string",
            "enum": ["CUSTOM_PDF", "CUSTOM_LIST", "TEMPLATE"]
          },
          "repModule": { "type": "string" },
          "repShortName": { "type": "string" },
          "repHttpMethod": { "type": "string" }
        }
      },
      "UtmReportSection": {
        "required": ["repSecDescription"],
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "repSecName": { "type": "string" },
          "repSecDescription": { "type": "string" },
          "repSecSystem": { "type": "boolean" },
          "creationUser": { "type": "string" },
          "creationDate": { "type": "string", "format": "date-time" },
          "modificationUser": { "type": "string" },
          "modificationDate": { "type": "string", "format": "date-time" }
        }
      },
      "UtmPorts": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "scanId": { "type": "integer", "format": "int64" },
          "port": { "type": "integer", "format": "int32" },
          "tcp": { "type": "string" },
          "udp": { "type": "string" }
        }
      },
      "UtmAssetGroup": {
        "required": ["groupName"],
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "groupName": { "maxLength": 100, "minLength": 0, "type": "string" },
          "groupDescription": { "type": "string" },
          "createdDate": { "type": "string", "format": "date-time" },
          "metrics": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UtmAssetMetrics" }
          },
          "assets": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UtmNetworkScan" }
          },
          "collectors": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UtmCollector" }
          },
          "type": { "type": "string" }
        }
      },
      "UtmAssetMetrics": {
        "required": ["amount", "assetName", "metric"],
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "assetName": { "type": "string" },
          "metric": { "type": "string" },
          "amount": { "type": "integer", "format": "int64" }
        }
      },
      "UtmAssetTypes": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "typeName": { "maxLength": 100, "minLength": 0, "type": "string" }
        }
      },
      "UtmCollector": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "status": { "type": "string" },
          "collectorKey": { "type": "string" },
          "ip": { "type": "string" },
          "hostname": { "type": "string" },
          "version": { "type": "string" },
          "module": { "type": "string" },
          "lastSeen": { "type": "string", "format": "date-time" },
          "groupId": { "type": "integer", "format": "int64" },
          "assetGroup": { "$ref": "#/components/schemas/UtmAssetGroup" },
          "active": { "type": "boolean" }
        }
      },
      "UtmDataInputStatus": {
        "required": ["dataType", "source", "timestamp"],
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "source": { "maxLength": 256, "minLength": 0, "type": "string" },
          "dataType": { "maxLength": 50, "minLength": 0, "type": "string" },
          "timestamp": { "type": "integer", "format": "int64" },
          "median": { "type": "integer", "format": "int64" },
          "down": { "type": "boolean" }
        }
      },
      "UtmNetworkScan": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "assetIp": { "maxLength": 255, "minLength": 0, "type": "string" },
          "assetAddresses": { "type": "string" },
          "assetMac": { "maxLength": 255, "minLength": 0, "type": "string" },
          "assetOs": { "maxLength": 255, "minLength": 0, "type": "string" },
          "assetOsArch": { "maxLength": 100, "minLength": 0, "type": "string" },
          "assetOsMajorVersion": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "assetOsMinorVersion": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "assetOsPlatform": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "assetOsVersion": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "assetName": { "maxLength": 255, "minLength": 0, "type": "string" },
          "assetAliases": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "assetAlias": { "type": "string" },
          "assetAlive": { "type": "boolean" },
          "assetStatus": {
            "type": "string",
            "enum": ["NEW", "CHECK", "MISSING"]
          },
          "assetSeverityMetric": { "type": "number", "format": "float" },
          "discoveredAt": { "type": "string", "format": "date-time" },
          "modifiedAt": { "type": "string", "format": "date-time" },
          "assetNotes": { "type": "string" },
          "serverName": { "maxLength": 255, "minLength": 0, "type": "string" },
          "groupId": { "type": "integer", "format": "int64" },
          "registeredMode": {
            "type": "string",
            "enum": ["CUSTOM", "DISCOVERED", "DYNAMIC"]
          },
          "isAgent": { "type": "boolean" },
          "registerIp": { "maxLength": 50, "minLength": 0, "type": "string" },
          "updateLevel": {
            "type": "string",
            "enum": ["DATASOURCE", "SCANNER", "AGENT"]
          },
          "assetType": { "$ref": "#/components/schemas/UtmAssetTypes" },
          "ports": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UtmPorts" }
          },
          "metrics": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UtmAssetMetrics" }
          },
          "dataInputList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UtmDataInputStatus" }
          },
          "assetGroup": { "$ref": "#/components/schemas/UtmAssetGroup" },
          "uuid": { "type": "integer", "format": "int32" }
        }
      },
      "UpdateTypeRequestBody": {
        "required": ["assetsIds"],
        "type": "object",
        "properties": {
          "assetsIds": {
            "type": "array",
            "items": { "type": "integer", "format": "int64" }
          },
          "assetTypeId": { "type": "integer", "format": "int64" }
        }
      },
      "UpdateGroupRequestBody": {
        "required": ["assetsIds"],
        "type": "object",
        "properties": {
          "assetsIds": {
            "type": "array",
            "items": { "type": "integer", "format": "int64" }
          },
          "assetGroupId": { "type": "integer", "format": "int64" }
        }
      },
      "UtmMenu": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "name": { "maxLength": 50, "minLength": 1, "type": "string" },
          "url": { "type": "string" },
          "parentId": { "type": "integer", "format": "int64" },
          "type": { "type": "integer", "format": "int32" },
          "dashboardId": { "type": "integer", "format": "int64" },
          "position": { "type": "integer", "format": "int64" },
          "menuActive": { "type": "boolean" },
          "menuAction": { "type": "boolean" },
          "menuIcon": { "type": "string" },
          "moduleNameShort": { "type": "string" },
          "authorities": { "type": "array", "items": { "type": "string" } },
          "parent": { "$ref": "#/components/schemas/UtmMenu" }
        }
      },
      "UtmMenuAuthority": {
        "required": ["authorityName", "menuId"],
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "menuId": { "type": "integer", "format": "int64" },
          "authorityName": { "type": "string" },
          "menu": { "$ref": "#/components/schemas/UtmMenu" }
        }
      },
      "UtmLogstashFilterGroup": {
        "required": ["groupName"],
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "groupName": { "maxLength": 150, "minLength": 0, "type": "string" },
          "groupDescription": { "type": "string" },
          "systemOwner": { "type": "boolean" }
        }
      },
      "UtmIntegration": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "moduleId": { "type": "integer", "format": "int64" },
          "integrationName": { "type": "string" },
          "integrationDescription": { "type": "string" },
          "url": { "type": "string" },
          "integrationIconPath": { "type": "string" },
          "module": { "$ref": "#/components/schemas/UtmServerModule" }
        }
      },
      "UtmIntegrationConf": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "integrationId": { "type": "integer", "format": "int64" },
          "confShort": { "type": "string" },
          "confLarge": { "type": "string" },
          "confDescription": { "type": "string" },
          "confValue": { "type": "string" },
          "confDatatype": { "type": "string" },
          "integration": { "$ref": "#/components/schemas/UtmIntegration" }
        }
      },
      "UtmIncident": {
        "required": [
          "incidentCreatedDate",
          "incidentDescription",
          "incidentName",
          "incidentSeverity",
          "incidentStatus"
        ],
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "incidentName": {
            "maxLength": 250,
            "minLength": 0,
            "type": "string"
          },
          "incidentDescription": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string"
          },
          "incidentStatus": {
            "type": "string",
            "enum": ["OPEN", "IN_REVIEW", "COMPLETED", "MERGED"]
          },
          "incidentAssignedTo": { "type": "string" },
          "incidentSeverity": { "type": "integer", "format": "int32" },
          "incidentCreatedDate": { "type": "string", "format": "date-time" },
          "incidentSolution": { "type": "string" }
        }
      },
      "UtmIncidentVariable": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "variableName": { "type": "string" },
          "variableValue": { "type": "string" },
          "variableDescription": { "type": "string" },
          "createdBy": { "type": "string" },
          "lastModifiedDate": { "type": "string", "format": "date-time" },
          "lastModifiedBy": { "type": "string" },
          "secret": { "type": "boolean" }
        }
      },
      "UtmIncidentAlert": {
        "required": [
          "alertId",
          "alertName",
          "alertSeverity",
          "alertStatus",
          "incidentId"
        ],
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "incidentId": { "type": "integer", "format": "int64" },
          "alertId": { "type": "string" },
          "alertName": { "type": "string" },
          "alertStatus": { "type": "integer", "format": "int32" },
          "alertSeverity": { "type": "integer", "format": "int32" }
        }
      },
      "UtmIncidentAction": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "actionCommand": { "type": "string" },
          "actionDescription": { "type": "string" },
          "actionParams": { "type": "string" },
          "actionType": { "type": "integer", "format": "int32" },
          "actionEditable": { "type": "boolean" },
          "createdDate": { "type": "string", "format": "date-time" },
          "modifiedDate": { "type": "string", "format": "date-time" },
          "createdUser": { "type": "string" },
          "modifiedUser": { "type": "string" }
        }
      },
      "UtmDataSourceConfigDTO": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "dataType": { "type": "string" },
          "dataTypeName": { "type": "string" },
          "systemOwner": { "type": "boolean" },
          "included": { "type": "boolean" }
        }
      },
      "UtmDashboard": {
        "required": ["createdDate", "description", "name", "userCreated"],
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "name": { "maxLength": 100, "minLength": 0, "type": "string" },
          "description": { "maxLength": 255, "minLength": 0, "type": "string" },
          "refreshTime": { "type": "integer", "format": "int64" },
          "createdDate": { "type": "string", "format": "date-time" },
          "modifiedDate": { "type": "string", "format": "date-time" },
          "userCreated": { "maxLength": 50, "minLength": 0, "type": "string" },
          "userModified": { "maxLength": 50, "minLength": 0, "type": "string" },
          "filters": { "type": "string" },
          "dashboardType": {
            "type": "string",
            "enum": ["CUSTOM", "COMPLIANCE", "REPORT"]
          },
          "systemOwner": { "type": "boolean" }
        }
      },
      "UtmDashboardVisualization": {
        "required": [
          "height",
          "idDashboard",
          "idVisualization",
          "left",
          "order",
          "top",
          "width"
        ],
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "idVisualization": { "type": "integer", "format": "int64" },
          "idDashboard": { "type": "integer", "format": "int64" },
          "order": { "type": "integer", "format": "int32" },
          "width": { "type": "number", "format": "float" },
          "height": { "type": "number", "format": "float" },
          "top": { "type": "number", "format": "float" },
          "left": { "type": "number", "format": "float" },
          "showTimeFilter": { "type": "boolean" },
          "defaultTimeRange": { "type": "string" },
          "gridInfo": { "type": "string" },
          "visualization": { "$ref": "#/components/schemas/UtmVisualization" },
          "dashboard": { "$ref": "#/components/schemas/UtmDashboard" }
        }
      },
      "UtmDashboardAuthority": {
        "required": ["authorityName", "idDashboard"],
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "idDashboard": { "type": "integer", "format": "int64" },
          "authorityName": { "maxLength": 50, "minLength": 0, "type": "string" }
        }
      },
      "UtmConfigurationParameter": {
        "required": ["confParamShort", "sectionId"],
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "sectionId": { "type": "integer", "format": "int64" },
          "confParamShort": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "confParamLarge": { "type": "string" },
          "confParamDescription": { "type": "string" },
          "confParamValue": { "type": "string" },
          "confParamRegexp": { "type": "string" },
          "confParamRequired": { "type": "boolean" },
          "confParamDatatype": { "type": "string" },
          "modificationTime": { "type": "string", "format": "date-time" },
          "modificationUser": { "type": "string" },
          "confParamOption": { "type": "string" },
          "section": { "$ref": "#/components/schemas/UtmConfigurationSection" }
        }
      },
      "UtmConfigurationSection": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "section": { "type": "string" },
          "description": { "type": "string" },
          "shortName": {
            "type": "string",
            "enum": ["SMS", "EMAIL", "TFA", "ALERTS", "DATE_SETTINGS"]
          }
        }
      },
      "UtmAlertTag": {
        "required": ["tagName"],
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "tagName": { "maxLength": 50, "minLength": 0, "type": "string" },
          "tagColor": { "maxLength": 15, "minLength": 0, "type": "string" },
          "systemOwner": { "type": "boolean" }
        }
      },
      "UtmAlertResponseRuleDTO": {
        "required": [
          "active",
          "agentPlatform",
          "command",
          "conditions",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "name": { "maxLength": 150, "minLength": 0, "type": "string" },
          "description": { "maxLength": 512, "minLength": 0, "type": "string" },
          "conditions": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/FilterType" }
          },
          "command": { "type": "string" },
          "active": { "type": "boolean" },
          "agentPlatform": { "type": "string" },
          "defaultAgent": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "excludedAgents": { "type": "array", "items": { "type": "string" } },
          "createdBy": { "type": "string", "readOnly": true },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "lastModifiedBy": { "type": "string", "readOnly": true },
          "lastModifiedDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "UtmAlertLog": {
        "required": ["alertId", "logAction", "logDate", "logUser"],
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "alertId": { "maxLength": 100, "minLength": 0, "type": "string" },
          "logUser": { "maxLength": 50, "minLength": 0, "type": "string" },
          "logDate": { "type": "string", "format": "date-time" },
          "logAction": { "maxLength": 50, "minLength": 0, "type": "string" },
          "logOldValue": { "type": "string" },
          "logNewValue": { "type": "string" },
          "logMessage": { "type": "string" }
        }
      },
      "UserDTO": {
        "required": ["login"],
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "login": {
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^[_.@A-Za-z0-9-]*$",
            "type": "string"
          },
          "firstName": { "maxLength": 50, "minLength": 0, "type": "string" },
          "lastName": { "maxLength": 50, "minLength": 0, "type": "string" },
          "email": { "maxLength": 254, "minLength": 5, "type": "string" },
          "imageUrl": { "maxLength": 256, "minLength": 0, "type": "string" },
          "activated": { "type": "boolean" },
          "langKey": { "maxLength": 6, "minLength": 2, "type": "string" },
          "createdBy": { "type": "string" },
          "createdDate": { "type": "string", "format": "date-time" },
          "lastModifiedBy": { "type": "string" },
          "lastModifiedDate": { "type": "string", "format": "date-time" },
          "authorities": {
            "uniqueItems": true,
            "type": "array",
            "items": { "type": "string" }
          },
          "tfaSecret": { "type": "string" }
        }
      },
      "UpdateConfigurationKeysBody": {
        "required": ["keys", "moduleId"],
        "type": "object",
        "properties": {
          "moduleId": { "type": "integer", "format": "int64" },
          "keys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UtmModuleGroupConfiguration"
            }
          }
        }
      },
      "InputConfiguration": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "pipelineId": { "type": "integer", "format": "int32" },
          "inputPrettyName": { "type": "string" },
          "inputPlugin": { "type": "string" },
          "inputWithSsl": { "type": "boolean" },
          "systemOwner": { "type": "boolean" },
          "configs": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/InputConfigurationKey" }
          }
        }
      },
      "InputConfigurationKey": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "inputId": { "type": "integer", "format": "int32" },
          "confKey": { "type": "string" },
          "confValue": { "type": "string" },
          "confType": { "type": "string" },
          "confRequired": { "type": "boolean" },
          "confValidationRegex": { "type": "string" },
          "systemOwner": { "type": "boolean" }
        }
      },
      "UtmGroupLogstashPipelineFilters": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "filterId": { "type": "integer", "format": "int32" },
          "pipelineId": { "type": "integer", "format": "int32" },
          "relation": { "maxLength": 50, "minLength": 0, "type": "string" }
        }
      },
      "UtmLogstashPipelineDTO": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "pipelineId": { "type": "string" },
          "pipelineName": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "parentPipeline": { "type": "integer", "format": "int32" },
          "pipelineStatus": { "type": "string" },
          "moduleName": { "type": "string" },
          "systemOwner": { "type": "boolean" },
          "pipelineDescription": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string"
          },
          "pipelineInternal": { "type": "boolean" }
        }
      },
      "UtmLogstashPipelineVM": {
        "type": "object",
        "properties": {
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UtmGroupLogstashPipelineFilters"
            }
          },
          "inputs": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/InputConfiguration" }
          },
          "pipeline": { "$ref": "#/components/schemas/UtmLogstashPipelineDTO" }
        }
      },
      "UtmLogstashInput": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "pipelineId": { "type": "integer", "format": "int32" },
          "inputPrettyName": {
            "maxLength": 250,
            "minLength": 0,
            "type": "string"
          },
          "inputPlugin": { "maxLength": 100, "minLength": 0, "type": "string" },
          "inputWithSsl": { "type": "boolean" },
          "systemOwner": { "type": "boolean" }
        }
      },
      "UtmLogstashFilter": {
        "required": ["logstashFilter"],
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "filterName": { "type": "string" },
          "logstashFilter": { "type": "string" },
          "filterGroupId": { "type": "integer", "format": "int64" },
          "group": { "$ref": "#/components/schemas/UtmLogstashFilterGroup" },
          "systemOwner": { "type": "boolean" },
          "moduleName": { "type": "string" },
          "filterVersion": { "type": "string" },
          "active": { "type": "boolean" }
        }
      },
      "DataColumn": {
        "type": "object",
        "properties": {
          "label": { "type": "string" },
          "field": { "type": "string" },
          "type": { "type": "string" },
          "visible": { "type": "boolean" },
          "customStyle": { "type": "string" }
        }
      },
      "LogAnalyzerQuery": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "name": { "maxLength": 100, "minLength": 0, "type": "string" },
          "description": { "maxLength": 255, "minLength": 0, "type": "string" },
          "owner": { "type": "string" },
          "creationDate": { "type": "string", "format": "date-time" },
          "modificationDate": { "type": "string", "format": "date-time" },
          "dataOrigin": { "type": "string" },
          "idPattern": { "type": "integer", "format": "int64" },
          "columnsType": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/DataColumn" }
          },
          "filtersType": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/FilterType" }
          },
          "pattern": { "$ref": "#/components/schemas/UtmIndexPattern" }
        }
      },
      "PolicySettings": {
        "required": ["deleteAfter", "snapshotActive"],
        "type": "object",
        "properties": {
          "snapshotActive": { "type": "boolean" },
          "deleteAfter": { "type": "string" }
        }
      },
      "FailedIndices": {
        "type": "object",
        "properties": {
          "indexName": { "type": "string" },
          "indexUuid": { "type": "string" },
          "reason": { "type": "string" }
        }
      },
      "UpdateManagedIndexPolicyResponse": {
        "type": "object",
        "properties": {
          "updatedIndices": { "type": "integer", "format": "int32" },
          "failures": { "type": "boolean" },
          "failedIndices": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/FailedIndices" }
          }
        }
      },
      "UtmIncidentActionCommand": {
        "required": ["actionId"],
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "actionId": { "type": "integer", "format": "int64" },
          "osPlatform": { "type": "string" },
          "command": { "type": "string" }
        }
      },
      "UtmImages": {
        "type": "object",
        "properties": {
          "shortName": {
            "type": "string",
            "enum": ["LOGIN", "HEADER", "REPORT", "REPORT_COVER"]
          },
          "tooltipText": { "type": "string" },
          "systemImg": { "type": "string" },
          "userImg": { "type": "string" }
        }
      },
      "UtmComplianceStandard": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "standardName": { "type": "string" },
          "standardDescription": { "type": "string" },
          "systemOwner": { "type": "boolean" }
        }
      },
      "UtmComplianceStandardSection": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "standardId": { "type": "integer", "format": "int64" },
          "standardSectionName": { "type": "string" },
          "standardSectionDescription": { "type": "string" },
          "standard": { "$ref": "#/components/schemas/UtmComplianceStandard" }
        }
      },
      "RequestParamFilter": {
        "type": "object",
        "properties": {
          "param": { "type": "string" },
          "required": { "type": "boolean" },
          "value": { "type": "string" }
        }
      },
      "UtmComplianceReportConfig": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "configSolution": { "type": "string" },
          "configRemediation": { "type": "string" },
          "configReportResourceUrl": { "type": "string" },
          "configReportRequestType": { "type": "string" },
          "configReportPageable": { "type": "boolean" },
          "configReportFilterByTime": { "type": "boolean" },
          "configReportDataOrigin": { "type": "string" },
          "configReportExportCsvUrl": { "type": "string" },
          "standardSectionId": { "type": "integer", "format": "int64" },
          "configReportEditable": { "type": "boolean" },
          "dashboardId": { "type": "integer", "format": "int64" },
          "configType": { "type": "string", "enum": ["CUSTOM", "TEMPLATE"] },
          "configUrl": { "type": "string" },
          "configReportNote": { "type": "string" },
          "configReportName": { "type": "string" },
          "configReportStatus": {
            "type": "string",
            "enum": ["COMPLAINT", "NON_COMPLAINT"]
          },
          "dashboard": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UtmDashboardVisualization"
            }
          },
          "section": {
            "$ref": "#/components/schemas/UtmComplianceStandardSection"
          },
          "associatedDashboard": {
            "$ref": "#/components/schemas/UtmDashboard"
          },
          "columns": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/DataColumn" }
          },
          "requestBodyFilters": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/FilterType" }
          },
          "requestParamFilters": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/RequestParamFilter" }
          }
        }
      },
      "IndexPatternWithFilterType": {
        "type": "object",
        "properties": {
          "indexPattern": { "type": "string" },
          "filterType": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/FilterType" }
          }
        }
      },
      "UtmComplianceReportSchedule": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "userId": { "type": "integer", "format": "int64" },
          "complianceId": { "type": "integer", "format": "int64" },
          "scheduleString": {
            "maxLength": 250,
            "minLength": 0,
            "type": "string"
          },
          "urlWithParams": { "type": "string" },
          "filterDef": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IndexPatternWithFilterType"
            }
          },
          "compliance": {
            "$ref": "#/components/schemas/UtmComplianceReportConfig"
          }
        }
      },
      "Authority": {
        "required": ["name", "nameShow"],
        "type": "object",
        "properties": {
          "name": { "maxLength": 50, "minLength": 0, "type": "string" },
          "nameShow": { "maxLength": 50, "minLength": 0, "type": "string" }
        }
      },
      "AlertTagRuleVM": {
        "required": ["conditions", "description", "name", "tags"],
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "conditions": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/FilterType" }
          },
          "tags": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/AlertTagVM" }
          },
          "active": { "type": "boolean" },
          "deleted": { "type": "boolean" },
          "createdBy": { "type": "string" },
          "createdDate": { "type": "string", "format": "date-time" },
          "lastModifiedBy": { "type": "string" },
          "lastModifiedDate": { "type": "string", "format": "date-time" }
        }
      },
      "AlertTagVM": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "tagName": { "type": "string" },
          "tagColor": { "type": "string" },
          "systemOwner": { "type": "boolean" }
        }
      },
      "AgentGroupVM": {
        "required": ["groupName"],
        "type": "object",
        "properties": {
          "groupName": { "type": "string" },
          "groupDescription": { "type": "string" },
          "id": { "type": "integer", "format": "int64" }
        }
      },
      "AgentGroupDTO": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int32" },
          "groupName": { "type": "string" },
          "groupDescription": { "type": "string" }
        }
      },
      "CreateBatchVisualizationBody": {
        "type": "object",
        "properties": {
          "visualizations": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UtmVisualization" }
          },
          "override": { "type": "boolean" }
        }
      },
      "NetworkScanDTO": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "assetIp": { "type": "string" },
          "assetAddresses": { "type": "string" },
          "assetMac": { "type": "string" },
          "assetOs": { "type": "string" },
          "assetOsArch": { "type": "string" },
          "assetOsMajorVersion": { "type": "string" },
          "assetOsMinorVersion": { "type": "string" },
          "assetOsPlatform": { "type": "string" },
          "assetOsVersion": { "type": "string" },
          "assetName": { "type": "string" },
          "assetAliases": { "type": "string" },
          "assetAlias": { "type": "string" },
          "serverName": { "type": "string" },
          "assetAlive": { "type": "boolean" },
          "registeredMode": {
            "type": "string",
            "enum": ["CUSTOM", "DISCOVERED", "DYNAMIC"]
          },
          "assetStatus": {
            "type": "string",
            "enum": ["NEW", "CHECK", "MISSING"]
          },
          "assetSeverityMetric": { "type": "number", "format": "float" },
          "assetType": { "$ref": "#/components/schemas/UtmAssetTypes" },
          "assetNotes": { "type": "string" },
          "discoveredAt": { "type": "string", "format": "date-time" },
          "modifiedAt": { "type": "string", "format": "date-time" },
          "metrics": {
            "type": "object",
            "additionalProperties": { "type": "integer", "format": "int64" }
          },
          "ports": {
            "uniqueItems": true,
            "type": "array",
            "items": { "$ref": "#/components/schemas/Port" }
          },
          "group": { "$ref": "#/components/schemas/UtmAssetGroup" },
          "dataInputList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UtmDataInputStatus" }
          },
          "agent": { "type": "boolean" }
        }
      },
      "Port": {
        "type": "object",
        "properties": {
          "port": { "type": "integer", "format": "int32" },
          "tcp": { "type": "string" },
          "udp": { "type": "string" }
        }
      },
      "NewIncidentDTO": {
        "required": ["alertList", "incidentName"],
        "type": "object",
        "properties": {
          "incidentName": { "pattern": "^[^\"]*$", "type": "string" },
          "incidentDescription": { "type": "string" },
          "incidentAssignedTo": { "type": "string" },
          "alertList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/RelatedIncidentAlertsDTO" }
          }
        }
      },
      "RelatedIncidentAlertsDTO": {
        "required": ["alertId", "alertName", "alertSeverity", "alertStatus"],
        "type": "object",
        "properties": {
          "alertId": { "type": "string" },
          "alertName": { "type": "string" },
          "alertStatus": { "type": "integer", "format": "int32" },
          "alertSeverity": { "type": "integer", "format": "int32" }
        }
      },
      "AddToIncidentDTO": {
        "required": ["alertList", "incidentId"],
        "type": "object",
        "properties": {
          "incidentId": { "type": "integer", "format": "int64" },
          "alertList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/RelatedIncidentAlertsDTO" }
          }
        }
      },
      "NewIncidentNoteDTO": {
        "required": ["incidentId", "noteText"],
        "type": "object",
        "properties": {
          "incidentId": { "type": "integer", "format": "int64" },
          "noteText": { "type": "string" }
        }
      },
      "UtmIncidentNote": {
        "required": ["incidentId", "noteSendBy", "noteSendDate", "noteText"],
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "incidentId": { "type": "integer", "format": "int64" },
          "noteText": { "maxLength": 1000, "minLength": 0, "type": "string" },
          "noteSendDate": { "type": "string", "format": "date-time" },
          "noteSendBy": { "type": "string" }
        }
      },
      "UtmIncidentJob": {
        "required": ["originId", "originType"],
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "actionId": { "type": "integer", "format": "int64" },
          "params": { "type": "string" },
          "agent": { "type": "string" },
          "status": { "type": "integer", "format": "int32" },
          "jobResult": { "type": "string" },
          "originId": { "type": "integer", "format": "int32" },
          "originType": { "type": "string" },
          "createdDate": { "type": "string", "format": "date-time" },
          "modifiedDate": { "type": "string", "format": "date-time" },
          "createdUser": { "type": "string" },
          "modifiedUser": { "type": "string" },
          "action": { "$ref": "#/components/schemas/UtmIncidentAction" },
          "statusLabel": {
            "type": "string",
            "enum": ["PENDING", "RUNNING", "EXECUTED", "ERROR"]
          }
        }
      },
      "AlertIncidentStatusChangeDTO": {
        "required": ["alertIds", "incidentId", "status"],
        "type": "object",
        "properties": {
          "incidentId": { "type": "integer", "format": "int64" },
          "alertIds": { "type": "array", "items": { "type": "string" } },
          "status": { "type": "integer", "format": "int32" }
        }
      },
      "GettingStartedInit": {
        "required": ["inSaas"],
        "type": "object",
        "properties": { "inSaas": { "type": "boolean" } }
      },
      "ImportDashboardsBody": {
        "required": ["dashboards", "override"],
        "type": "object",
        "properties": {
          "dashboards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UtmDashboardVisualization"
            }
          },
          "override": { "type": "boolean" }
        }
      },
      "ModuleGroupVM": {
        "required": ["moduleId", "name"],
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "description": { "type": "string" },
          "moduleId": { "type": "integer", "format": "int64" },
          "collector": { "type": "string" }
        }
      },
      "UpdateAlertTagsRequestBody": {
        "required": ["alertIds", "createRule"],
        "type": "object",
        "properties": {
          "alertIds": { "type": "array", "items": { "type": "string" } },
          "tags": { "type": "array", "items": { "type": "string" } },
          "createRule": { "type": "boolean" }
        }
      },
      "UpdateAlertStatusRequestBody": {
        "required": ["alertIds", "status"],
        "type": "object",
        "properties": {
          "alertIds": { "type": "array", "items": { "type": "string" } },
          "statusObservation": { "type": "string" },
          "status": { "type": "integer", "format": "int32" }
        }
      },
      "ConvertToIncidentRequestBody": {
        "required": [
          "eventIds",
          "incidentId",
          "incidentName",
          "incidentSource"
        ],
        "type": "object",
        "properties": {
          "eventIds": { "type": "array", "items": { "type": "string" } },
          "incidentName": { "pattern": "^[^\"]*$", "type": "string" },
          "incidentId": { "type": "integer", "format": "int32" },
          "incidentSource": { "type": "string" }
        }
      },
      "User": {
        "required": ["activated", "login"],
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "login": {
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^[_.@A-Za-z0-9-]*$",
            "type": "string"
          },
          "firstName": { "maxLength": 50, "minLength": 0, "type": "string" },
          "lastName": { "maxLength": 50, "minLength": 0, "type": "string" },
          "email": { "maxLength": 254, "minLength": 5, "type": "string" },
          "activated": { "type": "boolean" },
          "langKey": { "maxLength": 6, "minLength": 2, "type": "string" },
          "imageUrl": { "maxLength": 256, "minLength": 0, "type": "string" },
          "resetDate": { "type": "string", "format": "date-time" },
          "tfaSecret": { "type": "string" },
          "fsManager": { "type": "boolean" },
          "defaultPassword": { "type": "boolean" }
        }
      },
      "MenuType": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "name": { "type": "string" },
          "url": { "type": "string" },
          "parentId": { "type": "integer", "format": "int64" },
          "type": { "type": "integer", "format": "int32" },
          "dashboardId": { "type": "integer", "format": "int64" },
          "position": { "type": "integer", "format": "int64" },
          "menuActive": { "type": "boolean" },
          "menuAction": { "type": "boolean" },
          "menuIcon": { "type": "string" },
          "modulesNameShort": { "type": "string" },
          "authorities": { "type": "array", "items": { "type": "string" } },
          "childrens": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/MenuType" }
          },
          "actions": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/MenuType" }
          }
        }
      },
      "PipelineErrors": {
        "type": "object",
        "properties": {
          "validationErrors": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Validation" }
          }
        }
      },
      "Validation": {
        "type": "object",
        "properties": {
          "entity": { "type": "string" },
          "field": { "type": "string" },
          "msg": { "type": "string" }
        }
      },
      "Pageable": {
        "type": "object",
        "properties": {
          "page": { "minimum": 0, "type": "integer", "format": "int32" },
          "size": { "minimum": 1, "type": "integer", "format": "int32" },
          "sort": { "type": "array", "items": { "type": "string" } }
        }
      },
      "TopValues": {
        "type": "object",
        "properties": {
          "value": { "type": "string" },
          "count": { "type": "integer", "format": "int64" },
          "percent": { "type": "number", "format": "float" }
        }
      },
      "TopValuesResult": {
        "type": "object",
        "properties": {
          "total": { "type": "integer", "format": "int32" },
          "top": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/TopValues" }
          }
        }
      },
      "ChartViewRequest": {
        "type": "object",
        "properties": {
          "indexPattern": { "type": "string" },
          "filters": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/FilterType" }
          },
          "interval": {
            "type": "string",
            "enum": [
              "Second",
              "Minute",
              "Hour",
              "Day",
              "Week",
              "Month",
              "Quarter",
              "Year"
            ]
          },
          "top": { "type": "integer", "format": "int32" },
          "field": { "type": "string" },
          "fieldDataType": { "type": "string" }
        }
      },
      "ChartView": {
        "type": "object",
        "properties": {
          "categories": { "type": "array", "items": { "type": "string" } },
          "values": {
            "type": "array",
            "items": { "type": "integer", "format": "int64" }
          }
        }
      },
      "CsvExportingParams": {
        "required": ["columns", "indexPattern", "top"],
        "type": "object",
        "properties": {
          "columns": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/DataColumn" }
          },
          "filters": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/FilterType" }
          },
          "top": { "type": "integer", "format": "int32" },
          "indexPattern": { "type": "string" }
        }
      },
      "PropertyValuesWithCountRequest": {
        "required": ["index"],
        "type": "object",
        "properties": {
          "filters": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/FilterType" }
          },
          "field": { "type": "string" },
          "top": { "type": "integer", "format": "int32" },
          "index": { "type": "string" },
          "orderByCount": { "type": "boolean" },
          "sortAsc": { "type": "boolean" }
        }
      },
      "GenericSearchBody": {
        "required": ["index", "top"],
        "type": "object",
        "properties": {
          "index": { "type": "string" },
          "filters": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/FilterType" }
          },
          "top": { "type": "integer", "format": "int32" }
        }
      },
      "ImportReportsBody": {
        "required": ["override", "reports"],
        "type": "object",
        "properties": {
          "reports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UtmComplianceReportConfig"
            }
          },
          "override": { "type": "boolean" }
        }
      },
      "CollectorDTO": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int32" },
          "status": {
            "type": "string",
            "enum": ["ONLINE", "OFFLINE", "UNKNOWN"]
          },
          "collectorKey": { "type": "string" },
          "ip": { "type": "string" },
          "hostname": { "type": "string" },
          "version": { "type": "string" },
          "module": { "type": "string", "enum": ["AS_400"] },
          "lastSeen": { "type": "string" },
          "groupId": { "type": "string" },
          "group": { "$ref": "#/components/schemas/UtmAssetGroup" },
          "active": { "type": "boolean" }
        }
      },
      "LoginVM": {
        "required": ["password", "username"],
        "type": "object",
        "properties": {
          "username": { "maxLength": 50, "minLength": 1, "type": "string" },
          "password": { "maxLength": 100, "minLength": 4, "type": "string" },
          "rememberMe": { "type": "boolean" }
        }
      },
      "JWTToken": {
        "type": "object",
        "properties": {
          "authenticated": { "type": "boolean" },
          "id_token": { "type": "string" }
        }
      },
      "KeyAndPasswordVM": {
        "type": "object",
        "properties": {
          "key": { "type": "string" },
          "newPassword": { "type": "string" }
        }
      },
      "PasswordChangeDTO": {
        "type": "object",
        "properties": {
          "currentPassword": { "type": "string" },
          "newPassword": { "type": "string" }
        }
      },
      "AuditEvent": {
        "type": "object",
        "properties": {
          "timestamp": { "type": "string", "format": "date-time" },
          "principal": { "type": "string" },
          "type": { "type": "string" },
          "data": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          }
        }
      },
      "InstantFilter": {
        "type": "object",
        "properties": {
          "equals": { "type": "string", "format": "date-time" },
          "notEquals": { "type": "string", "format": "date-time" },
          "specified": { "type": "boolean" },
          "in": {
            "type": "array",
            "items": { "type": "string", "format": "date-time" }
          },
          "notIn": {
            "type": "array",
            "items": { "type": "string", "format": "date-time" }
          },
          "greaterThan": { "type": "string", "format": "date-time" },
          "lessThan": { "type": "string", "format": "date-time" },
          "greaterThanOrEqual": { "type": "string", "format": "date-time" },
          "lessThanOrEqual": { "type": "string", "format": "date-time" }
        }
      },
      "LongFilter": {
        "type": "object",
        "properties": {
          "equals": { "type": "integer", "format": "int64" },
          "notEquals": { "type": "integer", "format": "int64" },
          "specified": { "type": "boolean" },
          "in": {
            "type": "array",
            "items": { "type": "integer", "format": "int64" }
          },
          "notIn": {
            "type": "array",
            "items": { "type": "integer", "format": "int64" }
          },
          "greaterThan": { "type": "integer", "format": "int64" },
          "lessThan": { "type": "integer", "format": "int64" },
          "greaterThanOrEqual": { "type": "integer", "format": "int64" },
          "lessThanOrEqual": { "type": "integer", "format": "int64" }
        }
      },
      "StringFilter": {
        "type": "object",
        "properties": {
          "equals": { "type": "string" },
          "notEquals": { "type": "string" },
          "specified": { "type": "boolean" },
          "in": { "type": "array", "items": { "type": "string" } },
          "notIn": { "type": "array", "items": { "type": "string" } },
          "contains": { "type": "string" },
          "doesNotContain": { "type": "string" }
        }
      },
      "UtmVisualizationCriteria": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/LongFilter" },
          "name": { "$ref": "#/components/schemas/StringFilter" },
          "createdDate": { "$ref": "#/components/schemas/InstantFilter" },
          "modifiedDate": { "$ref": "#/components/schemas/InstantFilter" },
          "userCreated": { "$ref": "#/components/schemas/StringFilter" },
          "userModified": { "$ref": "#/components/schemas/StringFilter" },
          "chartType": { "$ref": "#/components/schemas/StringFilter" },
          "idPattern": { "$ref": "#/components/schemas/LongFilter" }
        }
      },
      "UtmServerCriteria": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/LongFilter" },
          "serverName": { "$ref": "#/components/schemas/StringFilter" },
          "serverType": { "$ref": "#/components/schemas/StringFilter" }
        }
      },
      "BooleanFilter": {
        "type": "object",
        "properties": {
          "equals": { "type": "boolean" },
          "notEquals": { "type": "boolean" },
          "specified": { "type": "boolean" },
          "in": { "type": "array", "items": { "type": "boolean" } },
          "notIn": { "type": "array", "items": { "type": "boolean" } }
        }
      },
      "UtmServerModuleCriteria": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/LongFilter" },
          "serverId": { "$ref": "#/components/schemas/LongFilter" },
          "moduleName": { "$ref": "#/components/schemas/StringFilter" },
          "needsRestarts": { "$ref": "#/components/schemas/BooleanFilter" },
          "prettyName": { "$ref": "#/components/schemas/StringFilter" }
        }
      },
      "ReportTypeFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string",
            "enum": ["CUSTOM_PDF", "CUSTOM_LIST", "TEMPLATE"]
          },
          "notEquals": {
            "type": "string",
            "enum": ["CUSTOM_PDF", "CUSTOM_LIST", "TEMPLATE"]
          },
          "specified": { "type": "boolean" },
          "in": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["CUSTOM_PDF", "CUSTOM_LIST", "TEMPLATE"]
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["CUSTOM_PDF", "CUSTOM_LIST", "TEMPLATE"]
            }
          }
        }
      },
      "UtmReportCriteria": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/LongFilter" },
          "repName": { "$ref": "#/components/schemas/StringFilter" },
          "repDescription": { "$ref": "#/components/schemas/StringFilter" },
          "reportSectionId": { "$ref": "#/components/schemas/LongFilter" },
          "dashboardId": { "$ref": "#/components/schemas/LongFilter" },
          "creationUser": { "$ref": "#/components/schemas/StringFilter" },
          "creationDate": { "$ref": "#/components/schemas/InstantFilter" },
          "modificationUser": { "$ref": "#/components/schemas/StringFilter" },
          "modificationDate": { "$ref": "#/components/schemas/InstantFilter" },
          "repType": { "$ref": "#/components/schemas/ReportTypeFilter" },
          "repModule": { "$ref": "#/components/schemas/StringFilter" },
          "repShortName": { "$ref": "#/components/schemas/StringFilter" },
          "repHttpMethod": { "$ref": "#/components/schemas/StringFilter" }
        }
      },
      "UtmReportSectionCriteria": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/LongFilter" },
          "repSecName": { "$ref": "#/components/schemas/StringFilter" },
          "repSecDescription": { "$ref": "#/components/schemas/StringFilter" },
          "creationUser": { "$ref": "#/components/schemas/StringFilter" },
          "creationDate": { "$ref": "#/components/schemas/InstantFilter" },
          "modificationUser": { "$ref": "#/components/schemas/StringFilter" },
          "modificationDate": { "$ref": "#/components/schemas/InstantFilter" },
          "repSecSystem": { "$ref": "#/components/schemas/BooleanFilter" }
        }
      },
      "IntegerFilter": {
        "type": "object",
        "properties": {
          "equals": { "type": "integer", "format": "int32" },
          "notEquals": { "type": "integer", "format": "int32" },
          "specified": { "type": "boolean" },
          "in": {
            "type": "array",
            "items": { "type": "integer", "format": "int32" }
          },
          "notIn": {
            "type": "array",
            "items": { "type": "integer", "format": "int32" }
          },
          "greaterThan": { "type": "integer", "format": "int32" },
          "lessThan": { "type": "integer", "format": "int32" },
          "greaterThanOrEqual": { "type": "integer", "format": "int32" },
          "lessThanOrEqual": { "type": "integer", "format": "int32" }
        }
      },
      "UtmPortsCriteria": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/LongFilter" },
          "scanId": { "$ref": "#/components/schemas/LongFilter" },
          "port": { "$ref": "#/components/schemas/IntegerFilter" },
          "tcp": { "$ref": "#/components/schemas/StringFilter" },
          "udp": { "$ref": "#/components/schemas/StringFilter" }
        }
      },
      "AssetStatusFilter": {
        "type": "object",
        "properties": {
          "equals": { "type": "string", "enum": ["NEW", "CHECK", "MISSING"] },
          "notEquals": {
            "type": "string",
            "enum": ["NEW", "CHECK", "MISSING"]
          },
          "specified": { "type": "boolean" },
          "in": {
            "type": "array",
            "items": { "type": "string", "enum": ["NEW", "CHECK", "MISSING"] }
          },
          "notIn": {
            "type": "array",
            "items": { "type": "string", "enum": ["NEW", "CHECK", "MISSING"] }
          }
        }
      },
      "UtmNetworkScanCriteria": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/LongFilter" },
          "ip": { "$ref": "#/components/schemas/StringFilter" },
          "mac": { "$ref": "#/components/schemas/StringFilter" },
          "os": { "$ref": "#/components/schemas/StringFilter" },
          "name": { "$ref": "#/components/schemas/StringFilter" },
          "alive": { "$ref": "#/components/schemas/BooleanFilter" },
          "status": { "$ref": "#/components/schemas/AssetStatusFilter" },
          "discoveredAt": { "$ref": "#/components/schemas/InstantFilter" },
          "modifiedAt": { "$ref": "#/components/schemas/InstantFilter" }
        }
      },
      "NetworkScanFilter": {
        "type": "object",
        "properties": {
          "assetIpMacName": { "type": "string" },
          "os": { "type": "array", "items": { "type": "string" } },
          "alive": { "type": "array", "items": { "type": "boolean" } },
          "status": {
            "type": "array",
            "items": { "type": "string", "enum": ["NEW", "CHECK", "MISSING"] }
          },
          "type": { "type": "array", "items": { "type": "string" } },
          "alias": { "type": "array", "items": { "type": "string" } },
          "probe": { "type": "array", "items": { "type": "string" } },
          "openPorts": {
            "type": "array",
            "items": { "type": "integer", "format": "int32" }
          },
          "groups": { "type": "array", "items": { "type": "string" } },
          "discoveredInitDate": { "type": "string", "format": "date-time" },
          "discoveredEndDate": { "type": "string", "format": "date-time" },
          "registeredMode": {
            "type": "string",
            "enum": ["CUSTOM", "DISCOVERED", "DYNAMIC"]
          },
          "agent": { "type": "array", "items": { "type": "boolean" } },
          "osPlatform": { "type": "array", "items": { "type": "string" } }
        }
      },
      "ModulesNameShortFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string",
            "enum": [
              "FILE_INTEGRITY",
              "NETFLOW",
              "WINDOWS_AGENT",
              "SYSLOG",
              "LINUX_LOGS",
              "VMWARE",
              "AWS_TRAFFIC_MIRROR",
              "AWS_IAM_USER",
              "AWS_CLOUDTRAIL",
              "AIX",
              "AWS_SQL_SERVER",
              "AWS_POSTGRESQL",
              "AWS_BEANSTALK",
              "AWS_FARGATE",
              "AWS_LAMBDA",
              "AD_AUDIT",
              "SOPHOS",
              "AZURE",
              "O365",
              "IIS",
              "GCP",
              "JSON",
              "MACOS_AGENT",
              "LINUX_AGENT",
              "APACHE",
              "APACHE2",
              "AUDITD",
              "ELASTICSEARCH",
              "HAPROXY",
              "KAFKA",
              "KIBANA",
              "LOGSTASH",
              "MONGODB",
              "MYSQL",
              "NATS",
              "NGINX",
              "OSQUERY",
              "POSTGRESQL",
              "REDIS",
              "TRAEFIK",
              "CISCO",
              "MERAKI",
              "ESET",
              "KASPERSKY",
              "SENTINEL_ONE",
              "FORTIGATE",
              "FORTIWEB",
              "SOPHOS_XG",
              "FIRE_POWER",
              "UFW",
              "MACOS",
              "MIKROTIK",
              "PALO_ALTO",
              "CISCO_SWITCH",
              "SONIC_WALL",
              "DECEPTIVE_BYTES",
              "GITHUB",
              "AS_400",
              "SALESFORCE",
              "BITDEFENDER",
              "SOC_AI",
              "PFSENSE"
            ]
          },
          "notEquals": {
            "type": "string",
            "enum": [
              "FILE_INTEGRITY",
              "NETFLOW",
              "WINDOWS_AGENT",
              "SYSLOG",
              "LINUX_LOGS",
              "VMWARE",
              "AWS_TRAFFIC_MIRROR",
              "AWS_IAM_USER",
              "AWS_CLOUDTRAIL",
              "AIX",
              "AWS_SQL_SERVER",
              "AWS_POSTGRESQL",
              "AWS_BEANSTALK",
              "AWS_FARGATE",
              "AWS_LAMBDA",
              "AD_AUDIT",
              "SOPHOS",
              "AZURE",
              "O365",
              "IIS",
              "GCP",
              "JSON",
              "MACOS_AGENT",
              "LINUX_AGENT",
              "APACHE",
              "APACHE2",
              "AUDITD",
              "ELASTICSEARCH",
              "HAPROXY",
              "KAFKA",
              "KIBANA",
              "LOGSTASH",
              "MONGODB",
              "MYSQL",
              "NATS",
              "NGINX",
              "OSQUERY",
              "POSTGRESQL",
              "REDIS",
              "TRAEFIK",
              "CISCO",
              "MERAKI",
              "ESET",
              "KASPERSKY",
              "SENTINEL_ONE",
              "FORTIGATE",
              "FORTIWEB",
              "SOPHOS_XG",
              "FIRE_POWER",
              "UFW",
              "MACOS",
              "MIKROTIK",
              "PALO_ALTO",
              "CISCO_SWITCH",
              "SONIC_WALL",
              "DECEPTIVE_BYTES",
              "GITHUB",
              "AS_400",
              "SALESFORCE",
              "BITDEFENDER",
              "SOC_AI",
              "PFSENSE"
            ]
          },
          "specified": { "type": "boolean" },
          "in": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "FILE_INTEGRITY",
                "NETFLOW",
                "WINDOWS_AGENT",
                "SYSLOG",
                "LINUX_LOGS",
                "VMWARE",
                "AWS_TRAFFIC_MIRROR",
                "AWS_IAM_USER",
                "AWS_CLOUDTRAIL",
                "AIX",
                "AWS_SQL_SERVER",
                "AWS_POSTGRESQL",
                "AWS_BEANSTALK",
                "AWS_FARGATE",
                "AWS_LAMBDA",
                "AD_AUDIT",
                "SOPHOS",
                "AZURE",
                "O365",
                "IIS",
                "GCP",
                "JSON",
                "MACOS_AGENT",
                "LINUX_AGENT",
                "APACHE",
                "APACHE2",
                "AUDITD",
                "ELASTICSEARCH",
                "HAPROXY",
                "KAFKA",
                "KIBANA",
                "LOGSTASH",
                "MONGODB",
                "MYSQL",
                "NATS",
                "NGINX",
                "OSQUERY",
                "POSTGRESQL",
                "REDIS",
                "TRAEFIK",
                "CISCO",
                "MERAKI",
                "ESET",
                "KASPERSKY",
                "SENTINEL_ONE",
                "FORTIGATE",
                "FORTIWEB",
                "SOPHOS_XG",
                "FIRE_POWER",
                "UFW",
                "MACOS",
                "MIKROTIK",
                "PALO_ALTO",
                "CISCO_SWITCH",
                "SONIC_WALL",
                "DECEPTIVE_BYTES",
                "GITHUB",
                "AS_400",
                "SALESFORCE",
                "BITDEFENDER",
                "SOC_AI",
                "PFSENSE"
              ]
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "FILE_INTEGRITY",
                "NETFLOW",
                "WINDOWS_AGENT",
                "SYSLOG",
                "LINUX_LOGS",
                "VMWARE",
                "AWS_TRAFFIC_MIRROR",
                "AWS_IAM_USER",
                "AWS_CLOUDTRAIL",
                "AIX",
                "AWS_SQL_SERVER",
                "AWS_POSTGRESQL",
                "AWS_BEANSTALK",
                "AWS_FARGATE",
                "AWS_LAMBDA",
                "AD_AUDIT",
                "SOPHOS",
                "AZURE",
                "O365",
                "IIS",
                "GCP",
                "JSON",
                "MACOS_AGENT",
                "LINUX_AGENT",
                "APACHE",
                "APACHE2",
                "AUDITD",
                "ELASTICSEARCH",
                "HAPROXY",
                "KAFKA",
                "KIBANA",
                "LOGSTASH",
                "MONGODB",
                "MYSQL",
                "NATS",
                "NGINX",
                "OSQUERY",
                "POSTGRESQL",
                "REDIS",
                "TRAEFIK",
                "CISCO",
                "MERAKI",
                "ESET",
                "KASPERSKY",
                "SENTINEL_ONE",
                "FORTIGATE",
                "FORTIWEB",
                "SOPHOS_XG",
                "FIRE_POWER",
                "UFW",
                "MACOS",
                "MIKROTIK",
                "PALO_ALTO",
                "CISCO_SWITCH",
                "SONIC_WALL",
                "DECEPTIVE_BYTES",
                "GITHUB",
                "AS_400",
                "SALESFORCE",
                "BITDEFENDER",
                "SOC_AI",
                "PFSENSE"
              ]
            }
          }
        }
      },
      "UtmModuleCriteria": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/LongFilter" },
          "serverId": { "$ref": "#/components/schemas/LongFilter" },
          "moduleName": {
            "$ref": "#/components/schemas/ModulesNameShortFilter"
          },
          "moduleActive": { "$ref": "#/components/schemas/BooleanFilter" },
          "moduleCategory": { "$ref": "#/components/schemas/StringFilter" },
          "needsRestart": { "$ref": "#/components/schemas/BooleanFilter" },
          "liteVersion": { "$ref": "#/components/schemas/BooleanFilter" },
          "isActivatable": { "$ref": "#/components/schemas/BooleanFilter" },
          "prettyName": { "$ref": "#/components/schemas/StringFilter" }
        }
      },
      "CheckRequirementsResponse": {
        "type": "object",
        "properties": {
          "status": { "type": "string", "enum": ["OK", "WARNING", "FAIL"] },
          "checks": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ModuleRequirement" }
          }
        }
      },
      "ModuleRequirement": {
        "type": "object",
        "properties": {
          "checkName": { "type": "string" },
          "checkStatus": {
            "type": "string",
            "enum": ["OK", "WARNING", "FAIL"]
          },
          "failMessage": { "type": "string" }
        }
      },
      "UtmLogstashFilterGroupCriteria": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/LongFilter" },
          "groupName": { "$ref": "#/components/schemas/StringFilter" },
          "groupDescription": { "$ref": "#/components/schemas/StringFilter" }
        }
      },
      "UtmIntegrationCriteria": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/LongFilter" },
          "moduleId": { "$ref": "#/components/schemas/LongFilter" },
          "integrationName": { "$ref": "#/components/schemas/StringFilter" },
          "integrationDescription": {
            "$ref": "#/components/schemas/StringFilter"
          },
          "url": { "$ref": "#/components/schemas/StringFilter" }
        }
      },
      "UtmIntegrationConfCriteria": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/LongFilter" },
          "integrationId": { "$ref": "#/components/schemas/LongFilter" },
          "confShort": { "$ref": "#/components/schemas/StringFilter" },
          "confLarge": { "$ref": "#/components/schemas/StringFilter" },
          "confDescription": { "$ref": "#/components/schemas/StringFilter" },
          "confValue": { "$ref": "#/components/schemas/StringFilter" },
          "confDatatype": { "$ref": "#/components/schemas/StringFilter" }
        }
      },
      "UtmIndexPatternCriteria": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/LongFilter" },
          "pattern": { "$ref": "#/components/schemas/StringFilter" },
          "patternModule": { "$ref": "#/components/schemas/StringFilter" },
          "patternSystem": { "$ref": "#/components/schemas/BooleanFilter" },
          "isActive": { "$ref": "#/components/schemas/BooleanFilter" }
        }
      },
      "IndexPropertyType": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "type": { "type": "string" }
        }
      },
      "UtmIndexPatternField": {
        "type": "object",
        "properties": {
          "indexPattern": { "type": "string" },
          "fields": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/IndexPropertyType" }
          }
        }
      },
      "IncidentStatusEnumFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string",
            "enum": ["OPEN", "IN_REVIEW", "COMPLETED", "MERGED"]
          },
          "notEquals": {
            "type": "string",
            "enum": ["OPEN", "IN_REVIEW", "COMPLETED", "MERGED"]
          },
          "specified": { "type": "boolean" },
          "in": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["OPEN", "IN_REVIEW", "COMPLETED", "MERGED"]
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["OPEN", "IN_REVIEW", "COMPLETED", "MERGED"]
            }
          }
        }
      },
      "UtmIncidentCriteria": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/LongFilter" },
          "incidentName": { "$ref": "#/components/schemas/StringFilter" },
          "incidentDescription": {
            "$ref": "#/components/schemas/StringFilter"
          },
          "incidentStatus": {
            "$ref": "#/components/schemas/IncidentStatusEnumFilter"
          },
          "incidentAssignedTo": { "$ref": "#/components/schemas/StringFilter" },
          "incidentCreatedDate": {
            "$ref": "#/components/schemas/InstantFilter"
          },
          "incidentSeverity": { "$ref": "#/components/schemas/IntegerFilter" }
        }
      },
      "IncidentUserAssignedDTO": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "login": { "type": "string" }
        }
      },
      "UtmIncidentVariableCriteria": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/LongFilter" },
          "variableName": { "$ref": "#/components/schemas/StringFilter" }
        }
      },
      "UtmIncidentNoteCriteria": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/LongFilter" },
          "incidentId": { "$ref": "#/components/schemas/LongFilter" },
          "noteText": { "$ref": "#/components/schemas/StringFilter" },
          "noteSendDate": { "$ref": "#/components/schemas/InstantFilter" },
          "noteSendBy": { "$ref": "#/components/schemas/StringFilter" }
        }
      },
      "UtmIncidentJobCriteria": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/LongFilter" },
          "actionId": { "$ref": "#/components/schemas/LongFilter" },
          "params": { "$ref": "#/components/schemas/StringFilter" },
          "agent": { "$ref": "#/components/schemas/StringFilter" },
          "status": { "$ref": "#/components/schemas/IntegerFilter" },
          "jobResult": { "$ref": "#/components/schemas/StringFilter" },
          "originId": { "$ref": "#/components/schemas/IntegerFilter" },
          "originType": { "$ref": "#/components/schemas/StringFilter" }
        }
      },
      "IncidentHistoryActionFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string",
            "enum": [
              "INCIDENT_CREATED",
              "INCIDENT_MERGED",
              "INCIDENT_COMPLETED",
              "INCIDENT_ALERT_ADD",
              "INCIDENT_ALERT_DELETED",
              "INCIDENT_ALERT_STATUS_CHANGED",
              "INCIDENT_ALERT_MOVED",
              "INCIDENT_ASSIGNED_TO",
              "INCIDENT_ASSIGNED_CHANGE",
              "INCIDENT_STATUS_CHANGE",
              "INCIDENT_NOTE_ADD",
              "INCIDENT_NOTE_CHANGE",
              "INCIDENT_COMMAND_EXECUTED"
            ]
          },
          "notEquals": {
            "type": "string",
            "enum": [
              "INCIDENT_CREATED",
              "INCIDENT_MERGED",
              "INCIDENT_COMPLETED",
              "INCIDENT_ALERT_ADD",
              "INCIDENT_ALERT_DELETED",
              "INCIDENT_ALERT_STATUS_CHANGED",
              "INCIDENT_ALERT_MOVED",
              "INCIDENT_ASSIGNED_TO",
              "INCIDENT_ASSIGNED_CHANGE",
              "INCIDENT_STATUS_CHANGE",
              "INCIDENT_NOTE_ADD",
              "INCIDENT_NOTE_CHANGE",
              "INCIDENT_COMMAND_EXECUTED"
            ]
          },
          "specified": { "type": "boolean" },
          "in": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "INCIDENT_CREATED",
                "INCIDENT_MERGED",
                "INCIDENT_COMPLETED",
                "INCIDENT_ALERT_ADD",
                "INCIDENT_ALERT_DELETED",
                "INCIDENT_ALERT_STATUS_CHANGED",
                "INCIDENT_ALERT_MOVED",
                "INCIDENT_ASSIGNED_TO",
                "INCIDENT_ASSIGNED_CHANGE",
                "INCIDENT_STATUS_CHANGE",
                "INCIDENT_NOTE_ADD",
                "INCIDENT_NOTE_CHANGE",
                "INCIDENT_COMMAND_EXECUTED"
              ]
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "INCIDENT_CREATED",
                "INCIDENT_MERGED",
                "INCIDENT_COMPLETED",
                "INCIDENT_ALERT_ADD",
                "INCIDENT_ALERT_DELETED",
                "INCIDENT_ALERT_STATUS_CHANGED",
                "INCIDENT_ALERT_MOVED",
                "INCIDENT_ASSIGNED_TO",
                "INCIDENT_ASSIGNED_CHANGE",
                "INCIDENT_STATUS_CHANGE",
                "INCIDENT_NOTE_ADD",
                "INCIDENT_NOTE_CHANGE",
                "INCIDENT_COMMAND_EXECUTED"
              ]
            }
          }
        }
      },
      "UtmIncidentHistoryCriteria": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/LongFilter" },
          "incidentId": { "$ref": "#/components/schemas/LongFilter" },
          "actionDate": { "$ref": "#/components/schemas/InstantFilter" },
          "actionType": {
            "$ref": "#/components/schemas/IncidentHistoryActionFilter"
          },
          "actionCreatedBy": { "$ref": "#/components/schemas/StringFilter" },
          "action": { "$ref": "#/components/schemas/StringFilter" },
          "actionDetail": { "$ref": "#/components/schemas/StringFilter" }
        }
      },
      "UtmIncidentHistory": {
        "required": [
          "action",
          "actionCreatedBy",
          "actionDate",
          "actionType",
          "incidentId"
        ],
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "incidentId": { "type": "integer", "format": "int64" },
          "actionDate": { "type": "string", "format": "date-time" },
          "actionType": {
            "type": "string",
            "enum": [
              "INCIDENT_CREATED",
              "INCIDENT_MERGED",
              "INCIDENT_COMPLETED",
              "INCIDENT_ALERT_ADD",
              "INCIDENT_ALERT_DELETED",
              "INCIDENT_ALERT_STATUS_CHANGED",
              "INCIDENT_ALERT_MOVED",
              "INCIDENT_ASSIGNED_TO",
              "INCIDENT_ASSIGNED_CHANGE",
              "INCIDENT_STATUS_CHANGE",
              "INCIDENT_NOTE_ADD",
              "INCIDENT_NOTE_CHANGE",
              "INCIDENT_COMMAND_EXECUTED"
            ]
          },
          "actionCreatedBy": { "type": "string" },
          "action": { "type": "string" },
          "actionDetail": { "type": "string" }
        }
      },
      "UtmIncidentAlertCriteria": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/LongFilter" },
          "incidentId": { "$ref": "#/components/schemas/LongFilter" },
          "alertId": { "$ref": "#/components/schemas/StringFilter" },
          "alertName": { "$ref": "#/components/schemas/StringFilter" },
          "alertStatus": { "$ref": "#/components/schemas/IntegerFilter" },
          "alertSeverity": { "$ref": "#/components/schemas/IntegerFilter" }
        }
      },
      "UtmIncidentActionCriteria": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/LongFilter" },
          "actionCommand": { "$ref": "#/components/schemas/StringFilter" },
          "actionDescription": { "$ref": "#/components/schemas/StringFilter" },
          "actionParams": { "$ref": "#/components/schemas/StringFilter" },
          "actionType": { "$ref": "#/components/schemas/IntegerFilter" },
          "actionEditable": { "$ref": "#/components/schemas/BooleanFilter" }
        }
      },
      "UtmGettingStarted": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "stepShort": {
            "type": "string",
            "enum": [
              "SET_ADMIN_USER",
              "APPLICATION_SETTINGS",
              "DASHBOARD_BUILDER",
              "THREAT_MANAGEMENT",
              "INTEGRATIONS"
            ]
          },
          "stepOrder": { "type": "integer", "format": "int32" },
          "completed": { "type": "boolean" }
        }
      },
      "UtmDataInputStatusCriteria": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/StringFilter" },
          "source": { "$ref": "#/components/schemas/StringFilter" },
          "dataType": { "$ref": "#/components/schemas/StringFilter" },
          "timestamp": { "$ref": "#/components/schemas/LongFilter" },
          "median": { "$ref": "#/components/schemas/LongFilter" }
        }
      },
      "UtmDashboardCriteria": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/LongFilter" },
          "name": { "$ref": "#/components/schemas/StringFilter" },
          "createdDate": { "$ref": "#/components/schemas/InstantFilter" },
          "modifiedDate": { "$ref": "#/components/schemas/InstantFilter" },
          "userCreated": { "$ref": "#/components/schemas/StringFilter" },
          "userModified": { "$ref": "#/components/schemas/StringFilter" }
        }
      },
      "UtmDashboardVisualizationCriteria": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/LongFilter" },
          "idVisualization": { "$ref": "#/components/schemas/LongFilter" },
          "idDashboard": { "$ref": "#/components/schemas/LongFilter" },
          "order": { "$ref": "#/components/schemas/IntegerFilter" }
        }
      },
      "UtmClient": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "clientName": { "type": "string" },
          "clientDomain": { "type": "string" },
          "clientPrefix": { "type": "string" },
          "clientMail": { "type": "string" },
          "clientUser": { "type": "string" },
          "clientPass": { "type": "string" },
          "clientLicenceCreation": { "type": "string", "format": "date-time" },
          "clientLicenceExpire": { "type": "string", "format": "date-time" },
          "clientLicenceId": { "type": "string" },
          "clientLicenceVerified": { "type": "boolean" }
        }
      },
      "UtmAuditorUserAttributesDTO": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "attributeKey": { "type": "string" },
          "attributeValue": { "type": "string" },
          "createdDate": { "type": "string", "format": "date-time" },
          "modifiedDate": { "type": "string", "format": "date-time" },
          "utmAuditorUser": {
            "$ref": "#/components/schemas/UtmAuditorUsersDTO"
          }
        }
      },
      "UtmAuditorUserSourcesDTO": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "indexPattern": { "type": "string" },
          "indexName": { "type": "string" },
          "isActive": { "type": "boolean" },
          "active": { "type": "boolean", "writeOnly": true }
        }
      },
      "UtmAuditorUsersDTO": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "sid": { "type": "string" },
          "source": { "$ref": "#/components/schemas/UtmAuditorUserSourcesDTO" },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UtmAuditorUserAttributesDTO"
            }
          }
        }
      },
      "AssetGroupFilter": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "groupName": { "type": "string" },
          "type": { "type": "array", "items": { "type": "string" } },
          "initDate": { "type": "string", "format": "date-time" },
          "endDate": { "type": "string", "format": "date-time" },
          "probe": { "type": "array", "items": { "type": "string" } },
          "os": { "type": "array", "items": { "type": "string" } },
          "assetIp": { "type": "array", "items": { "type": "string" } },
          "assetName": { "type": "array", "items": { "type": "string" } },
          "assetType": { "type": "string" }
        }
      },
      "AssetGroupDTO": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "groupName": { "type": "string" },
          "groupDescription": { "type": "string" },
          "createdDate": { "type": "string", "format": "date-time" },
          "assetsCount": { "type": "integer", "format": "int32" },
          "metrics": {
            "type": "object",
            "additionalProperties": { "type": "integer", "format": "int64" }
          }
        }
      },
      "UtmAlertTagCriteria": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/LongFilter" },
          "tagName": { "$ref": "#/components/schemas/StringFilter" },
          "systemOwner": { "$ref": "#/components/schemas/BooleanFilter" }
        }
      },
      "UtmAlertResponseRuleHistoryDTO": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "ruleId": { "type": "integer", "format": "int64" },
          "createdDate": { "type": "string", "format": "date-time" },
          "previousState": {
            "$ref": "#/components/schemas/UtmAlertResponseRuleDTO"
          }
        }
      },
      "RuleExecutionStatusFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string",
            "enum": ["EXECUTED", "PENDING", "FAILED"]
          },
          "notEquals": {
            "type": "string",
            "enum": ["EXECUTED", "PENDING", "FAILED"]
          },
          "specified": { "type": "boolean" },
          "in": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["EXECUTED", "PENDING", "FAILED"]
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["EXECUTED", "PENDING", "FAILED"]
            }
          }
        }
      },
      "RuleNonExecutionCauseFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string",
            "enum": ["AGENT_OFFLINE", "AGENT_NOT_FOUND", "UNKNOWN"]
          },
          "notEquals": {
            "type": "string",
            "enum": ["AGENT_OFFLINE", "AGENT_NOT_FOUND", "UNKNOWN"]
          },
          "specified": { "type": "boolean" },
          "in": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["AGENT_OFFLINE", "AGENT_NOT_FOUND", "UNKNOWN"]
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["AGENT_OFFLINE", "AGENT_NOT_FOUND", "UNKNOWN"]
            }
          }
        }
      },
      "UtmAlertResponseRuleExecutionCriteria": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/LongFilter" },
          "ruleId": { "$ref": "#/components/schemas/LongFilter" },
          "alertId": { "$ref": "#/components/schemas/StringFilter" },
          "agent": { "$ref": "#/components/schemas/StringFilter" },
          "executionDate": { "$ref": "#/components/schemas/InstantFilter" },
          "executionStatus": {
            "$ref": "#/components/schemas/RuleExecutionStatusFilter"
          },
          "nonExecutionCause": {
            "$ref": "#/components/schemas/RuleNonExecutionCauseFilter"
          }
        }
      },
      "UtmAlertResponseRuleExecution": {
        "required": [
          "agent",
          "alertId",
          "command",
          "executionDate",
          "executionStatus",
          "ruleId"
        ],
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "ruleId": { "type": "integer", "format": "int64" },
          "alertId": { "maxLength": 150, "minLength": 0, "type": "string" },
          "command": { "type": "string" },
          "commandResult": { "type": "string" },
          "agent": { "maxLength": 150, "minLength": 0, "type": "string" },
          "executionDate": { "type": "string", "format": "date-time" },
          "executionStatus": {
            "type": "string",
            "enum": ["EXECUTED", "PENDING", "FAILED"]
          },
          "nonExecutionCause": {
            "type": "string",
            "enum": ["AGENT_OFFLINE", "AGENT_NOT_FOUND", "UNKNOWN"]
          },
          "executionRetries": { "type": "integer", "format": "int32" }
        }
      },
      "UtmAlertLogCriteria": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/LongFilter" },
          "alertId": { "$ref": "#/components/schemas/StringFilter" },
          "logUser": { "$ref": "#/components/schemas/StringFilter" },
          "logDate": { "$ref": "#/components/schemas/InstantFilter" },
          "logAction": { "$ref": "#/components/schemas/StringFilter" },
          "logOldValue": { "$ref": "#/components/schemas/StringFilter" },
          "logNewValue": { "$ref": "#/components/schemas/StringFilter" }
        }
      },
      "TableType": {
        "type": "object",
        "properties": {
          "columns": { "type": "array", "items": { "type": "string" } },
          "rows": {
            "type": "array",
            "items": { "type": "array", "items": { "type": "string" } }
          }
        }
      },
      "BarType": {
        "type": "object",
        "properties": {
          "categories": { "type": "array", "items": { "type": "string" } },
          "series": {
            "type": "array",
            "items": { "type": "integer", "format": "int64" }
          }
        }
      },
      "EventsByObjectsInTimeType": {
        "type": "object",
        "properties": {
          "categories": { "type": "array", "items": { "type": "string" } },
          "series": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Metadata" }
          }
        }
      },
      "Metadata": {
        "type": "object",
        "properties": {
          "serie": { "type": "string" },
          "values": {
            "type": "array",
            "items": { "type": "integer", "format": "int64" }
          }
        }
      },
      "PieType": {
        "type": "object",
        "properties": {
          "data": { "type": "array", "items": { "type": "string" } },
          "value": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/PieValue" }
          }
        }
      },
      "PieValue": {
        "type": "object",
        "properties": {
          "value": { "type": "integer", "format": "int32" },
          "name": { "type": "string" }
        }
      },
      "CardType": {
        "type": "object",
        "properties": {
          "serie": { "type": "string" },
          "value": { "type": "integer", "format": "int32" }
        }
      },
      "UtmMenuCriteria": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/LongFilter" },
          "name": { "$ref": "#/components/schemas/StringFilter" },
          "url": { "$ref": "#/components/schemas/StringFilter" },
          "parentId": { "$ref": "#/components/schemas/LongFilter" },
          "type": { "$ref": "#/components/schemas/IntegerFilter" },
          "dashboardId": { "$ref": "#/components/schemas/LongFilter" },
          "modulesNameShort": { "$ref": "#/components/schemas/StringFilter" }
        }
      },
      "JvmConfig": {
        "type": "object",
        "properties": {
          "threads": { "$ref": "#/components/schemas/LogstashJVMThreads" },
          "mem": { "$ref": "#/components/schemas/LogstashJVMMemory" },
          "uptimeInMillis": { "type": "integer", "format": "int64" },
          "uptime_in_millis": { "type": "integer", "format": "int64" }
        }
      },
      "LogstashApiJvmResponse": {
        "type": "object",
        "properties": {
          "host": { "type": "string" },
          "version": { "type": "string" },
          "status": { "type": "string" },
          "pipeline": { "$ref": "#/components/schemas/PipelineConfig" },
          "jvm": { "$ref": "#/components/schemas/JvmConfig" },
          "http_address": { "type": "string", "writeOnly": true },
          "ephemeral_id": { "type": "string", "writeOnly": true }
        }
      },
      "LogstashApiStatsResponse": {
        "type": "object",
        "properties": {
          "general": { "$ref": "#/components/schemas/LogstashApiJvmResponse" },
          "pipelines": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/PipelineStats" }
          }
        }
      },
      "LogstashJVMMemory": {
        "type": "object",
        "properties": {
          "heap_used_percent": {
            "type": "integer",
            "format": "int32",
            "writeOnly": true
          },
          "heapUsedPercent": { "type": "integer", "format": "int32" },
          "heap_committed_in_bytes": {
            "type": "integer",
            "format": "int64",
            "writeOnly": true
          },
          "heapCommittedInBytes": { "type": "integer", "format": "int64" },
          "heap_max_in_bytes": {
            "type": "integer",
            "format": "int64",
            "writeOnly": true
          },
          "heapMaxInBytes": { "type": "integer", "format": "int64" },
          "heapUsedInBytes": { "type": "integer", "format": "int64" },
          "heap_used_in_bytes": { "type": "integer", "format": "int64" },
          "nonHeapUsedInBytes": { "type": "integer", "format": "int64" },
          "non_heap_used_in_bytes": { "type": "integer", "format": "int64" },
          "nonHeapCommittedInBytes": { "type": "integer", "format": "int64" },
          "non_heap_committed_in_bytes": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "LogstashJVMThreads": {
        "type": "object",
        "properties": {
          "count": { "type": "integer", "format": "int32" },
          "peakCount": { "type": "integer", "format": "int32" },
          "peak_count": { "type": "integer", "format": "int32" }
        }
      },
      "PipelineConfig": {
        "type": "object",
        "properties": {
          "workers": { "type": "integer", "format": "int32" },
          "batch_size": {
            "type": "integer",
            "format": "int32",
            "writeOnly": true
          },
          "batchSize": { "type": "integer", "format": "int32" },
          "batch_delay": {
            "type": "integer",
            "format": "int32",
            "writeOnly": true
          },
          "batchDelay": { "type": "integer", "format": "int32" }
        }
      },
      "PipelineEvents": {
        "type": "object",
        "properties": {
          "in": { "type": "integer", "format": "int64" },
          "filtered": { "type": "integer", "format": "int64" },
          "out": { "type": "integer", "format": "int64" },
          "queue_push_duration_in_millis": {
            "type": "integer",
            "format": "int64",
            "writeOnly": true
          },
          "duration_in_millis": {
            "type": "integer",
            "format": "int64",
            "writeOnly": true
          }
        }
      },
      "PipelineLastError": {
        "type": "object",
        "properties": { "message": { "type": "string" } }
      },
      "PipelineReloads": {
        "type": "object",
        "properties": {
          "successes": { "type": "integer", "format": "int64" },
          "failures": { "type": "integer", "format": "int64" },
          "last_failure_timestamp": { "type": "string", "writeOnly": true },
          "lastFailureTimestamp": { "type": "string" },
          "lastError": { "$ref": "#/components/schemas/PipelineLastError" },
          "last_error": { "$ref": "#/components/schemas/PipelineLastError" },
          "last_success_timestamp": { "type": "string", "writeOnly": true },
          "lastSuccessTimestamp": { "type": "string" }
        }
      },
      "PipelineStats": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "pipelineId": { "type": "string" },
          "pipelineName": { "type": "string" },
          "parentPipeline": { "type": "integer", "format": "int32" },
          "pipelineStatus": { "type": "string" },
          "moduleName": { "type": "string" },
          "systemOwner": { "type": "boolean" },
          "pipelineDescription": { "type": "string" },
          "events": { "$ref": "#/components/schemas/PipelineEvents" },
          "reloads": { "$ref": "#/components/schemas/PipelineReloads" }
        }
      },
      "PipelinePortConfiguration": {
        "type": "object",
        "properties": {
          "inputId": { "type": "string" },
          "port": { "type": "string" }
        }
      },
      "UtmLogstashFilterCriteria": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/LongFilter" },
          "filterName": { "$ref": "#/components/schemas/StringFilter" },
          "filterGroupId": { "$ref": "#/components/schemas/LongFilter" },
          "isActive": { "$ref": "#/components/schemas/BooleanFilter" }
        }
      },
      "LogAnalyzerQueryCriteria": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/LongFilter" },
          "name": { "$ref": "#/components/schemas/StringFilter" },
          "description": { "$ref": "#/components/schemas/StringFilter" },
          "owner": { "$ref": "#/components/schemas/StringFilter" },
          "creationDate": { "$ref": "#/components/schemas/InstantFilter" },
          "modificationDate": { "$ref": "#/components/schemas/InstantFilter" },
          "idPattern": { "$ref": "#/components/schemas/LongFilter" }
        }
      },
      "UtmIncidentActionCommandCriteria": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/LongFilter" },
          "actionId": { "$ref": "#/components/schemas/LongFilter" },
          "osDistribution": { "$ref": "#/components/schemas/StringFilter" },
          "osVersion": { "$ref": "#/components/schemas/StringFilter" },
          "command": { "$ref": "#/components/schemas/StringFilter" }
        }
      },
      "IndexType": {
        "type": "object",
        "properties": {
          "health": { "type": "string" },
          "status": { "type": "string" },
          "index": { "type": "string" },
          "docsCount": { "type": "integer", "format": "int64" },
          "size": { "type": "string" },
          "creationDate": { "type": "string" }
        }
      },
      "ClusterResume": {
        "type": "object",
        "properties": {
          "diskTotal": { "type": "number", "format": "float" },
          "diskUsed": { "type": "number", "format": "float" },
          "ramMax": { "type": "number", "format": "float" },
          "ramCurrent": { "type": "number", "format": "float" },
          "heapMax": { "type": "number", "format": "float" },
          "heapCurrent": { "type": "number", "format": "float" },
          "diskAvailable": { "type": "number", "format": "float" },
          "ramPercent": { "type": "number", "format": "float" },
          "heapPercent": { "type": "number", "format": "float" },
          "cpuPercent": { "type": "number", "format": "float" },
          "diskUsedPercent": { "type": "number", "format": "float" }
        }
      },
      "ElasticCluster": {
        "type": "object",
        "properties": {
          "resume": { "$ref": "#/components/schemas/ClusterResume" },
          "nodes": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ElasticNode" }
          }
        }
      },
      "ElasticNode": {
        "type": "object",
        "properties": {
          "ip": { "type": "string" },
          "name": { "type": "string" },
          "cpuPercent": { "type": "number", "format": "float" },
          "diskTotal": { "type": "number", "format": "float" },
          "diskUsed": { "type": "number", "format": "float" },
          "diskUsedPercent": { "type": "number", "format": "float" },
          "diskAvailable": { "type": "number", "format": "float" },
          "ramMax": { "type": "number", "format": "float" },
          "ramCurrent": { "type": "number", "format": "float" },
          "ramPercent": { "type": "number", "format": "float" },
          "heapCurrent": { "type": "number", "format": "float" },
          "heapMax": { "type": "number", "format": "float" },
          "heapPercent": { "type": "number", "format": "float" }
        }
      },
      "UtmComplianceStandardCriteria": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/LongFilter" },
          "standardName": { "$ref": "#/components/schemas/StringFilter" }
        }
      },
      "UtmComplianceStandardSectionCriteria": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/LongFilter" },
          "standardSectionName": {
            "$ref": "#/components/schemas/StringFilter"
          },
          "standardId": { "$ref": "#/components/schemas/LongFilter" }
        }
      },
      "UtmComplianceReportConfigCriteria": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/LongFilter" },
          "configSolution": { "$ref": "#/components/schemas/StringFilter" },
          "configReportName": { "$ref": "#/components/schemas/StringFilter" },
          "standardSectionId": { "$ref": "#/components/schemas/LongFilter" },
          "configReportEditable": {
            "$ref": "#/components/schemas/BooleanFilter"
          },
          "expandDashboard": { "$ref": "#/components/schemas/BooleanFilter" }
        }
      },
      "UtmComplianceReportScheduleCriteria": {
        "type": "object",
        "properties": {
          "name": { "$ref": "#/components/schemas/StringFilter" }
        }
      },
      "ListCollectorsResponseDTO": {
        "type": "object",
        "properties": {
          "collectors": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/CollectorDTO" }
          },
          "total": { "type": "integer", "format": "int32" }
        }
      },
      "ByteString": {
        "type": "object",
        "properties": {
          "empty": { "type": "boolean" },
          "validUtf8": { "type": "boolean" }
        }
      },
      "CollectorHostnames": {
        "type": "object",
        "properties": {
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "initialized": { "type": "boolean" },
          "parserForType": {
            "$ref": "#/components/schemas/ParserCollectorHostnames"
          },
          "defaultInstanceForType": {
            "$ref": "#/components/schemas/CollectorHostnames"
          },
          "serializedSize": { "type": "integer", "format": "int32" },
          "hostnameList": {
            "type": "array",
            "properties": { "empty": { "type": "boolean" } },
            "items": { "type": "string" }
          },
          "hostnameCount": { "type": "integer", "format": "int32" },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "memoizedSerializedSize": {
            "type": "integer",
            "format": "int32",
            "writeOnly": true
          }
        }
      },
      "Declaration": {
        "type": "object",
        "properties": {
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "number": { "type": "integer", "format": "int32" },
          "fullName": { "type": "string" },
          "type": { "type": "string" },
          "fullNameBytes": { "$ref": "#/components/schemas/ByteString" },
          "typeBytes": { "$ref": "#/components/schemas/ByteString" },
          "isRepeated": { "type": "boolean", "deprecated": true },
          "reserved": { "type": "boolean" },
          "initialized": { "type": "boolean" },
          "repeated": { "type": "boolean" },
          "parserForType": { "$ref": "#/components/schemas/ParserDeclaration" },
          "defaultInstanceForType": {
            "$ref": "#/components/schemas/Declaration"
          },
          "serializedSize": { "type": "integer", "format": "int32" },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "memoizedSerializedSize": {
            "type": "integer",
            "format": "int32",
            "writeOnly": true
          }
        }
      },
      "DeclarationOrBuilder": {
        "type": "object",
        "properties": {
          "number": { "type": "integer", "format": "int32" },
          "fullName": { "type": "string" },
          "type": { "type": "string" },
          "fullNameBytes": { "$ref": "#/components/schemas/ByteString" },
          "typeBytes": { "$ref": "#/components/schemas/ByteString" },
          "isRepeated": { "type": "boolean", "deprecated": true },
          "reserved": { "type": "boolean" },
          "repeated": { "type": "boolean" },
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "defaultInstanceForType": { "$ref": "#/components/schemas/Message" },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "initialized": { "type": "boolean" }
        }
      },
      "Descriptor": {
        "type": "object",
        "properties": {
          "index": { "type": "integer", "format": "int32" },
          "proto": { "$ref": "#/components/schemas/DescriptorProto" },
          "fullName": { "type": "string" },
          "file": { "$ref": "#/components/schemas/FileDescriptor" },
          "containingType": { "$ref": "#/components/schemas/Descriptor" },
          "nestedTypes": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Descriptor" }
          },
          "enumTypes": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/EnumDescriptor" }
          },
          "fields": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/FieldDescriptor" }
          },
          "extensions": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/FieldDescriptor" }
          },
          "oneofs": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/OneofDescriptor" }
          },
          "name": { "type": "string" },
          "realOneofs": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/OneofDescriptor" }
          },
          "extendable": { "type": "boolean" },
          "options": { "$ref": "#/components/schemas/MessageOptions" }
        }
      },
      "DescriptorProto": {
        "type": "object",
        "properties": {
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "name": { "type": "string" },
          "reservedRangeList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ReservedRange" }
          },
          "reservedNameList": {
            "type": "array",
            "properties": { "empty": { "type": "boolean" } },
            "items": { "type": "string" }
          },
          "extensionRangeList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ExtensionRange" }
          },
          "oneofDeclCount": { "type": "integer", "format": "int32" },
          "nestedTypeCount": { "type": "integer", "format": "int32" },
          "enumTypeCount": { "type": "integer", "format": "int32" },
          "extensionCount": { "type": "integer", "format": "int32" },
          "extensionRangeCount": { "type": "integer", "format": "int32" },
          "fieldOrBuilderList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldDescriptorProtoOrBuilder"
            }
          },
          "extensionList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/FieldDescriptorProto" }
          },
          "extensionOrBuilderList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldDescriptorProtoOrBuilder"
            }
          },
          "nestedTypeList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/DescriptorProto" }
          },
          "nestedTypeOrBuilderList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/DescriptorProtoOrBuilder" }
          },
          "enumTypeList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/EnumDescriptorProto" }
          },
          "enumTypeOrBuilderList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnumDescriptorProtoOrBuilder"
            }
          },
          "extensionRangeOrBuilderList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ExtensionRangeOrBuilder" }
          },
          "oneofDeclList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/OneofDescriptorProto" }
          },
          "oneofDeclOrBuilderList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OneofDescriptorProtoOrBuilder"
            }
          },
          "optionsOrBuilder": {
            "$ref": "#/components/schemas/MessageOptionsOrBuilder"
          },
          "reservedRangeOrBuilderList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ReservedRangeOrBuilder" }
          },
          "reservedRangeCount": { "type": "integer", "format": "int32" },
          "reservedNameCount": { "type": "integer", "format": "int32" },
          "nameBytes": { "$ref": "#/components/schemas/ByteString" },
          "fieldList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/FieldDescriptorProto" }
          },
          "options": { "$ref": "#/components/schemas/MessageOptions" },
          "fieldCount": { "type": "integer", "format": "int32" },
          "initialized": { "type": "boolean" },
          "parserForType": {
            "$ref": "#/components/schemas/ParserDescriptorProto"
          },
          "defaultInstanceForType": {
            "$ref": "#/components/schemas/DescriptorProto"
          },
          "serializedSize": { "type": "integer", "format": "int32" },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "memoizedSerializedSize": {
            "type": "integer",
            "format": "int32",
            "writeOnly": true
          }
        }
      },
      "DescriptorProtoOrBuilder": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "reservedRangeList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ReservedRange" }
          },
          "reservedNameList": {
            "type": "array",
            "items": { "type": "string" }
          },
          "extensionRangeList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ExtensionRange" }
          },
          "oneofDeclCount": { "type": "integer", "format": "int32" },
          "nestedTypeCount": { "type": "integer", "format": "int32" },
          "enumTypeCount": { "type": "integer", "format": "int32" },
          "extensionCount": { "type": "integer", "format": "int32" },
          "extensionRangeCount": { "type": "integer", "format": "int32" },
          "fieldOrBuilderList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldDescriptorProtoOrBuilder"
            }
          },
          "extensionList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/FieldDescriptorProto" }
          },
          "extensionOrBuilderList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldDescriptorProtoOrBuilder"
            }
          },
          "enumTypeList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/EnumDescriptorProto" }
          },
          "enumTypeOrBuilderList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnumDescriptorProtoOrBuilder"
            }
          },
          "extensionRangeOrBuilderList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ExtensionRangeOrBuilder" }
          },
          "oneofDeclList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/OneofDescriptorProto" }
          },
          "oneofDeclOrBuilderList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OneofDescriptorProtoOrBuilder"
            }
          },
          "optionsOrBuilder": {
            "$ref": "#/components/schemas/MessageOptionsOrBuilder"
          },
          "reservedRangeOrBuilderList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ReservedRangeOrBuilder" }
          },
          "reservedRangeCount": { "type": "integer", "format": "int32" },
          "reservedNameCount": { "type": "integer", "format": "int32" },
          "nameBytes": { "$ref": "#/components/schemas/ByteString" },
          "fieldList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/FieldDescriptorProto" }
          },
          "options": { "$ref": "#/components/schemas/MessageOptions" },
          "fieldCount": { "type": "integer", "format": "int32" },
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "defaultInstanceForType": { "$ref": "#/components/schemas/Message" },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "initialized": { "type": "boolean" }
        }
      },
      "EnumDescriptor": {
        "type": "object",
        "properties": {
          "index": { "type": "integer", "format": "int32" },
          "proto": { "$ref": "#/components/schemas/EnumDescriptorProto" },
          "fullName": { "type": "string" },
          "file": { "$ref": "#/components/schemas/FileDescriptor" },
          "containingType": { "$ref": "#/components/schemas/Descriptor" },
          "values": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/EnumValueDescriptor" }
          },
          "name": { "type": "string" },
          "closed": { "type": "boolean" },
          "options": { "$ref": "#/components/schemas/EnumOptions" }
        }
      },
      "EnumDescriptorProto": {
        "type": "object",
        "properties": {
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "name": { "type": "string" },
          "reservedRangeList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/EnumReservedRange" }
          },
          "reservedNameList": {
            "type": "array",
            "properties": { "empty": { "type": "boolean" } },
            "items": { "type": "string" }
          },
          "optionsOrBuilder": {
            "$ref": "#/components/schemas/EnumOptionsOrBuilder"
          },
          "reservedRangeOrBuilderList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnumReservedRangeOrBuilder"
            }
          },
          "reservedRangeCount": { "type": "integer", "format": "int32" },
          "reservedNameCount": { "type": "integer", "format": "int32" },
          "valueCount": { "type": "integer", "format": "int32" },
          "nameBytes": { "$ref": "#/components/schemas/ByteString" },
          "valueList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/EnumValueDescriptorProto" }
          },
          "valueOrBuilderList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnumValueDescriptorProtoOrBuilder"
            }
          },
          "options": { "$ref": "#/components/schemas/EnumOptions" },
          "initialized": { "type": "boolean" },
          "parserForType": {
            "$ref": "#/components/schemas/ParserEnumDescriptorProto"
          },
          "defaultInstanceForType": {
            "$ref": "#/components/schemas/EnumDescriptorProto"
          },
          "serializedSize": { "type": "integer", "format": "int32" },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "memoizedSerializedSize": {
            "type": "integer",
            "format": "int32",
            "writeOnly": true
          }
        }
      },
      "EnumDescriptorProtoOrBuilder": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "reservedRangeList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/EnumReservedRange" }
          },
          "reservedNameList": {
            "type": "array",
            "items": { "type": "string" }
          },
          "optionsOrBuilder": {
            "$ref": "#/components/schemas/EnumOptionsOrBuilder"
          },
          "reservedRangeOrBuilderList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnumReservedRangeOrBuilder"
            }
          },
          "reservedRangeCount": { "type": "integer", "format": "int32" },
          "reservedNameCount": { "type": "integer", "format": "int32" },
          "valueCount": { "type": "integer", "format": "int32" },
          "nameBytes": { "$ref": "#/components/schemas/ByteString" },
          "valueList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/EnumValueDescriptorProto" }
          },
          "valueOrBuilderList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnumValueDescriptorProtoOrBuilder"
            }
          },
          "options": { "$ref": "#/components/schemas/EnumOptions" },
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "defaultInstanceForType": { "$ref": "#/components/schemas/Message" },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "initialized": { "type": "boolean" }
        }
      },
      "EnumOptions": {
        "type": "object",
        "properties": {
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "deprecatedLegacyJsonFieldConflicts": {
            "type": "boolean",
            "deprecated": true
          },
          "uninterpretedOptionList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UninterpretedOption" }
          },
          "uninterpretedOptionOrBuilderList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UninterpretedOptionOrBuilder"
            }
          },
          "uninterpretedOptionCount": { "type": "integer", "format": "int32" },
          "allowAlias": { "type": "boolean" },
          "initialized": { "type": "boolean" },
          "deprecated": { "type": "boolean" },
          "parserForType": { "$ref": "#/components/schemas/ParserEnumOptions" },
          "defaultInstanceForType": {
            "$ref": "#/components/schemas/EnumOptions"
          },
          "serializedSize": { "type": "integer", "format": "int32" },
          "allFieldsRaw": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "memoizedSerializedSize": {
            "type": "integer",
            "format": "int32",
            "writeOnly": true
          }
        }
      },
      "EnumOptionsOrBuilder": {
        "type": "object",
        "properties": {
          "deprecatedLegacyJsonFieldConflicts": {
            "type": "boolean",
            "deprecated": true
          },
          "uninterpretedOptionList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UninterpretedOption" }
          },
          "uninterpretedOptionOrBuilderList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UninterpretedOptionOrBuilder"
            }
          },
          "uninterpretedOptionCount": { "type": "integer", "format": "int32" },
          "allowAlias": { "type": "boolean" },
          "deprecated": { "type": "boolean" },
          "defaultInstanceForType": { "$ref": "#/components/schemas/Message" },
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "initialized": { "type": "boolean" }
        }
      },
      "EnumReservedRange": {
        "type": "object",
        "properties": {
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "initialized": { "type": "boolean" },
          "parserForType": {
            "$ref": "#/components/schemas/ParserEnumReservedRange"
          },
          "defaultInstanceForType": {
            "$ref": "#/components/schemas/EnumReservedRange"
          },
          "serializedSize": { "type": "integer", "format": "int32" },
          "start": { "type": "integer", "format": "int32" },
          "end": { "type": "integer", "format": "int32" },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "memoizedSerializedSize": {
            "type": "integer",
            "format": "int32",
            "writeOnly": true
          }
        }
      },
      "EnumReservedRangeOrBuilder": {
        "type": "object",
        "properties": {
          "start": { "type": "integer", "format": "int32" },
          "end": { "type": "integer", "format": "int32" },
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "defaultInstanceForType": { "$ref": "#/components/schemas/Message" },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "initialized": { "type": "boolean" }
        }
      },
      "EnumValueDescriptor": {
        "type": "object",
        "properties": {
          "index": { "type": "integer", "format": "int32" },
          "proto": { "$ref": "#/components/schemas/EnumValueDescriptorProto" },
          "fullName": { "type": "string" },
          "type": { "$ref": "#/components/schemas/EnumDescriptor" },
          "number": { "type": "integer", "format": "int32" },
          "name": { "type": "string" },
          "file": { "$ref": "#/components/schemas/FileDescriptor" },
          "options": { "$ref": "#/components/schemas/EnumValueOptions" }
        }
      },
      "EnumValueDescriptorProto": {
        "type": "object",
        "properties": {
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "number": { "type": "integer", "format": "int32" },
          "name": { "type": "string" },
          "optionsOrBuilder": {
            "$ref": "#/components/schemas/EnumValueOptionsOrBuilder"
          },
          "nameBytes": { "$ref": "#/components/schemas/ByteString" },
          "options": { "$ref": "#/components/schemas/EnumValueOptions" },
          "initialized": { "type": "boolean" },
          "parserForType": {
            "$ref": "#/components/schemas/ParserEnumValueDescriptorProto"
          },
          "defaultInstanceForType": {
            "$ref": "#/components/schemas/EnumValueDescriptorProto"
          },
          "serializedSize": { "type": "integer", "format": "int32" },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "memoizedSerializedSize": {
            "type": "integer",
            "format": "int32",
            "writeOnly": true
          }
        }
      },
      "EnumValueDescriptorProtoOrBuilder": {
        "type": "object",
        "properties": {
          "number": { "type": "integer", "format": "int32" },
          "name": { "type": "string" },
          "optionsOrBuilder": {
            "$ref": "#/components/schemas/EnumValueOptionsOrBuilder"
          },
          "nameBytes": { "$ref": "#/components/schemas/ByteString" },
          "options": { "$ref": "#/components/schemas/EnumValueOptions" },
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "defaultInstanceForType": { "$ref": "#/components/schemas/Message" },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "initialized": { "type": "boolean" }
        }
      },
      "EnumValueOptions": {
        "type": "object",
        "properties": {
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "uninterpretedOptionList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UninterpretedOption" }
          },
          "uninterpretedOptionOrBuilderList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UninterpretedOptionOrBuilder"
            }
          },
          "uninterpretedOptionCount": { "type": "integer", "format": "int32" },
          "initialized": { "type": "boolean" },
          "deprecated": { "type": "boolean" },
          "parserForType": {
            "$ref": "#/components/schemas/ParserEnumValueOptions"
          },
          "defaultInstanceForType": {
            "$ref": "#/components/schemas/EnumValueOptions"
          },
          "serializedSize": { "type": "integer", "format": "int32" },
          "allFieldsRaw": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "memoizedSerializedSize": {
            "type": "integer",
            "format": "int32",
            "writeOnly": true
          }
        }
      },
      "EnumValueOptionsOrBuilder": {
        "type": "object",
        "properties": {
          "uninterpretedOptionList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UninterpretedOption" }
          },
          "uninterpretedOptionOrBuilderList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UninterpretedOptionOrBuilder"
            }
          },
          "uninterpretedOptionCount": { "type": "integer", "format": "int32" },
          "deprecated": { "type": "boolean" },
          "defaultInstanceForType": { "$ref": "#/components/schemas/Message" },
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "initialized": { "type": "boolean" }
        }
      },
      "ExtensionRange": {
        "type": "object",
        "properties": {
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "optionsOrBuilder": {
            "$ref": "#/components/schemas/ExtensionRangeOptionsOrBuilder"
          },
          "options": { "$ref": "#/components/schemas/ExtensionRangeOptions" },
          "initialized": { "type": "boolean" },
          "parserForType": {
            "$ref": "#/components/schemas/ParserExtensionRange"
          },
          "defaultInstanceForType": {
            "$ref": "#/components/schemas/ExtensionRange"
          },
          "serializedSize": { "type": "integer", "format": "int32" },
          "start": { "type": "integer", "format": "int32" },
          "end": { "type": "integer", "format": "int32" },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "memoizedSerializedSize": {
            "type": "integer",
            "format": "int32",
            "writeOnly": true
          }
        }
      },
      "ExtensionRangeOptions": {
        "type": "object",
        "properties": {
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "declarationList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Declaration" }
          },
          "declarationOrBuilderList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/DeclarationOrBuilder" }
          },
          "declarationCount": { "type": "integer", "format": "int32" },
          "verification": {
            "type": "string",
            "enum": ["DECLARATION", "UNVERIFIED"]
          },
          "uninterpretedOptionList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UninterpretedOption" }
          },
          "uninterpretedOptionOrBuilderList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UninterpretedOptionOrBuilder"
            }
          },
          "uninterpretedOptionCount": { "type": "integer", "format": "int32" },
          "initialized": { "type": "boolean" },
          "parserForType": {
            "$ref": "#/components/schemas/ParserExtensionRangeOptions"
          },
          "defaultInstanceForType": {
            "$ref": "#/components/schemas/ExtensionRangeOptions"
          },
          "serializedSize": { "type": "integer", "format": "int32" },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "allFieldsRaw": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "memoizedSerializedSize": {
            "type": "integer",
            "format": "int32",
            "writeOnly": true
          }
        }
      },
      "ExtensionRangeOptionsOrBuilder": {
        "type": "object",
        "properties": {
          "declarationList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Declaration" }
          },
          "declarationOrBuilderList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/DeclarationOrBuilder" }
          },
          "declarationCount": { "type": "integer", "format": "int32" },
          "verification": {
            "type": "string",
            "enum": ["DECLARATION", "UNVERIFIED"]
          },
          "uninterpretedOptionList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UninterpretedOption" }
          },
          "uninterpretedOptionOrBuilderList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UninterpretedOptionOrBuilder"
            }
          },
          "uninterpretedOptionCount": { "type": "integer", "format": "int32" },
          "defaultInstanceForType": { "$ref": "#/components/schemas/Message" },
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "initialized": { "type": "boolean" }
        }
      },
      "ExtensionRangeOrBuilder": {
        "type": "object",
        "properties": {
          "optionsOrBuilder": {
            "$ref": "#/components/schemas/ExtensionRangeOptionsOrBuilder"
          },
          "options": { "$ref": "#/components/schemas/ExtensionRangeOptions" },
          "start": { "type": "integer", "format": "int32" },
          "end": { "type": "integer", "format": "int32" },
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "defaultInstanceForType": { "$ref": "#/components/schemas/Message" },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "initialized": { "type": "boolean" }
        }
      },
      "FieldDescriptor": {
        "type": "object",
        "properties": {
          "index": { "type": "integer", "format": "int32" },
          "proto": { "$ref": "#/components/schemas/FieldDescriptorProto" },
          "fullName": { "type": "string" },
          "jsonName": { "type": "string" },
          "file": { "$ref": "#/components/schemas/FileDescriptor" },
          "extensionScope": { "$ref": "#/components/schemas/Descriptor" },
          "type": {
            "type": "string",
            "enum": [
              "DOUBLE",
              "FLOAT",
              "INT64",
              "UINT64",
              "INT32",
              "FIXED64",
              "FIXED32",
              "BOOL",
              "STRING",
              "GROUP",
              "MESSAGE",
              "BYTES",
              "UINT32",
              "ENUM",
              "SFIXED32",
              "SFIXED64",
              "SINT32",
              "SINT64"
            ]
          },
          "containingType": { "$ref": "#/components/schemas/Descriptor" },
          "messageType": { "$ref": "#/components/schemas/Descriptor" },
          "containingOneof": { "$ref": "#/components/schemas/OneofDescriptor" },
          "enumType": { "$ref": "#/components/schemas/EnumDescriptor" },
          "defaultValue": { "type": "object" },
          "number": { "type": "integer", "format": "int32" },
          "name": { "type": "string" },
          "extension": { "type": "boolean" },
          "liteType": {
            "type": "string",
            "enum": [
              "DOUBLE",
              "FLOAT",
              "INT64",
              "UINT64",
              "INT32",
              "FIXED64",
              "FIXED32",
              "BOOL",
              "STRING",
              "GROUP",
              "MESSAGE",
              "BYTES",
              "UINT32",
              "ENUM",
              "SFIXED32",
              "SFIXED64",
              "SINT32",
              "SINT64"
            ]
          },
          "liteJavaType": {
            "type": "string",
            "enum": [
              "INT",
              "LONG",
              "FLOAT",
              "DOUBLE",
              "BOOLEAN",
              "STRING",
              "BYTE_STRING",
              "ENUM",
              "MESSAGE"
            ]
          },
          "packed": { "type": "boolean" },
          "packable": { "type": "boolean" },
          "realContainingOneof": {
            "$ref": "#/components/schemas/OneofDescriptor"
          },
          "javaType": {
            "type": "string",
            "enum": [
              "INT",
              "LONG",
              "FLOAT",
              "DOUBLE",
              "BOOLEAN",
              "STRING",
              "BYTE_STRING",
              "ENUM",
              "MESSAGE"
            ]
          },
          "optional": { "type": "boolean" },
          "options": { "$ref": "#/components/schemas/FieldOptions" },
          "repeated": { "type": "boolean" },
          "mapField": { "type": "boolean" },
          "required": { "type": "boolean" }
        }
      },
      "FieldDescriptorProto": {
        "type": "object",
        "properties": {
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "number": { "type": "integer", "format": "int32" },
          "name": { "type": "string" },
          "typeName": { "type": "string" },
          "type": {
            "type": "string",
            "enum": [
              "TYPE_DOUBLE",
              "TYPE_FLOAT",
              "TYPE_INT64",
              "TYPE_UINT64",
              "TYPE_INT32",
              "TYPE_FIXED64",
              "TYPE_FIXED32",
              "TYPE_BOOL",
              "TYPE_STRING",
              "TYPE_GROUP",
              "TYPE_MESSAGE",
              "TYPE_BYTES",
              "TYPE_UINT32",
              "TYPE_ENUM",
              "TYPE_SFIXED32",
              "TYPE_SFIXED64",
              "TYPE_SINT32",
              "TYPE_SINT64"
            ]
          },
          "defaultValue": { "type": "string" },
          "jsonName": { "type": "string" },
          "proto3Optional": { "type": "boolean" },
          "oneofIndex": { "type": "integer", "format": "int32" },
          "extendee": { "type": "string" },
          "optionsOrBuilder": {
            "$ref": "#/components/schemas/FieldOptionsOrBuilder"
          },
          "nameBytes": { "$ref": "#/components/schemas/ByteString" },
          "typeNameBytes": { "$ref": "#/components/schemas/ByteString" },
          "extendeeBytes": { "$ref": "#/components/schemas/ByteString" },
          "defaultValueBytes": { "$ref": "#/components/schemas/ByteString" },
          "jsonNameBytes": { "$ref": "#/components/schemas/ByteString" },
          "label": {
            "type": "string",
            "enum": ["LABEL_OPTIONAL", "LABEL_REQUIRED", "LABEL_REPEATED"]
          },
          "options": { "$ref": "#/components/schemas/FieldOptions" },
          "initialized": { "type": "boolean" },
          "parserForType": {
            "$ref": "#/components/schemas/ParserFieldDescriptorProto"
          },
          "defaultInstanceForType": {
            "$ref": "#/components/schemas/FieldDescriptorProto"
          },
          "serializedSize": { "type": "integer", "format": "int32" },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "memoizedSerializedSize": {
            "type": "integer",
            "format": "int32",
            "writeOnly": true
          }
        }
      },
      "FieldDescriptorProtoOrBuilder": {
        "type": "object",
        "properties": {
          "number": { "type": "integer", "format": "int32" },
          "name": { "type": "string" },
          "typeName": { "type": "string" },
          "type": {
            "type": "string",
            "enum": [
              "TYPE_DOUBLE",
              "TYPE_FLOAT",
              "TYPE_INT64",
              "TYPE_UINT64",
              "TYPE_INT32",
              "TYPE_FIXED64",
              "TYPE_FIXED32",
              "TYPE_BOOL",
              "TYPE_STRING",
              "TYPE_GROUP",
              "TYPE_MESSAGE",
              "TYPE_BYTES",
              "TYPE_UINT32",
              "TYPE_ENUM",
              "TYPE_SFIXED32",
              "TYPE_SFIXED64",
              "TYPE_SINT32",
              "TYPE_SINT64"
            ]
          },
          "defaultValue": { "type": "string" },
          "jsonName": { "type": "string" },
          "proto3Optional": { "type": "boolean" },
          "oneofIndex": { "type": "integer", "format": "int32" },
          "extendee": { "type": "string" },
          "optionsOrBuilder": {
            "$ref": "#/components/schemas/FieldOptionsOrBuilder"
          },
          "nameBytes": { "$ref": "#/components/schemas/ByteString" },
          "typeNameBytes": { "$ref": "#/components/schemas/ByteString" },
          "extendeeBytes": { "$ref": "#/components/schemas/ByteString" },
          "defaultValueBytes": { "$ref": "#/components/schemas/ByteString" },
          "jsonNameBytes": { "$ref": "#/components/schemas/ByteString" },
          "label": {
            "type": "string",
            "enum": ["LABEL_OPTIONAL", "LABEL_REQUIRED", "LABEL_REPEATED"]
          },
          "options": { "$ref": "#/components/schemas/FieldOptions" },
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "defaultInstanceForType": { "$ref": "#/components/schemas/Message" },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "initialized": { "type": "boolean" }
        }
      },
      "FieldOptions": {
        "type": "object",
        "properties": {
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "target": {
            "type": "string",
            "deprecated": true,
            "enum": [
              "TARGET_TYPE_UNKNOWN",
              "TARGET_TYPE_FILE",
              "TARGET_TYPE_EXTENSION_RANGE",
              "TARGET_TYPE_MESSAGE",
              "TARGET_TYPE_FIELD",
              "TARGET_TYPE_ONEOF",
              "TARGET_TYPE_ENUM",
              "TARGET_TYPE_ENUM_ENTRY",
              "TARGET_TYPE_SERVICE",
              "TARGET_TYPE_METHOD"
            ]
          },
          "packed": { "type": "boolean" },
          "uninterpretedOptionList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UninterpretedOption" }
          },
          "uninterpretedOptionOrBuilderList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UninterpretedOptionOrBuilder"
            }
          },
          "uninterpretedOptionCount": { "type": "integer", "format": "int32" },
          "ctype": {
            "type": "string",
            "enum": ["STRING", "CORD", "STRING_PIECE"]
          },
          "jstype": {
            "type": "string",
            "enum": ["JS_NORMAL", "JS_STRING", "JS_NUMBER"]
          },
          "lazy": { "type": "boolean" },
          "unverifiedLazy": { "type": "boolean" },
          "weak": { "type": "boolean" },
          "debugRedact": { "type": "boolean" },
          "targetsList": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "TARGET_TYPE_UNKNOWN",
                "TARGET_TYPE_FILE",
                "TARGET_TYPE_EXTENSION_RANGE",
                "TARGET_TYPE_MESSAGE",
                "TARGET_TYPE_FIELD",
                "TARGET_TYPE_ONEOF",
                "TARGET_TYPE_ENUM",
                "TARGET_TYPE_ENUM_ENTRY",
                "TARGET_TYPE_SERVICE",
                "TARGET_TYPE_METHOD"
              ]
            }
          },
          "targetsCount": { "type": "integer", "format": "int32" },
          "initialized": { "type": "boolean" },
          "deprecated": { "type": "boolean" },
          "retention": {
            "type": "string",
            "enum": [
              "RETENTION_UNKNOWN",
              "RETENTION_RUNTIME",
              "RETENTION_SOURCE"
            ]
          },
          "parserForType": {
            "$ref": "#/components/schemas/ParserFieldOptions"
          },
          "defaultInstanceForType": {
            "$ref": "#/components/schemas/FieldOptions"
          },
          "serializedSize": { "type": "integer", "format": "int32" },
          "allFieldsRaw": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "memoizedSerializedSize": {
            "type": "integer",
            "format": "int32",
            "writeOnly": true
          }
        }
      },
      "FieldOptionsOrBuilder": {
        "type": "object",
        "properties": {
          "target": {
            "type": "string",
            "deprecated": true,
            "enum": [
              "TARGET_TYPE_UNKNOWN",
              "TARGET_TYPE_FILE",
              "TARGET_TYPE_EXTENSION_RANGE",
              "TARGET_TYPE_MESSAGE",
              "TARGET_TYPE_FIELD",
              "TARGET_TYPE_ONEOF",
              "TARGET_TYPE_ENUM",
              "TARGET_TYPE_ENUM_ENTRY",
              "TARGET_TYPE_SERVICE",
              "TARGET_TYPE_METHOD"
            ]
          },
          "packed": { "type": "boolean" },
          "uninterpretedOptionList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UninterpretedOption" }
          },
          "uninterpretedOptionOrBuilderList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UninterpretedOptionOrBuilder"
            }
          },
          "uninterpretedOptionCount": { "type": "integer", "format": "int32" },
          "ctype": {
            "type": "string",
            "enum": ["STRING", "CORD", "STRING_PIECE"]
          },
          "jstype": {
            "type": "string",
            "enum": ["JS_NORMAL", "JS_STRING", "JS_NUMBER"]
          },
          "lazy": { "type": "boolean" },
          "unverifiedLazy": { "type": "boolean" },
          "weak": { "type": "boolean" },
          "debugRedact": { "type": "boolean" },
          "targetsList": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "TARGET_TYPE_UNKNOWN",
                "TARGET_TYPE_FILE",
                "TARGET_TYPE_EXTENSION_RANGE",
                "TARGET_TYPE_MESSAGE",
                "TARGET_TYPE_FIELD",
                "TARGET_TYPE_ONEOF",
                "TARGET_TYPE_ENUM",
                "TARGET_TYPE_ENUM_ENTRY",
                "TARGET_TYPE_SERVICE",
                "TARGET_TYPE_METHOD"
              ]
            }
          },
          "targetsCount": { "type": "integer", "format": "int32" },
          "deprecated": { "type": "boolean" },
          "retention": {
            "type": "string",
            "enum": [
              "RETENTION_UNKNOWN",
              "RETENTION_RUNTIME",
              "RETENTION_SOURCE"
            ]
          },
          "defaultInstanceForType": { "$ref": "#/components/schemas/Message" },
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "initialized": { "type": "boolean" }
        }
      },
      "FileDescriptor": {
        "type": "object",
        "properties": {
          "proto": { "$ref": "#/components/schemas/FileDescriptorProto" },
          "messageTypes": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Descriptor" }
          },
          "enumTypes": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/EnumDescriptor" }
          },
          "services": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ServiceDescriptor" }
          },
          "extensions": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/FieldDescriptor" }
          },
          "dependencies": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/FileDescriptor" }
          },
          "publicDependencies": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/FileDescriptor" }
          },
          "fullName": { "type": "string" },
          "name": { "type": "string" },
          "package": { "type": "string" },
          "file": { "$ref": "#/components/schemas/FileDescriptor" },
          "syntax": {
            "type": "string",
            "deprecated": true,
            "enum": ["UNKNOWN", "PROTO2", "PROTO3"]
          },
          "options": { "$ref": "#/components/schemas/FileOptions" }
        }
      },
      "FileDescriptorProto": {
        "type": "object",
        "properties": {
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "name": { "type": "string" },
          "package": { "type": "string" },
          "syntax": { "type": "string" },
          "enumTypeCount": { "type": "integer", "format": "int32" },
          "extensionCount": { "type": "integer", "format": "int32" },
          "extensionList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/FieldDescriptorProto" }
          },
          "extensionOrBuilderList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldDescriptorProtoOrBuilder"
            }
          },
          "enumTypeList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/EnumDescriptorProto" }
          },
          "enumTypeOrBuilderList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnumDescriptorProtoOrBuilder"
            }
          },
          "optionsOrBuilder": {
            "$ref": "#/components/schemas/FileOptionsOrBuilder"
          },
          "packageBytes": { "$ref": "#/components/schemas/ByteString" },
          "dependencyList": {
            "type": "array",
            "properties": { "empty": { "type": "boolean" } },
            "items": { "type": "string" }
          },
          "publicDependencyList": {
            "type": "array",
            "items": { "type": "integer", "format": "int32" }
          },
          "weakDependencyList": {
            "type": "array",
            "items": { "type": "integer", "format": "int32" }
          },
          "weakDependencyCount": { "type": "integer", "format": "int32" },
          "messageTypeList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/DescriptorProto" }
          },
          "messageTypeOrBuilderList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/DescriptorProtoOrBuilder" }
          },
          "serviceList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ServiceDescriptorProto" }
          },
          "serviceOrBuilderList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceDescriptorProtoOrBuilder"
            }
          },
          "sourceCodeInfo": { "$ref": "#/components/schemas/SourceCodeInfo" },
          "sourceCodeInfoOrBuilder": {
            "$ref": "#/components/schemas/SourceCodeInfoOrBuilder"
          },
          "syntaxBytes": { "$ref": "#/components/schemas/ByteString" },
          "edition": { "type": "string" },
          "editionBytes": { "$ref": "#/components/schemas/ByteString" },
          "nameBytes": { "$ref": "#/components/schemas/ByteString" },
          "publicDependencyCount": { "type": "integer", "format": "int32" },
          "dependencyCount": { "type": "integer", "format": "int32" },
          "messageTypeCount": { "type": "integer", "format": "int32" },
          "serviceCount": { "type": "integer", "format": "int32" },
          "options": { "$ref": "#/components/schemas/FileOptions" },
          "initialized": { "type": "boolean" },
          "parserForType": {
            "$ref": "#/components/schemas/ParserFileDescriptorProto"
          },
          "defaultInstanceForType": {
            "$ref": "#/components/schemas/FileDescriptorProto"
          },
          "serializedSize": { "type": "integer", "format": "int32" },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "memoizedSerializedSize": {
            "type": "integer",
            "format": "int32",
            "writeOnly": true
          }
        }
      },
      "FileOptions": {
        "type": "object",
        "properties": {
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "javaStringCheckUtf8": { "type": "boolean" },
          "javaPackage": { "type": "string" },
          "javaPackageBytes": { "$ref": "#/components/schemas/ByteString" },
          "javaOuterClassname": { "type": "string" },
          "javaMultipleFiles": { "type": "boolean" },
          "javaGenerateEqualsAndHash": {
            "type": "boolean",
            "deprecated": true
          },
          "optimizeFor": {
            "type": "string",
            "enum": ["SPEED", "CODE_SIZE", "LITE_RUNTIME"]
          },
          "goPackage": { "type": "string" },
          "goPackageBytes": { "$ref": "#/components/schemas/ByteString" },
          "ccGenericServices": { "type": "boolean" },
          "javaGenericServices": { "type": "boolean" },
          "pyGenericServices": { "type": "boolean" },
          "phpGenericServices": { "type": "boolean" },
          "ccEnableArenas": { "type": "boolean" },
          "objcClassPrefix": { "type": "string" },
          "objcClassPrefixBytes": { "$ref": "#/components/schemas/ByteString" },
          "csharpNamespace": { "type": "string" },
          "csharpNamespaceBytes": { "$ref": "#/components/schemas/ByteString" },
          "swiftPrefix": { "type": "string" },
          "swiftPrefixBytes": { "$ref": "#/components/schemas/ByteString" },
          "phpClassPrefix": { "type": "string" },
          "phpClassPrefixBytes": { "$ref": "#/components/schemas/ByteString" },
          "phpNamespace": { "type": "string" },
          "phpNamespaceBytes": { "$ref": "#/components/schemas/ByteString" },
          "phpMetadataNamespace": { "type": "string" },
          "phpMetadataNamespaceBytes": {
            "$ref": "#/components/schemas/ByteString"
          },
          "rubyPackage": { "type": "string" },
          "rubyPackageBytes": { "$ref": "#/components/schemas/ByteString" },
          "uninterpretedOptionList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UninterpretedOption" }
          },
          "uninterpretedOptionOrBuilderList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UninterpretedOptionOrBuilder"
            }
          },
          "uninterpretedOptionCount": { "type": "integer", "format": "int32" },
          "javaOuterClassnameBytes": {
            "$ref": "#/components/schemas/ByteString"
          },
          "initialized": { "type": "boolean" },
          "deprecated": { "type": "boolean" },
          "parserForType": { "$ref": "#/components/schemas/ParserFileOptions" },
          "defaultInstanceForType": {
            "$ref": "#/components/schemas/FileOptions"
          },
          "serializedSize": { "type": "integer", "format": "int32" },
          "allFieldsRaw": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "memoizedSerializedSize": {
            "type": "integer",
            "format": "int32",
            "writeOnly": true
          }
        }
      },
      "FileOptionsOrBuilder": {
        "type": "object",
        "properties": {
          "javaStringCheckUtf8": { "type": "boolean" },
          "javaPackage": { "type": "string" },
          "javaPackageBytes": { "$ref": "#/components/schemas/ByteString" },
          "javaOuterClassname": { "type": "string" },
          "javaMultipleFiles": { "type": "boolean" },
          "javaGenerateEqualsAndHash": {
            "type": "boolean",
            "deprecated": true
          },
          "optimizeFor": {
            "type": "string",
            "enum": ["SPEED", "CODE_SIZE", "LITE_RUNTIME"]
          },
          "goPackage": { "type": "string" },
          "goPackageBytes": { "$ref": "#/components/schemas/ByteString" },
          "ccGenericServices": { "type": "boolean" },
          "javaGenericServices": { "type": "boolean" },
          "pyGenericServices": { "type": "boolean" },
          "phpGenericServices": { "type": "boolean" },
          "ccEnableArenas": { "type": "boolean" },
          "objcClassPrefix": { "type": "string" },
          "objcClassPrefixBytes": { "$ref": "#/components/schemas/ByteString" },
          "csharpNamespace": { "type": "string" },
          "csharpNamespaceBytes": { "$ref": "#/components/schemas/ByteString" },
          "swiftPrefix": { "type": "string" },
          "swiftPrefixBytes": { "$ref": "#/components/schemas/ByteString" },
          "phpClassPrefix": { "type": "string" },
          "phpClassPrefixBytes": { "$ref": "#/components/schemas/ByteString" },
          "phpNamespace": { "type": "string" },
          "phpNamespaceBytes": { "$ref": "#/components/schemas/ByteString" },
          "phpMetadataNamespace": { "type": "string" },
          "phpMetadataNamespaceBytes": {
            "$ref": "#/components/schemas/ByteString"
          },
          "rubyPackage": { "type": "string" },
          "rubyPackageBytes": { "$ref": "#/components/schemas/ByteString" },
          "uninterpretedOptionList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UninterpretedOption" }
          },
          "uninterpretedOptionOrBuilderList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UninterpretedOptionOrBuilder"
            }
          },
          "uninterpretedOptionCount": { "type": "integer", "format": "int32" },
          "javaOuterClassnameBytes": {
            "$ref": "#/components/schemas/ByteString"
          },
          "deprecated": { "type": "boolean" },
          "defaultInstanceForType": { "$ref": "#/components/schemas/Message" },
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "initialized": { "type": "boolean" }
        }
      },
      "Location": {
        "type": "object",
        "properties": {
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "pathCount": { "type": "integer", "format": "int32" },
          "spanList": {
            "type": "array",
            "items": { "type": "integer", "format": "int32" }
          },
          "spanCount": { "type": "integer", "format": "int32" },
          "leadingComments": { "type": "string" },
          "leadingCommentsBytes": { "$ref": "#/components/schemas/ByteString" },
          "trailingComments": { "type": "string" },
          "trailingCommentsBytes": {
            "$ref": "#/components/schemas/ByteString"
          },
          "leadingDetachedCommentsList": {
            "type": "array",
            "properties": { "empty": { "type": "boolean" } },
            "items": { "type": "string" }
          },
          "leadingDetachedCommentsCount": {
            "type": "integer",
            "format": "int32"
          },
          "initialized": { "type": "boolean" },
          "parserForType": { "$ref": "#/components/schemas/ParserLocation" },
          "defaultInstanceForType": { "$ref": "#/components/schemas/Location" },
          "serializedSize": { "type": "integer", "format": "int32" },
          "pathList": {
            "type": "array",
            "items": { "type": "integer", "format": "int32" }
          },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "memoizedSerializedSize": {
            "type": "integer",
            "format": "int32",
            "writeOnly": true
          }
        }
      },
      "LocationOrBuilder": {
        "type": "object",
        "properties": {
          "pathCount": { "type": "integer", "format": "int32" },
          "spanList": {
            "type": "array",
            "items": { "type": "integer", "format": "int32" }
          },
          "spanCount": { "type": "integer", "format": "int32" },
          "leadingComments": { "type": "string" },
          "leadingCommentsBytes": { "$ref": "#/components/schemas/ByteString" },
          "trailingComments": { "type": "string" },
          "trailingCommentsBytes": {
            "$ref": "#/components/schemas/ByteString"
          },
          "leadingDetachedCommentsList": {
            "type": "array",
            "items": { "type": "string" }
          },
          "leadingDetachedCommentsCount": {
            "type": "integer",
            "format": "int32"
          },
          "pathList": {
            "type": "array",
            "items": { "type": "integer", "format": "int32" }
          },
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "defaultInstanceForType": { "$ref": "#/components/schemas/Message" },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "initialized": { "type": "boolean" }
        }
      },
      "Message": {
        "type": "object",
        "properties": {
          "parserForType": { "$ref": "#/components/schemas/ParserMessage" },
          "serializedSize": { "type": "integer", "format": "int32" },
          "initialized": { "type": "boolean" },
          "defaultInstanceForType": {
            "$ref": "#/components/schemas/MessageLite"
          },
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" }
        }
      },
      "MessageLite": {
        "type": "object",
        "properties": {
          "parserForType": { "$ref": "#/components/schemas/ParserMessageLite" },
          "serializedSize": { "type": "integer", "format": "int32" },
          "initialized": { "type": "boolean" },
          "defaultInstanceForType": {
            "$ref": "#/components/schemas/MessageLite"
          }
        }
      },
      "MessageOptions": {
        "type": "object",
        "properties": {
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "messageSetWireFormat": { "type": "boolean" },
          "mapEntry": { "type": "boolean" },
          "noStandardDescriptorAccessor": { "type": "boolean" },
          "deprecatedLegacyJsonFieldConflicts": {
            "type": "boolean",
            "deprecated": true
          },
          "uninterpretedOptionList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UninterpretedOption" }
          },
          "uninterpretedOptionOrBuilderList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UninterpretedOptionOrBuilder"
            }
          },
          "uninterpretedOptionCount": { "type": "integer", "format": "int32" },
          "initialized": { "type": "boolean" },
          "deprecated": { "type": "boolean" },
          "parserForType": {
            "$ref": "#/components/schemas/ParserMessageOptions"
          },
          "defaultInstanceForType": {
            "$ref": "#/components/schemas/MessageOptions"
          },
          "serializedSize": { "type": "integer", "format": "int32" },
          "allFieldsRaw": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "memoizedSerializedSize": {
            "type": "integer",
            "format": "int32",
            "writeOnly": true
          }
        }
      },
      "MessageOptionsOrBuilder": {
        "type": "object",
        "properties": {
          "messageSetWireFormat": { "type": "boolean" },
          "mapEntry": { "type": "boolean" },
          "noStandardDescriptorAccessor": { "type": "boolean" },
          "deprecatedLegacyJsonFieldConflicts": {
            "type": "boolean",
            "deprecated": true
          },
          "uninterpretedOptionList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UninterpretedOption" }
          },
          "uninterpretedOptionOrBuilderList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UninterpretedOptionOrBuilder"
            }
          },
          "uninterpretedOptionCount": { "type": "integer", "format": "int32" },
          "deprecated": { "type": "boolean" },
          "defaultInstanceForType": { "$ref": "#/components/schemas/Message" },
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "initialized": { "type": "boolean" }
        }
      },
      "MethodDescriptor": {
        "type": "object",
        "properties": {
          "index": { "type": "integer", "format": "int32" },
          "proto": { "$ref": "#/components/schemas/MethodDescriptorProto" },
          "fullName": { "type": "string" },
          "file": { "$ref": "#/components/schemas/FileDescriptor" },
          "service": { "$ref": "#/components/schemas/ServiceDescriptor" },
          "inputType": { "$ref": "#/components/schemas/Descriptor" },
          "outputType": { "$ref": "#/components/schemas/Descriptor" },
          "name": { "type": "string" },
          "clientStreaming": { "type": "boolean" },
          "serverStreaming": { "type": "boolean" },
          "options": { "$ref": "#/components/schemas/MethodOptions" }
        }
      },
      "MethodDescriptorProto": {
        "type": "object",
        "properties": {
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "name": { "type": "string" },
          "outputType": { "type": "string" },
          "inputType": { "type": "string" },
          "optionsOrBuilder": {
            "$ref": "#/components/schemas/MethodOptionsOrBuilder"
          },
          "nameBytes": { "$ref": "#/components/schemas/ByteString" },
          "inputTypeBytes": { "$ref": "#/components/schemas/ByteString" },
          "outputTypeBytes": { "$ref": "#/components/schemas/ByteString" },
          "clientStreaming": { "type": "boolean" },
          "serverStreaming": { "type": "boolean" },
          "options": { "$ref": "#/components/schemas/MethodOptions" },
          "initialized": { "type": "boolean" },
          "parserForType": {
            "$ref": "#/components/schemas/ParserMethodDescriptorProto"
          },
          "defaultInstanceForType": {
            "$ref": "#/components/schemas/MethodDescriptorProto"
          },
          "serializedSize": { "type": "integer", "format": "int32" },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "memoizedSerializedSize": {
            "type": "integer",
            "format": "int32",
            "writeOnly": true
          }
        }
      },
      "MethodDescriptorProtoOrBuilder": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "outputType": { "type": "string" },
          "inputType": { "type": "string" },
          "optionsOrBuilder": {
            "$ref": "#/components/schemas/MethodOptionsOrBuilder"
          },
          "nameBytes": { "$ref": "#/components/schemas/ByteString" },
          "inputTypeBytes": { "$ref": "#/components/schemas/ByteString" },
          "outputTypeBytes": { "$ref": "#/components/schemas/ByteString" },
          "clientStreaming": { "type": "boolean" },
          "serverStreaming": { "type": "boolean" },
          "options": { "$ref": "#/components/schemas/MethodOptions" },
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "defaultInstanceForType": { "$ref": "#/components/schemas/Message" },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "initialized": { "type": "boolean" }
        }
      },
      "MethodOptions": {
        "type": "object",
        "properties": {
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "uninterpretedOptionList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UninterpretedOption" }
          },
          "uninterpretedOptionOrBuilderList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UninterpretedOptionOrBuilder"
            }
          },
          "uninterpretedOptionCount": { "type": "integer", "format": "int32" },
          "idempotencyLevel": {
            "type": "string",
            "enum": ["IDEMPOTENCY_UNKNOWN", "NO_SIDE_EFFECTS", "IDEMPOTENT"]
          },
          "initialized": { "type": "boolean" },
          "deprecated": { "type": "boolean" },
          "parserForType": {
            "$ref": "#/components/schemas/ParserMethodOptions"
          },
          "defaultInstanceForType": {
            "$ref": "#/components/schemas/MethodOptions"
          },
          "serializedSize": { "type": "integer", "format": "int32" },
          "allFieldsRaw": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "memoizedSerializedSize": {
            "type": "integer",
            "format": "int32",
            "writeOnly": true
          }
        }
      },
      "MethodOptionsOrBuilder": {
        "type": "object",
        "properties": {
          "uninterpretedOptionList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UninterpretedOption" }
          },
          "uninterpretedOptionOrBuilderList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UninterpretedOptionOrBuilder"
            }
          },
          "uninterpretedOptionCount": { "type": "integer", "format": "int32" },
          "idempotencyLevel": {
            "type": "string",
            "enum": ["IDEMPOTENCY_UNKNOWN", "NO_SIDE_EFFECTS", "IDEMPOTENT"]
          },
          "deprecated": { "type": "boolean" },
          "defaultInstanceForType": { "$ref": "#/components/schemas/Message" },
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "initialized": { "type": "boolean" }
        }
      },
      "NamePart": {
        "type": "object",
        "properties": {
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "namePart": { "type": "string" },
          "namePartBytes": { "$ref": "#/components/schemas/ByteString" },
          "isExtension": { "type": "boolean" },
          "initialized": { "type": "boolean" },
          "parserForType": { "$ref": "#/components/schemas/ParserNamePart" },
          "defaultInstanceForType": { "$ref": "#/components/schemas/NamePart" },
          "serializedSize": { "type": "integer", "format": "int32" },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "memoizedSerializedSize": {
            "type": "integer",
            "format": "int32",
            "writeOnly": true
          }
        }
      },
      "NamePartOrBuilder": {
        "type": "object",
        "properties": {
          "namePart": { "type": "string" },
          "namePartBytes": { "$ref": "#/components/schemas/ByteString" },
          "isExtension": { "type": "boolean" },
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "defaultInstanceForType": { "$ref": "#/components/schemas/Message" },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "initialized": { "type": "boolean" }
        }
      },
      "OneofDescriptor": {
        "type": "object",
        "properties": {
          "index": { "type": "integer", "format": "int32" },
          "proto": { "$ref": "#/components/schemas/OneofDescriptorProto" },
          "fullName": { "type": "string" },
          "file": { "$ref": "#/components/schemas/FileDescriptor" },
          "containingType": { "$ref": "#/components/schemas/Descriptor" },
          "fieldCount": { "type": "integer", "format": "int32" },
          "fields": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/FieldDescriptor" }
          },
          "name": { "type": "string" },
          "synthetic": { "type": "boolean" },
          "options": { "$ref": "#/components/schemas/OneofOptions" }
        }
      },
      "OneofDescriptorProto": {
        "type": "object",
        "properties": {
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "name": { "type": "string" },
          "optionsOrBuilder": {
            "$ref": "#/components/schemas/OneofOptionsOrBuilder"
          },
          "nameBytes": { "$ref": "#/components/schemas/ByteString" },
          "options": { "$ref": "#/components/schemas/OneofOptions" },
          "initialized": { "type": "boolean" },
          "parserForType": {
            "$ref": "#/components/schemas/ParserOneofDescriptorProto"
          },
          "defaultInstanceForType": {
            "$ref": "#/components/schemas/OneofDescriptorProto"
          },
          "serializedSize": { "type": "integer", "format": "int32" },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "memoizedSerializedSize": {
            "type": "integer",
            "format": "int32",
            "writeOnly": true
          }
        }
      },
      "OneofDescriptorProtoOrBuilder": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "optionsOrBuilder": {
            "$ref": "#/components/schemas/OneofOptionsOrBuilder"
          },
          "nameBytes": { "$ref": "#/components/schemas/ByteString" },
          "options": { "$ref": "#/components/schemas/OneofOptions" },
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "defaultInstanceForType": { "$ref": "#/components/schemas/Message" },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "initialized": { "type": "boolean" }
        }
      },
      "OneofOptions": {
        "type": "object",
        "properties": {
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "uninterpretedOptionList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UninterpretedOption" }
          },
          "uninterpretedOptionOrBuilderList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UninterpretedOptionOrBuilder"
            }
          },
          "uninterpretedOptionCount": { "type": "integer", "format": "int32" },
          "initialized": { "type": "boolean" },
          "parserForType": {
            "$ref": "#/components/schemas/ParserOneofOptions"
          },
          "defaultInstanceForType": {
            "$ref": "#/components/schemas/OneofOptions"
          },
          "serializedSize": { "type": "integer", "format": "int32" },
          "allFieldsRaw": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "memoizedSerializedSize": {
            "type": "integer",
            "format": "int32",
            "writeOnly": true
          }
        }
      },
      "OneofOptionsOrBuilder": {
        "type": "object",
        "properties": {
          "uninterpretedOptionList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UninterpretedOption" }
          },
          "uninterpretedOptionOrBuilderList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UninterpretedOptionOrBuilder"
            }
          },
          "uninterpretedOptionCount": { "type": "integer", "format": "int32" },
          "defaultInstanceForType": { "$ref": "#/components/schemas/Message" },
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "initialized": { "type": "boolean" }
        }
      },
      "Parser": { "type": "object" },
      "ParserCollectorHostnames": { "type": "object" },
      "ParserDeclaration": { "type": "object" },
      "ParserDescriptorProto": { "type": "object" },
      "ParserEnumDescriptorProto": { "type": "object" },
      "ParserEnumOptions": { "type": "object" },
      "ParserEnumReservedRange": { "type": "object" },
      "ParserEnumValueDescriptorProto": { "type": "object" },
      "ParserEnumValueOptions": { "type": "object" },
      "ParserExtensionRange": { "type": "object" },
      "ParserExtensionRangeOptions": { "type": "object" },
      "ParserFieldDescriptorProto": { "type": "object" },
      "ParserFieldOptions": { "type": "object" },
      "ParserFileDescriptorProto": { "type": "object" },
      "ParserFileOptions": { "type": "object" },
      "ParserLocation": { "type": "object" },
      "ParserMessage": { "type": "object" },
      "ParserMessageLite": { "type": "object" },
      "ParserMessageOptions": { "type": "object" },
      "ParserMethodDescriptorProto": { "type": "object" },
      "ParserMethodOptions": { "type": "object" },
      "ParserNamePart": { "type": "object" },
      "ParserOneofDescriptorProto": { "type": "object" },
      "ParserOneofOptions": { "type": "object" },
      "ParserReservedRange": { "type": "object" },
      "ParserServiceDescriptorProto": { "type": "object" },
      "ParserServiceOptions": { "type": "object" },
      "ParserSourceCodeInfo": { "type": "object" },
      "ParserUninterpretedOption": { "type": "object" },
      "ReservedRange": {
        "type": "object",
        "properties": {
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "initialized": { "type": "boolean" },
          "parserForType": {
            "$ref": "#/components/schemas/ParserReservedRange"
          },
          "defaultInstanceForType": {
            "$ref": "#/components/schemas/ReservedRange"
          },
          "serializedSize": { "type": "integer", "format": "int32" },
          "start": { "type": "integer", "format": "int32" },
          "end": { "type": "integer", "format": "int32" },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "memoizedSerializedSize": {
            "type": "integer",
            "format": "int32",
            "writeOnly": true
          }
        }
      },
      "ReservedRangeOrBuilder": {
        "type": "object",
        "properties": {
          "start": { "type": "integer", "format": "int32" },
          "end": { "type": "integer", "format": "int32" },
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "defaultInstanceForType": { "$ref": "#/components/schemas/Message" },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "initialized": { "type": "boolean" }
        }
      },
      "ServiceDescriptor": {
        "type": "object",
        "properties": {
          "index": { "type": "integer", "format": "int32" },
          "proto": { "$ref": "#/components/schemas/ServiceDescriptorProto" },
          "fullName": { "type": "string" },
          "file": { "$ref": "#/components/schemas/FileDescriptor" },
          "methods": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/MethodDescriptor" }
          },
          "name": { "type": "string" },
          "options": { "$ref": "#/components/schemas/ServiceOptions" }
        }
      },
      "ServiceDescriptorProto": {
        "type": "object",
        "properties": {
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "name": { "type": "string" },
          "methodList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/MethodDescriptorProto" }
          },
          "methodOrBuilderList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MethodDescriptorProtoOrBuilder"
            }
          },
          "optionsOrBuilder": {
            "$ref": "#/components/schemas/ServiceOptionsOrBuilder"
          },
          "nameBytes": { "$ref": "#/components/schemas/ByteString" },
          "methodCount": { "type": "integer", "format": "int32" },
          "options": { "$ref": "#/components/schemas/ServiceOptions" },
          "initialized": { "type": "boolean" },
          "parserForType": {
            "$ref": "#/components/schemas/ParserServiceDescriptorProto"
          },
          "defaultInstanceForType": {
            "$ref": "#/components/schemas/ServiceDescriptorProto"
          },
          "serializedSize": { "type": "integer", "format": "int32" },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "memoizedSerializedSize": {
            "type": "integer",
            "format": "int32",
            "writeOnly": true
          }
        }
      },
      "ServiceDescriptorProtoOrBuilder": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "methodList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/MethodDescriptorProto" }
          },
          "methodOrBuilderList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MethodDescriptorProtoOrBuilder"
            }
          },
          "optionsOrBuilder": {
            "$ref": "#/components/schemas/ServiceOptionsOrBuilder"
          },
          "nameBytes": { "$ref": "#/components/schemas/ByteString" },
          "methodCount": { "type": "integer", "format": "int32" },
          "options": { "$ref": "#/components/schemas/ServiceOptions" },
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "defaultInstanceForType": { "$ref": "#/components/schemas/Message" },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "initialized": { "type": "boolean" }
        }
      },
      "ServiceOptions": {
        "type": "object",
        "properties": {
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "uninterpretedOptionList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UninterpretedOption" }
          },
          "uninterpretedOptionOrBuilderList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UninterpretedOptionOrBuilder"
            }
          },
          "uninterpretedOptionCount": { "type": "integer", "format": "int32" },
          "initialized": { "type": "boolean" },
          "deprecated": { "type": "boolean" },
          "parserForType": {
            "$ref": "#/components/schemas/ParserServiceOptions"
          },
          "defaultInstanceForType": {
            "$ref": "#/components/schemas/ServiceOptions"
          },
          "serializedSize": { "type": "integer", "format": "int32" },
          "allFieldsRaw": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "memoizedSerializedSize": {
            "type": "integer",
            "format": "int32",
            "writeOnly": true
          }
        }
      },
      "ServiceOptionsOrBuilder": {
        "type": "object",
        "properties": {
          "uninterpretedOptionList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UninterpretedOption" }
          },
          "uninterpretedOptionOrBuilderList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UninterpretedOptionOrBuilder"
            }
          },
          "uninterpretedOptionCount": { "type": "integer", "format": "int32" },
          "deprecated": { "type": "boolean" },
          "defaultInstanceForType": { "$ref": "#/components/schemas/Message" },
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "initialized": { "type": "boolean" }
        }
      },
      "SourceCodeInfo": {
        "type": "object",
        "properties": {
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "locationOrBuilderList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/LocationOrBuilder" }
          },
          "locationCount": { "type": "integer", "format": "int32" },
          "locationList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Location" }
          },
          "initialized": { "type": "boolean" },
          "parserForType": {
            "$ref": "#/components/schemas/ParserSourceCodeInfo"
          },
          "defaultInstanceForType": {
            "$ref": "#/components/schemas/SourceCodeInfo"
          },
          "serializedSize": { "type": "integer", "format": "int32" },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "memoizedSerializedSize": {
            "type": "integer",
            "format": "int32",
            "writeOnly": true
          }
        }
      },
      "SourceCodeInfoOrBuilder": {
        "type": "object",
        "properties": {
          "locationOrBuilderList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/LocationOrBuilder" }
          },
          "locationCount": { "type": "integer", "format": "int32" },
          "locationList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Location" }
          },
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "defaultInstanceForType": { "$ref": "#/components/schemas/Message" },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "initialized": { "type": "boolean" }
        }
      },
      "UninterpretedOption": {
        "type": "object",
        "properties": {
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "nameCount": { "type": "integer", "format": "int32" },
          "doubleValue": { "type": "number", "format": "double" },
          "negativeIntValue": { "type": "integer", "format": "int64" },
          "aggregateValue": { "type": "string" },
          "aggregateValueBytes": { "$ref": "#/components/schemas/ByteString" },
          "nameList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/NamePart" }
          },
          "nameOrBuilderList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/NamePartOrBuilder" }
          },
          "identifierValueBytes": { "$ref": "#/components/schemas/ByteString" },
          "positiveIntValue": { "type": "integer", "format": "int64" },
          "stringValue": { "$ref": "#/components/schemas/ByteString" },
          "initialized": { "type": "boolean" },
          "identifierValue": { "type": "string" },
          "parserForType": {
            "$ref": "#/components/schemas/ParserUninterpretedOption"
          },
          "defaultInstanceForType": {
            "$ref": "#/components/schemas/UninterpretedOption"
          },
          "serializedSize": { "type": "integer", "format": "int32" },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "memoizedSerializedSize": {
            "type": "integer",
            "format": "int32",
            "writeOnly": true
          }
        }
      },
      "UninterpretedOptionOrBuilder": {
        "type": "object",
        "properties": {
          "nameCount": { "type": "integer", "format": "int32" },
          "doubleValue": { "type": "number", "format": "double" },
          "negativeIntValue": { "type": "integer", "format": "int64" },
          "aggregateValue": { "type": "string" },
          "aggregateValueBytes": { "$ref": "#/components/schemas/ByteString" },
          "nameList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/NamePart" }
          },
          "nameOrBuilderList": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/NamePartOrBuilder" }
          },
          "identifierValueBytes": { "$ref": "#/components/schemas/ByteString" },
          "positiveIntValue": { "type": "integer", "format": "int64" },
          "stringValue": { "$ref": "#/components/schemas/ByteString" },
          "identifierValue": { "type": "string" },
          "unknownFields": { "$ref": "#/components/schemas/UnknownFieldSet" },
          "defaultInstanceForType": { "$ref": "#/components/schemas/Message" },
          "allFields": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "initializationErrorString": { "type": "string" },
          "descriptorForType": { "$ref": "#/components/schemas/Descriptor" },
          "initialized": { "type": "boolean" }
        }
      },
      "UnknownFieldSet": {
        "type": "object",
        "properties": {
          "serializedSizeAsMessageSet": {
            "type": "integer",
            "format": "int32"
          },
          "initialized": { "type": "boolean" },
          "parserForType": { "$ref": "#/components/schemas/Parser" },
          "defaultInstanceForType": {
            "$ref": "#/components/schemas/UnknownFieldSet"
          },
          "serializedSize": { "type": "integer", "format": "int32" }
        }
      },
      "AlertTagRuleFilterVM": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "name": { "type": "string" },
          "conditionField": { "type": "string" },
          "conditionValue": { "type": "string" },
          "ruleActive": { "type": "boolean" },
          "ruleDeleted": { "type": "boolean" },
          "tagIds": {
            "type": "array",
            "items": { "type": "integer", "format": "int64" }
          }
        }
      },
      "AgentDTO": {
        "type": "object",
        "properties": {
          "ip": { "type": "string" },
          "hostname": { "type": "string" },
          "os": { "type": "string" },
          "status": {
            "type": "string",
            "enum": ["ONLINE", "OFFLINE", "UNKNOWN"]
          },
          "platform": { "type": "string" },
          "version": { "type": "string" },
          "agentKey": { "type": "string" },
          "id": { "type": "integer", "format": "int32" },
          "lastSeen": { "type": "string" },
          "mac": { "type": "string" },
          "osMajorVersion": { "type": "string" },
          "osMinorVersion": { "type": "string" },
          "aliases": { "type": "string" },
          "addresses": { "type": "string" }
        }
      },
      "AgentCommandDTO": {
        "type": "object",
        "properties": {
          "createdAt": { "type": "string" },
          "updatedAt": { "type": "string" },
          "agentId": { "type": "integer", "format": "int32" },
          "command": { "type": "string" },
          "commandStatus": { "type": "string" },
          "result": { "type": "string" },
          "executedBy": { "type": "string" },
          "cmdId": { "type": "string" },
          "agent": { "$ref": "#/components/schemas/AgentDTO" },
          "reason": { "type": "string" },
          "originType": { "type": "string" },
          "originId": { "type": "string" }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "ApiKeyAuth": {
        "type": "apiKey",
        "name": "Utm-Internal-Key",
        "in": "header"
      }
    }
  }
}
